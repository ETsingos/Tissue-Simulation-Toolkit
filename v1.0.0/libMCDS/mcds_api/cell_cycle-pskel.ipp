// Copyright (c) 2005-2016 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

namespace cell_cycle
{
  // death_type_pskel
  //

  inline
  death_type_pskel::
  death_type_pskel (::xml_schema::string_pskel* tiein)
  : ::xml_schema::string_pskel (tiein, 0),
    death_type_impl_ (0)
  {
    this->_enumeration_facet (_xsde_death_type_pskel_enums_, 3UL);
  }

  inline
  death_type_pskel::
  death_type_pskel (death_type_pskel* impl, void*)
  : ::xml_schema::string_pskel (impl, 0),
    death_type_impl_ (impl)
  {
    this->_enumeration_facet (_xsde_death_type_pskel_enums_, 3UL);
  }

  // death_rate_type_pskel
  //

  inline
  void death_rate_type_pskel::
  type_parser (::cell_cycle::death_type_pskel& p)
  {
    this->type_parser_ = &p;
  }

  inline
  void death_rate_type_pskel::
  parsers (::xml_schema::string_pskel& units,
           ::xml_schema::string_pskel& measurement_type,
           ::xml_schema::double_pskel& uncertainty,
           ::xml_schema::double_pskel& negative_uncertainty,
           ::xml_schema::double_pskel& positive_uncertainty,
           ::xml_schema::double_pskel& uncertainty_percentage,
           ::xml_schema::double_pskel& negative_uncertainty_percentage,
           ::xml_schema::double_pskel& positive_uncertainty_percentage,
           ::xml_schema::double_pskel& median,
           ::xml_schema::double_pskel& standard_deviation,
           ::common::two_doubles_pskel& interquartile_range,
           ::common::two_doubles_pskel& range,
           ::xml_schema::double_pskel& min,
           ::xml_schema::double_pskel& max,
           ::xml_schema::double_pskel& standard_error,
           ::xml_schema::double_pskel& standard_error_of_the_mean,
           ::xml_schema::int_pskel& number_obs,
           ::xml_schema::double_pskel& skewnesss,
           ::xml_schema::double_pskel& kurtosis,
           ::cell_cycle::death_type_pskel& type)
  {
    this->units_parser_ = &units;
    this->measurement_type_parser_ = &measurement_type;
    this->uncertainty_parser_ = &uncertainty;
    this->negative_uncertainty_parser_ = &negative_uncertainty;
    this->positive_uncertainty_parser_ = &positive_uncertainty;
    this->uncertainty_percentage_parser_ = &uncertainty_percentage;
    this->negative_uncertainty_percentage_parser_ = &negative_uncertainty_percentage;
    this->positive_uncertainty_percentage_parser_ = &positive_uncertainty_percentage;
    this->median_parser_ = &median;
    this->standard_deviation_parser_ = &standard_deviation;
    this->interquartile_range_parser_ = &interquartile_range;
    this->range_parser_ = &range;
    this->min_parser_ = &min;
    this->max_parser_ = &max;
    this->standard_error_parser_ = &standard_error;
    this->standard_error_of_the_mean_parser_ = &standard_error_of_the_mean;
    this->number_obs_parser_ = &number_obs;
    this->skewnesss_parser_ = &skewnesss;
    this->kurtosis_parser_ = &kurtosis;
    this->type_parser_ = &type;
  }

  inline
  death_rate_type_pskel::
  death_rate_type_pskel (::common::units_decimal_nonnegative_pskel* tiein)
  : ::common::units_decimal_nonnegative_pskel (tiein, 0),
    death_rate_type_impl_ (0),
    type_parser_ (0),
    v_state_attr_stack_ (sizeof (v_state_attr_), &v_state_attr_first_)
  {
  }

  inline
  death_rate_type_pskel::
  death_rate_type_pskel (death_rate_type_pskel* impl, void*)
  : ::common::units_decimal_nonnegative_pskel (impl, 0),
    death_rate_type_impl_ (impl),
    type_parser_ (0),
    v_state_attr_stack_ (sizeof (v_state_attr_), &v_state_attr_first_)
  {
  }

  // cell_cycle_arrest_pskel
  //

  inline
  void cell_cycle_arrest_pskel::
  condition_parser (::cell_cycle::arrest_condition_pskel& p)
  {
    this->condition_parser_ = &p;
  }

  inline
  void cell_cycle_arrest_pskel::
  condition_parser (::xml_schema::parser_map& m)
  {
    this->condition_parser_map_ = &m;
  }

  inline
  void cell_cycle_arrest_pskel::
  parsers (::cell_cycle::arrest_condition_pskel& condition)
  {
    this->condition_parser_ = &condition;
  }

  inline
  void cell_cycle_arrest_pskel::
  parser_maps (::xml_schema::parser_map& condition)
  {
    this->condition_parser_map_ = &condition;
  }

  inline
  cell_cycle_arrest_pskel::
  cell_cycle_arrest_pskel ()
  : cell_cycle_arrest_impl_ (0),
    condition_parser_ (0),
    condition_parser_map_ (0),
    v_state_stack_ (sizeof (v_state_), &v_state_first_)
  {
  }

  inline
  cell_cycle_arrest_pskel::
  cell_cycle_arrest_pskel (cell_cycle_arrest_pskel* impl, void*)
  : ::xsde::cxx::parser::validating::complex_content (impl, 0),
    cell_cycle_arrest_impl_ (impl),
    condition_parser_ (0),
    condition_parser_map_ (0),
    v_state_stack_ (sizeof (v_state_), &v_state_first_)
  {
  }

  // transition_pskel
  //

  inline
  void transition_pskel::
  checkpoint_failure_probability_parser (::common::units_decimal_pskel& p)
  {
    this->checkpoint_failure_probability_parser_ = &p;
  }

  inline
  void transition_pskel::
  checkpoint_failure_probability_parser (::xml_schema::parser_map& m)
  {
    this->checkpoint_failure_probability_parser_map_ = &m;
  }

  inline
  void transition_pskel::
  subsequent_phase_parser (::xml_schema::unsigned_long_pskel& p)
  {
    this->subsequent_phase_parser_ = &p;
  }

  inline
  void transition_pskel::
  subsequent_phase_parser (::xml_schema::parser_map& m)
  {
    this->subsequent_phase_parser_map_ = &m;
  }

  inline
  void transition_pskel::
  threshold_parser (::variables::transition_threshold_pskel& p)
  {
    this->threshold_parser_ = &p;
  }

  inline
  void transition_pskel::
  threshold_parser (::xml_schema::parser_map& m)
  {
    this->threshold_parser_map_ = &m;
  }

  inline
  void transition_pskel::
  transition_rate_parser (::common::units_decimal_pskel& p)
  {
    this->transition_rate_parser_ = &p;
  }

  inline
  void transition_pskel::
  transition_rate_parser (::xml_schema::parser_map& m)
  {
    this->transition_rate_parser_map_ = &m;
  }

  inline
  void transition_pskel::
  parsers (::common::units_decimal_pskel& checkpoint_failure_probability,
           ::xml_schema::unsigned_long_pskel& subsequent_phase,
           ::variables::transition_threshold_pskel& threshold,
           ::common::units_decimal_pskel& transition_rate)
  {
    this->checkpoint_failure_probability_parser_ = &checkpoint_failure_probability;
    this->subsequent_phase_parser_ = &subsequent_phase;
    this->threshold_parser_ = &threshold;
    this->transition_rate_parser_ = &transition_rate;
  }

  inline
  void transition_pskel::
  parser_maps (::xml_schema::parser_map& checkpoint_failure_probability,
               ::xml_schema::parser_map& subsequent_phase,
               ::xml_schema::parser_map& threshold,
               ::xml_schema::parser_map& transition_rate)
  {
    this->checkpoint_failure_probability_parser_map_ = &checkpoint_failure_probability;
    this->subsequent_phase_parser_map_ = &subsequent_phase;
    this->threshold_parser_map_ = &threshold;
    this->transition_rate_parser_map_ = &transition_rate;
  }

  inline
  transition_pskel::
  transition_pskel ()
  : transition_impl_ (0),
    checkpoint_failure_probability_parser_ (0),
    checkpoint_failure_probability_parser_map_ (0),
    subsequent_phase_parser_ (0),
    subsequent_phase_parser_map_ (0),
    threshold_parser_ (0),
    threshold_parser_map_ (0),
    transition_rate_parser_ (0),
    transition_rate_parser_map_ (0),
    v_state_stack_ (sizeof (v_state_), &v_state_first_)
  {
  }

  inline
  transition_pskel::
  transition_pskel (transition_pskel* impl, void*)
  : ::xsde::cxx::parser::validating::complex_content (impl, 0),
    transition_impl_ (impl),
    checkpoint_failure_probability_parser_ (0),
    checkpoint_failure_probability_parser_map_ (0),
    subsequent_phase_parser_ (0),
    subsequent_phase_parser_map_ (0),
    threshold_parser_ (0),
    threshold_parser_map_ (0),
    transition_rate_parser_ (0),
    transition_rate_parser_map_ (0),
    v_state_stack_ (sizeof (v_state_), &v_state_first_)
  {
  }

  // cell_cycle_phase_pskel
  //

  inline
  void cell_cycle_phase_pskel::
  name_parser (::xml_schema::string_pskel& p)
  {
    this->name_parser_ = &p;
  }

  inline
  void cell_cycle_phase_pskel::
  ID_parser (::xml_schema::unsigned_long_pskel& p)
  {
    this->ID_parser_ = &p;
  }

  inline
  void cell_cycle_phase_pskel::
  birth_rate_parser (::common::units_decimal_nonnegative_pskel& p)
  {
    this->birth_rate_parser_ = &p;
  }

  inline
  void cell_cycle_phase_pskel::
  birth_rate_parser (::xml_schema::parser_map& m)
  {
    this->birth_rate_parser_map_ = &m;
  }

  inline
  void cell_cycle_phase_pskel::
  duration_parser (::common::units_decimal_nonnegative_pskel& p)
  {
    this->duration_parser_ = &p;
  }

  inline
  void cell_cycle_phase_pskel::
  duration_parser (::xml_schema::parser_map& m)
  {
    this->duration_parser_map_ = &m;
  }

  inline
  void cell_cycle_phase_pskel::
  death_rate_parser (::cell_cycle::death_rate_type_pskel& p)
  {
    this->death_rate_parser_ = &p;
  }

  inline
  void cell_cycle_phase_pskel::
  death_rate_parser (::xml_schema::parser_map& m)
  {
    this->death_rate_parser_map_ = &m;
  }

  inline
  void cell_cycle_phase_pskel::
  net_birth_rate_parser (::common::units_decimal_pskel& p)
  {
    this->net_birth_rate_parser_ = &p;
  }

  inline
  void cell_cycle_phase_pskel::
  net_birth_rate_parser (::xml_schema::parser_map& m)
  {
    this->net_birth_rate_parser_map_ = &m;
  }

  inline
  void cell_cycle_phase_pskel::
  population_doubling_time_parser (::common::units_decimal_nonnegative_pskel& p)
  {
    this->population_doubling_time_parser_ = &p;
  }

  inline
  void cell_cycle_phase_pskel::
  population_doubling_time_parser (::xml_schema::parser_map& m)
  {
    this->population_doubling_time_parser_map_ = &m;
  }

  inline
  void cell_cycle_phase_pskel::
  cell_cycle_arrest_parser (::cell_cycle::cell_cycle_arrest_pskel& p)
  {
    this->cell_cycle_arrest_parser_ = &p;
  }

  inline
  void cell_cycle_phase_pskel::
  cell_cycle_arrest_parser (::xml_schema::parser_map& m)
  {
    this->cell_cycle_arrest_parser_map_ = &m;
  }

  inline
  void cell_cycle_phase_pskel::
  transition_parser (::cell_cycle::transition_pskel& p)
  {
    this->transition_parser_ = &p;
  }

  inline
  void cell_cycle_phase_pskel::
  transition_parser (::xml_schema::parser_map& m)
  {
    this->transition_parser_map_ = &m;
  }

  inline
  void cell_cycle_phase_pskel::
  cell_part_parser (::phenotype_base::cell_parts_pskel& p)
  {
    this->cell_part_parser_ = &p;
  }

  inline
  void cell_cycle_phase_pskel::
  cell_part_parser (::xml_schema::parser_map& m)
  {
    this->cell_part_parser_map_ = &m;
  }

  inline
  void cell_cycle_phase_pskel::
  custom_parser (::common::custom_pskel& p)
  {
    this->custom_parser_ = &p;
  }

  inline
  void cell_cycle_phase_pskel::
  custom_parser (::xml_schema::parser_map& m)
  {
    this->custom_parser_map_ = &m;
  }

  inline
  void cell_cycle_phase_pskel::
  parsers (::xml_schema::string_pskel& name,
           ::xml_schema::unsigned_long_pskel& ID,
           ::common::units_decimal_nonnegative_pskel& birth_rate,
           ::common::units_decimal_nonnegative_pskel& duration,
           ::cell_cycle::death_rate_type_pskel& death_rate,
           ::common::units_decimal_pskel& net_birth_rate,
           ::common::units_decimal_nonnegative_pskel& population_doubling_time,
           ::cell_cycle::cell_cycle_arrest_pskel& cell_cycle_arrest,
           ::cell_cycle::transition_pskel& transition,
           ::phenotype_base::cell_parts_pskel& cell_part,
           ::common::custom_pskel& custom)
  {
    this->name_parser_ = &name;
    this->ID_parser_ = &ID;
    this->birth_rate_parser_ = &birth_rate;
    this->duration_parser_ = &duration;
    this->death_rate_parser_ = &death_rate;
    this->net_birth_rate_parser_ = &net_birth_rate;
    this->population_doubling_time_parser_ = &population_doubling_time;
    this->cell_cycle_arrest_parser_ = &cell_cycle_arrest;
    this->transition_parser_ = &transition;
    this->cell_part_parser_ = &cell_part;
    this->custom_parser_ = &custom;
  }

  inline
  void cell_cycle_phase_pskel::
  parser_maps (::xml_schema::parser_map& birth_rate,
               ::xml_schema::parser_map& duration,
               ::xml_schema::parser_map& death_rate,
               ::xml_schema::parser_map& net_birth_rate,
               ::xml_schema::parser_map& population_doubling_time,
               ::xml_schema::parser_map& cell_cycle_arrest,
               ::xml_schema::parser_map& transition,
               ::xml_schema::parser_map& cell_part,
               ::xml_schema::parser_map& custom)
  {
    this->birth_rate_parser_map_ = &birth_rate;
    this->duration_parser_map_ = &duration;
    this->death_rate_parser_map_ = &death_rate;
    this->net_birth_rate_parser_map_ = &net_birth_rate;
    this->population_doubling_time_parser_map_ = &population_doubling_time;
    this->cell_cycle_arrest_parser_map_ = &cell_cycle_arrest;
    this->transition_parser_map_ = &transition;
    this->cell_part_parser_map_ = &cell_part;
    this->custom_parser_map_ = &custom;
  }

  inline
  cell_cycle_phase_pskel::
  cell_cycle_phase_pskel ()
  : cell_cycle_phase_impl_ (0),
    name_parser_ (0),
    ID_parser_ (0),
    birth_rate_parser_ (0),
    birth_rate_parser_map_ (0),
    duration_parser_ (0),
    duration_parser_map_ (0),
    death_rate_parser_ (0),
    death_rate_parser_map_ (0),
    net_birth_rate_parser_ (0),
    net_birth_rate_parser_map_ (0),
    population_doubling_time_parser_ (0),
    population_doubling_time_parser_map_ (0),
    cell_cycle_arrest_parser_ (0),
    cell_cycle_arrest_parser_map_ (0),
    transition_parser_ (0),
    transition_parser_map_ (0),
    cell_part_parser_ (0),
    cell_part_parser_map_ (0),
    custom_parser_ (0),
    custom_parser_map_ (0),
    v_state_stack_ (sizeof (v_state_), &v_state_first_),
    v_state_attr_stack_ (sizeof (v_state_attr_), &v_state_attr_first_)
  {
  }

  inline
  cell_cycle_phase_pskel::
  cell_cycle_phase_pskel (cell_cycle_phase_pskel* impl, void*)
  : ::xsde::cxx::parser::validating::complex_content (impl, 0),
    cell_cycle_phase_impl_ (impl),
    name_parser_ (0),
    ID_parser_ (0),
    birth_rate_parser_ (0),
    birth_rate_parser_map_ (0),
    duration_parser_ (0),
    duration_parser_map_ (0),
    death_rate_parser_ (0),
    death_rate_parser_map_ (0),
    net_birth_rate_parser_ (0),
    net_birth_rate_parser_map_ (0),
    population_doubling_time_parser_ (0),
    population_doubling_time_parser_map_ (0),
    cell_cycle_arrest_parser_ (0),
    cell_cycle_arrest_parser_map_ (0),
    transition_parser_ (0),
    transition_parser_map_ (0),
    cell_part_parser_ (0),
    cell_part_parser_map_ (0),
    custom_parser_ (0),
    custom_parser_map_ (0),
    v_state_stack_ (sizeof (v_state_), &v_state_first_),
    v_state_attr_stack_ (sizeof (v_state_attr_), &v_state_attr_first_)
  {
  }

  // summary_elements_pskel
  //

  inline
  void summary_elements_pskel::
  birth_rate_parser (::common::units_decimal_nonnegative_pskel& p)
  {
    this->birth_rate_parser_ = &p;
  }

  inline
  void summary_elements_pskel::
  birth_rate_parser (::xml_schema::parser_map& m)
  {
    this->birth_rate_parser_map_ = &m;
  }

  inline
  void summary_elements_pskel::
  duration_parser (::common::units_decimal_nonnegative_pskel& p)
  {
    this->duration_parser_ = &p;
  }

  inline
  void summary_elements_pskel::
  duration_parser (::xml_schema::parser_map& m)
  {
    this->duration_parser_map_ = &m;
  }

  inline
  void summary_elements_pskel::
  death_rate_parser (::cell_cycle::death_rate_type_pskel& p)
  {
    this->death_rate_parser_ = &p;
  }

  inline
  void summary_elements_pskel::
  death_rate_parser (::xml_schema::parser_map& m)
  {
    this->death_rate_parser_map_ = &m;
  }

  inline
  void summary_elements_pskel::
  net_birth_rate_parser (::common::units_decimal_pskel& p)
  {
    this->net_birth_rate_parser_ = &p;
  }

  inline
  void summary_elements_pskel::
  net_birth_rate_parser (::xml_schema::parser_map& m)
  {
    this->net_birth_rate_parser_map_ = &m;
  }

  inline
  void summary_elements_pskel::
  population_doubling_time_parser (::common::units_decimal_nonnegative_pskel& p)
  {
    this->population_doubling_time_parser_ = &p;
  }

  inline
  void summary_elements_pskel::
  population_doubling_time_parser (::xml_schema::parser_map& m)
  {
    this->population_doubling_time_parser_map_ = &m;
  }

  inline
  void summary_elements_pskel::
  parsers (::common::units_decimal_nonnegative_pskel& birth_rate,
           ::common::units_decimal_nonnegative_pskel& duration,
           ::cell_cycle::death_rate_type_pskel& death_rate,
           ::common::units_decimal_pskel& net_birth_rate,
           ::common::units_decimal_nonnegative_pskel& population_doubling_time)
  {
    this->birth_rate_parser_ = &birth_rate;
    this->duration_parser_ = &duration;
    this->death_rate_parser_ = &death_rate;
    this->net_birth_rate_parser_ = &net_birth_rate;
    this->population_doubling_time_parser_ = &population_doubling_time;
  }

  inline
  void summary_elements_pskel::
  parser_maps (::xml_schema::parser_map& birth_rate,
               ::xml_schema::parser_map& duration,
               ::xml_schema::parser_map& death_rate,
               ::xml_schema::parser_map& net_birth_rate,
               ::xml_schema::parser_map& population_doubling_time)
  {
    this->birth_rate_parser_map_ = &birth_rate;
    this->duration_parser_map_ = &duration;
    this->death_rate_parser_map_ = &death_rate;
    this->net_birth_rate_parser_map_ = &net_birth_rate;
    this->population_doubling_time_parser_map_ = &population_doubling_time;
  }

  inline
  summary_elements_pskel::
  summary_elements_pskel ()
  : summary_elements_impl_ (0),
    birth_rate_parser_ (0),
    birth_rate_parser_map_ (0),
    duration_parser_ (0),
    duration_parser_map_ (0),
    death_rate_parser_ (0),
    death_rate_parser_map_ (0),
    net_birth_rate_parser_ (0),
    net_birth_rate_parser_map_ (0),
    population_doubling_time_parser_ (0),
    population_doubling_time_parser_map_ (0),
    v_state_stack_ (sizeof (v_state_), &v_state_first_)
  {
  }

  inline
  summary_elements_pskel::
  summary_elements_pskel (summary_elements_pskel* impl, void*)
  : ::xsde::cxx::parser::validating::complex_content (impl, 0),
    summary_elements_impl_ (impl),
    birth_rate_parser_ (0),
    birth_rate_parser_map_ (0),
    duration_parser_ (0),
    duration_parser_map_ (0),
    death_rate_parser_ (0),
    death_rate_parser_map_ (0),
    net_birth_rate_parser_ (0),
    net_birth_rate_parser_map_ (0),
    population_doubling_time_parser_ (0),
    population_doubling_time_parser_map_ (0),
    v_state_stack_ (sizeof (v_state_), &v_state_first_)
  {
  }

  // cell_cycle_pskel
  //

  inline
  void cell_cycle_pskel::
  model_parser (::xml_schema::string_pskel& p)
  {
    this->model_parser_ = &p;
  }

  inline
  void cell_cycle_pskel::
  ID_parser (::xml_schema::unsigned_long_pskel& p)
  {
    this->ID_parser_ = &p;
  }

  inline
  void cell_cycle_pskel::
  cell_cycle_phase_parser (::cell_cycle::cell_cycle_phase_pskel& p)
  {
    this->cell_cycle_phase_parser_ = &p;
  }

  inline
  void cell_cycle_pskel::
  cell_cycle_phase_parser (::xml_schema::parser_map& m)
  {
    this->cell_cycle_phase_parser_map_ = &m;
  }

  inline
  void cell_cycle_pskel::
  cell_death_parser (::cell_cycle::cell_death_pskel& p)
  {
    this->cell_death_parser_ = &p;
  }

  inline
  void cell_cycle_pskel::
  cell_death_parser (::xml_schema::parser_map& m)
  {
    this->cell_death_parser_map_ = &m;
  }

  inline
  void cell_cycle_pskel::
  summary_elements_parser (::cell_cycle::summary_elements_pskel& p)
  {
    this->summary_elements_parser_ = &p;
  }

  inline
  void cell_cycle_pskel::
  summary_elements_parser (::xml_schema::parser_map& m)
  {
    this->summary_elements_parser_map_ = &m;
  }

  inline
  void cell_cycle_pskel::
  custom_parser (::common::custom_pskel& p)
  {
    this->custom_parser_ = &p;
  }

  inline
  void cell_cycle_pskel::
  custom_parser (::xml_schema::parser_map& m)
  {
    this->custom_parser_map_ = &m;
  }

  inline
  void cell_cycle_pskel::
  parsers (::xml_schema::string_pskel& model,
           ::xml_schema::unsigned_long_pskel& ID,
           ::cell_cycle::cell_cycle_phase_pskel& cell_cycle_phase,
           ::cell_cycle::cell_death_pskel& cell_death,
           ::cell_cycle::summary_elements_pskel& summary_elements,
           ::common::custom_pskel& custom)
  {
    this->model_parser_ = &model;
    this->ID_parser_ = &ID;
    this->cell_cycle_phase_parser_ = &cell_cycle_phase;
    this->cell_death_parser_ = &cell_death;
    this->summary_elements_parser_ = &summary_elements;
    this->custom_parser_ = &custom;
  }

  inline
  void cell_cycle_pskel::
  parser_maps (::xml_schema::parser_map& cell_cycle_phase,
               ::xml_schema::parser_map& cell_death,
               ::xml_schema::parser_map& summary_elements,
               ::xml_schema::parser_map& custom)
  {
    this->cell_cycle_phase_parser_map_ = &cell_cycle_phase;
    this->cell_death_parser_map_ = &cell_death;
    this->summary_elements_parser_map_ = &summary_elements;
    this->custom_parser_map_ = &custom;
  }

  inline
  cell_cycle_pskel::
  cell_cycle_pskel ()
  : cell_cycle_impl_ (0),
    model_parser_ (0),
    ID_parser_ (0),
    cell_cycle_phase_parser_ (0),
    cell_cycle_phase_parser_map_ (0),
    cell_death_parser_ (0),
    cell_death_parser_map_ (0),
    summary_elements_parser_ (0),
    summary_elements_parser_map_ (0),
    custom_parser_ (0),
    custom_parser_map_ (0),
    v_state_stack_ (sizeof (v_state_), &v_state_first_),
    v_state_attr_stack_ (sizeof (v_state_attr_), &v_state_attr_first_)
  {
  }

  inline
  cell_cycle_pskel::
  cell_cycle_pskel (cell_cycle_pskel* impl, void*)
  : ::xsde::cxx::parser::validating::complex_content (impl, 0),
    cell_cycle_impl_ (impl),
    model_parser_ (0),
    ID_parser_ (0),
    cell_cycle_phase_parser_ (0),
    cell_cycle_phase_parser_map_ (0),
    cell_death_parser_ (0),
    cell_death_parser_map_ (0),
    summary_elements_parser_ (0),
    summary_elements_parser_map_ (0),
    custom_parser_ (0),
    custom_parser_map_ (0),
    v_state_stack_ (sizeof (v_state_), &v_state_first_),
    v_state_attr_stack_ (sizeof (v_state_attr_), &v_state_attr_first_)
  {
  }

  // cell_death_pskel
  //

  inline
  void cell_death_pskel::
  type_parser (::cell_cycle::death_type_pskel& p)
  {
    this->type_parser_ = &p;
  }

  inline
  void cell_death_pskel::
  ID_parser (::xml_schema::unsigned_long_pskel& p)
  {
    this->ID_parser_ = &p;
  }

  inline
  void cell_death_pskel::
  duration_parser (::common::units_decimal_pskel& p)
  {
    this->duration_parser_ = &p;
  }

  inline
  void cell_death_pskel::
  duration_parser (::xml_schema::parser_map& m)
  {
    this->duration_parser_map_ = &m;
  }

  inline
  void cell_death_pskel::
  cell_part_parser (::phenotype_base::cell_parts_pskel& p)
  {
    this->cell_part_parser_ = &p;
  }

  inline
  void cell_death_pskel::
  cell_part_parser (::xml_schema::parser_map& m)
  {
    this->cell_part_parser_map_ = &m;
  }

  inline
  void cell_death_pskel::
  custom_parser (::common::custom_pskel& p)
  {
    this->custom_parser_ = &p;
  }

  inline
  void cell_death_pskel::
  custom_parser (::xml_schema::parser_map& m)
  {
    this->custom_parser_map_ = &m;
  }

  inline
  void cell_death_pskel::
  parsers (::cell_cycle::death_type_pskel& type,
           ::xml_schema::unsigned_long_pskel& ID,
           ::common::units_decimal_pskel& duration,
           ::phenotype_base::cell_parts_pskel& cell_part,
           ::common::custom_pskel& custom)
  {
    this->type_parser_ = &type;
    this->ID_parser_ = &ID;
    this->duration_parser_ = &duration;
    this->cell_part_parser_ = &cell_part;
    this->custom_parser_ = &custom;
  }

  inline
  void cell_death_pskel::
  parser_maps (::xml_schema::parser_map& duration,
               ::xml_schema::parser_map& cell_part,
               ::xml_schema::parser_map& custom)
  {
    this->duration_parser_map_ = &duration;
    this->cell_part_parser_map_ = &cell_part;
    this->custom_parser_map_ = &custom;
  }

  inline
  cell_death_pskel::
  cell_death_pskel ()
  : cell_death_impl_ (0),
    type_parser_ (0),
    ID_parser_ (0),
    duration_parser_ (0),
    duration_parser_map_ (0),
    cell_part_parser_ (0),
    cell_part_parser_map_ (0),
    custom_parser_ (0),
    custom_parser_map_ (0),
    v_state_stack_ (sizeof (v_state_), &v_state_first_),
    v_state_attr_stack_ (sizeof (v_state_attr_), &v_state_attr_first_)
  {
  }

  inline
  cell_death_pskel::
  cell_death_pskel (cell_death_pskel* impl, void*)
  : ::xsde::cxx::parser::validating::complex_content (impl, 0),
    cell_death_impl_ (impl),
    type_parser_ (0),
    ID_parser_ (0),
    duration_parser_ (0),
    duration_parser_map_ (0),
    cell_part_parser_ (0),
    cell_part_parser_map_ (0),
    custom_parser_ (0),
    custom_parser_map_ (0),
    v_state_stack_ (sizeof (v_state_), &v_state_first_),
    v_state_attr_stack_ (sizeof (v_state_attr_), &v_state_attr_first_)
  {
  }

  // arrest_type_pskel
  //

  inline
  arrest_type_pskel::
  arrest_type_pskel (::xml_schema::string_pskel* tiein)
  : ::xml_schema::string_pskel (tiein, 0),
    arrest_type_impl_ (0)
  {
    this->_enumeration_facet (_xsde_arrest_type_pskel_enums_, 6UL);
  }

  inline
  arrest_type_pskel::
  arrest_type_pskel (arrest_type_pskel* impl, void*)
  : ::xml_schema::string_pskel (impl, 0),
    arrest_type_impl_ (impl)
  {
    this->_enumeration_facet (_xsde_arrest_type_pskel_enums_, 6UL);
  }

  // arrest_condition_pskel
  //

  inline
  void arrest_condition_pskel::
  type_parser (::cell_cycle::arrest_type_pskel& p)
  {
    this->type_parser_ = &p;
  }

  inline
  void arrest_condition_pskel::
  parsers (::xml_schema::string_pskel& units,
           ::xml_schema::string_pskel& measurement_type,
           ::xml_schema::double_pskel& uncertainty,
           ::xml_schema::double_pskel& negative_uncertainty,
           ::xml_schema::double_pskel& positive_uncertainty,
           ::xml_schema::double_pskel& uncertainty_percentage,
           ::xml_schema::double_pskel& negative_uncertainty_percentage,
           ::xml_schema::double_pskel& positive_uncertainty_percentage,
           ::xml_schema::double_pskel& median,
           ::xml_schema::double_pskel& standard_deviation,
           ::common::two_doubles_pskel& interquartile_range,
           ::common::two_doubles_pskel& range,
           ::xml_schema::double_pskel& min,
           ::xml_schema::double_pskel& max,
           ::xml_schema::double_pskel& standard_error,
           ::xml_schema::double_pskel& standard_error_of_the_mean,
           ::xml_schema::int_pskel& number_obs,
           ::xml_schema::double_pskel& skewnesss,
           ::xml_schema::double_pskel& kurtosis,
           ::cell_cycle::arrest_type_pskel& type)
  {
    this->units_parser_ = &units;
    this->measurement_type_parser_ = &measurement_type;
    this->uncertainty_parser_ = &uncertainty;
    this->negative_uncertainty_parser_ = &negative_uncertainty;
    this->positive_uncertainty_parser_ = &positive_uncertainty;
    this->uncertainty_percentage_parser_ = &uncertainty_percentage;
    this->negative_uncertainty_percentage_parser_ = &negative_uncertainty_percentage;
    this->positive_uncertainty_percentage_parser_ = &positive_uncertainty_percentage;
    this->median_parser_ = &median;
    this->standard_deviation_parser_ = &standard_deviation;
    this->interquartile_range_parser_ = &interquartile_range;
    this->range_parser_ = &range;
    this->min_parser_ = &min;
    this->max_parser_ = &max;
    this->standard_error_parser_ = &standard_error;
    this->standard_error_of_the_mean_parser_ = &standard_error_of_the_mean;
    this->number_obs_parser_ = &number_obs;
    this->skewnesss_parser_ = &skewnesss;
    this->kurtosis_parser_ = &kurtosis;
    this->type_parser_ = &type;
  }

  inline
  arrest_condition_pskel::
  arrest_condition_pskel (::common::units_decimal_pskel* tiein)
  : ::common::units_decimal_pskel (tiein, 0),
    arrest_condition_impl_ (0),
    type_parser_ (0)
  {
  }

  inline
  arrest_condition_pskel::
  arrest_condition_pskel (arrest_condition_pskel* impl, void*)
  : ::common::units_decimal_pskel (impl, 0),
    arrest_condition_impl_ (impl),
    type_parser_ (0)
  {
  }

  // cycles_and_deaths_pskel
  //

  inline
  void cycles_and_deaths_pskel::
  cell_cycle_parser (::cell_cycle::cell_cycle_pskel& p)
  {
    this->cell_cycle_parser_ = &p;
  }

  inline
  void cycles_and_deaths_pskel::
  cell_cycle_parser (::xml_schema::parser_map& m)
  {
    this->cell_cycle_parser_map_ = &m;
  }

  inline
  void cycles_and_deaths_pskel::
  cell_death_parser (::cell_cycle::cell_death_pskel& p)
  {
    this->cell_death_parser_ = &p;
  }

  inline
  void cycles_and_deaths_pskel::
  cell_death_parser (::xml_schema::parser_map& m)
  {
    this->cell_death_parser_map_ = &m;
  }

  inline
  void cycles_and_deaths_pskel::
  parsers (::cell_cycle::cell_cycle_pskel& cell_cycle,
           ::cell_cycle::cell_death_pskel& cell_death)
  {
    this->cell_cycle_parser_ = &cell_cycle;
    this->cell_death_parser_ = &cell_death;
  }

  inline
  void cycles_and_deaths_pskel::
  parser_maps (::xml_schema::parser_map& cell_cycle,
               ::xml_schema::parser_map& cell_death)
  {
    this->cell_cycle_parser_map_ = &cell_cycle;
    this->cell_death_parser_map_ = &cell_death;
  }

  inline
  cycles_and_deaths_pskel::
  cycles_and_deaths_pskel ()
  : cycles_and_deaths_impl_ (0),
    cell_cycle_parser_ (0),
    cell_cycle_parser_map_ (0),
    cell_death_parser_ (0),
    cell_death_parser_map_ (0),
    v_state_stack_ (sizeof (v_state_), &v_state_first_)
  {
  }

  inline
  cycles_and_deaths_pskel::
  cycles_and_deaths_pskel (cycles_and_deaths_pskel* impl, void*)
  : ::xsde::cxx::parser::validating::complex_content (impl, 0),
    cycles_and_deaths_impl_ (impl),
    cell_cycle_parser_ (0),
    cell_cycle_parser_map_ (0),
    cell_death_parser_ (0),
    cell_death_parser_map_ (0),
    v_state_stack_ (sizeof (v_state_), &v_state_first_)
  {
  }
}

// Begin epilogue.
//
//
// End epilogue.

