// Copyright (c) 2005-2016 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

namespace phenotype_common
{
  // adhesion_sskel
  //

  inline
  void adhesion_sskel::
  adhesion_bond_breaking_rate_serializer (::common::units_decimal_sskel& s)
  {
    this->adhesion_bond_breaking_rate_serializer_ = &s;
  }

  inline
  void adhesion_sskel::
  adhesion_bond_breaking_rate_serializer (::xml_schema::serializer_map& m)
  {
    this->adhesion_bond_breaking_rate_serializer_map_ = &m;
  }

  inline
  void adhesion_sskel::
  adhesion_bond_formation_rate_serializer (::common::units_decimal_sskel& s)
  {
    this->adhesion_bond_formation_rate_serializer_ = &s;
  }

  inline
  void adhesion_sskel::
  adhesion_bond_formation_rate_serializer (::xml_schema::serializer_map& m)
  {
    this->adhesion_bond_formation_rate_serializer_map_ = &m;
  }

  inline
  void adhesion_sskel::
  adhesion_spring_constant_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->adhesion_spring_constant_serializer_ = &s;
  }

  inline
  void adhesion_sskel::
  adhesion_spring_constant_serializer (::xml_schema::serializer_map& m)
  {
    this->adhesion_spring_constant_serializer_map_ = &m;
  }

  inline
  void adhesion_sskel::
  adhesion_receptor_density_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->adhesion_receptor_density_serializer_ = &s;
  }

  inline
  void adhesion_sskel::
  adhesion_receptor_density_serializer (::xml_schema::serializer_map& m)
  {
    this->adhesion_receptor_density_serializer_map_ = &m;
  }

  inline
  void adhesion_sskel::
  surface_binding_energy_serializer (::common::units_decimal_sskel& s)
  {
    this->surface_binding_energy_serializer_ = &s;
  }

  inline
  void adhesion_sskel::
  surface_binding_energy_serializer (::xml_schema::serializer_map& m)
  {
    this->surface_binding_energy_serializer_map_ = &m;
  }

  inline
  void adhesion_sskel::
  number_of_adhered_cells_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->number_of_adhered_cells_serializer_ = &s;
  }

  inline
  void adhesion_sskel::
  number_of_adhered_cells_serializer (::xml_schema::serializer_map& m)
  {
    this->number_of_adhered_cells_serializer_map_ = &m;
  }

  inline
  void adhesion_sskel::
  maximum_number_of_adhered_cells_serializer (::common::units_unsignedShort_sskel& s)
  {
    this->maximum_number_of_adhered_cells_serializer_ = &s;
  }

  inline
  void adhesion_sskel::
  maximum_number_of_adhered_cells_serializer (::xml_schema::serializer_map& m)
  {
    this->maximum_number_of_adhered_cells_serializer_map_ = &m;
  }

  inline
  void adhesion_sskel::
  adhered_surface_area_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->adhered_surface_area_serializer_ = &s;
  }

  inline
  void adhesion_sskel::
  adhered_surface_area_serializer (::xml_schema::serializer_map& m)
  {
    this->adhered_surface_area_serializer_map_ = &m;
  }

  inline
  void adhesion_sskel::
  maximum_adhered_surface_area_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->maximum_adhered_surface_area_serializer_ = &s;
  }

  inline
  void adhesion_sskel::
  maximum_adhered_surface_area_serializer (::xml_schema::serializer_map& m)
  {
    this->maximum_adhered_surface_area_serializer_map_ = &m;
  }

  inline
  void adhesion_sskel::
  adhesion_force_per_surface_area_serializer (::common::units_decimal_sskel& s)
  {
    this->adhesion_force_per_surface_area_serializer_ = &s;
  }

  inline
  void adhesion_sskel::
  adhesion_force_per_surface_area_serializer (::xml_schema::serializer_map& m)
  {
    this->adhesion_force_per_surface_area_serializer_map_ = &m;
  }

  inline
  void adhesion_sskel::
  adhesion_probability_serializer (::common::units_fraction_sskel& s)
  {
    this->adhesion_probability_serializer_ = &s;
  }

  inline
  void adhesion_sskel::
  adhesion_probability_serializer (::xml_schema::serializer_map& m)
  {
    this->adhesion_probability_serializer_map_ = &m;
  }

  inline
  void adhesion_sskel::
  detachment_proability_serializer (::common::units_fraction_sskel& s)
  {
    this->detachment_proability_serializer_ = &s;
  }

  inline
  void adhesion_sskel::
  detachment_proability_serializer (::xml_schema::serializer_map& m)
  {
    this->detachment_proability_serializer_map_ = &m;
  }

  inline
  void adhesion_sskel::
  rolling_observation_serializer (::phenotype_common::rolling_observation_sskel& s)
  {
    this->rolling_observation_serializer_ = &s;
  }

  inline
  void adhesion_sskel::
  rolling_observation_serializer (::xml_schema::serializer_map& m)
  {
    this->rolling_observation_serializer_map_ = &m;
  }

  inline
  void adhesion_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void adhesion_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void adhesion_sskel::
  serializers (::common::units_decimal_sskel& adhesion_bond_breaking_rate,
               ::common::units_decimal_sskel& adhesion_bond_formation_rate,
               ::common::units_decimal_nonnegative_sskel& adhesion_spring_constant,
               ::common::units_decimal_nonnegative_sskel& adhesion_receptor_density,
               ::common::units_decimal_sskel& surface_binding_energy,
               ::common::units_decimal_nonnegative_sskel& number_of_adhered_cells,
               ::common::units_unsignedShort_sskel& maximum_number_of_adhered_cells,
               ::common::units_decimal_nonnegative_sskel& adhered_surface_area,
               ::common::units_decimal_nonnegative_sskel& maximum_adhered_surface_area,
               ::common::units_decimal_sskel& adhesion_force_per_surface_area,
               ::common::units_fraction_sskel& adhesion_probability,
               ::common::units_fraction_sskel& detachment_proability,
               ::phenotype_common::rolling_observation_sskel& rolling_observation,
               ::common::custom_sskel& custom)
  {
    this->adhesion_bond_breaking_rate_serializer_ = &adhesion_bond_breaking_rate;
    this->adhesion_bond_formation_rate_serializer_ = &adhesion_bond_formation_rate;
    this->adhesion_spring_constant_serializer_ = &adhesion_spring_constant;
    this->adhesion_receptor_density_serializer_ = &adhesion_receptor_density;
    this->surface_binding_energy_serializer_ = &surface_binding_energy;
    this->number_of_adhered_cells_serializer_ = &number_of_adhered_cells;
    this->maximum_number_of_adhered_cells_serializer_ = &maximum_number_of_adhered_cells;
    this->adhered_surface_area_serializer_ = &adhered_surface_area;
    this->maximum_adhered_surface_area_serializer_ = &maximum_adhered_surface_area;
    this->adhesion_force_per_surface_area_serializer_ = &adhesion_force_per_surface_area;
    this->adhesion_probability_serializer_ = &adhesion_probability;
    this->detachment_proability_serializer_ = &detachment_proability;
    this->rolling_observation_serializer_ = &rolling_observation;
    this->custom_serializer_ = &custom;
  }

  inline
  void adhesion_sskel::
  serializer_maps (::xml_schema::serializer_map& adhesion_bond_breaking_rate,
                   ::xml_schema::serializer_map& adhesion_bond_formation_rate,
                   ::xml_schema::serializer_map& adhesion_spring_constant,
                   ::xml_schema::serializer_map& adhesion_receptor_density,
                   ::xml_schema::serializer_map& surface_binding_energy,
                   ::xml_schema::serializer_map& number_of_adhered_cells,
                   ::xml_schema::serializer_map& maximum_number_of_adhered_cells,
                   ::xml_schema::serializer_map& adhered_surface_area,
                   ::xml_schema::serializer_map& maximum_adhered_surface_area,
                   ::xml_schema::serializer_map& adhesion_force_per_surface_area,
                   ::xml_schema::serializer_map& adhesion_probability,
                   ::xml_schema::serializer_map& detachment_proability,
                   ::xml_schema::serializer_map& rolling_observation,
                   ::xml_schema::serializer_map& custom)
  {
    this->adhesion_bond_breaking_rate_serializer_map_ = &adhesion_bond_breaking_rate;
    this->adhesion_bond_formation_rate_serializer_map_ = &adhesion_bond_formation_rate;
    this->adhesion_spring_constant_serializer_map_ = &adhesion_spring_constant;
    this->adhesion_receptor_density_serializer_map_ = &adhesion_receptor_density;
    this->surface_binding_energy_serializer_map_ = &surface_binding_energy;
    this->number_of_adhered_cells_serializer_map_ = &number_of_adhered_cells;
    this->maximum_number_of_adhered_cells_serializer_map_ = &maximum_number_of_adhered_cells;
    this->adhered_surface_area_serializer_map_ = &adhered_surface_area;
    this->maximum_adhered_surface_area_serializer_map_ = &maximum_adhered_surface_area;
    this->adhesion_force_per_surface_area_serializer_map_ = &adhesion_force_per_surface_area;
    this->adhesion_probability_serializer_map_ = &adhesion_probability;
    this->detachment_proability_serializer_map_ = &detachment_proability;
    this->rolling_observation_serializer_map_ = &rolling_observation;
    this->custom_serializer_map_ = &custom;
  }

  inline
  adhesion_sskel::
  adhesion_sskel ()
  : adhesion_impl_ (0),
    adhesion_bond_breaking_rate_serializer_ (0),
    adhesion_bond_breaking_rate_serializer_map_ (0),
    adhesion_bond_formation_rate_serializer_ (0),
    adhesion_bond_formation_rate_serializer_map_ (0),
    adhesion_spring_constant_serializer_ (0),
    adhesion_spring_constant_serializer_map_ (0),
    adhesion_receptor_density_serializer_ (0),
    adhesion_receptor_density_serializer_map_ (0),
    surface_binding_energy_serializer_ (0),
    surface_binding_energy_serializer_map_ (0),
    number_of_adhered_cells_serializer_ (0),
    number_of_adhered_cells_serializer_map_ (0),
    maximum_number_of_adhered_cells_serializer_ (0),
    maximum_number_of_adhered_cells_serializer_map_ (0),
    adhered_surface_area_serializer_ (0),
    adhered_surface_area_serializer_map_ (0),
    maximum_adhered_surface_area_serializer_ (0),
    maximum_adhered_surface_area_serializer_map_ (0),
    adhesion_force_per_surface_area_serializer_ (0),
    adhesion_force_per_surface_area_serializer_map_ (0),
    adhesion_probability_serializer_ (0),
    adhesion_probability_serializer_map_ (0),
    detachment_proability_serializer_ (0),
    detachment_proability_serializer_map_ (0),
    rolling_observation_serializer_ (0),
    rolling_observation_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  adhesion_sskel::
  adhesion_sskel (adhesion_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    adhesion_impl_ (impl),
    adhesion_bond_breaking_rate_serializer_ (0),
    adhesion_bond_breaking_rate_serializer_map_ (0),
    adhesion_bond_formation_rate_serializer_ (0),
    adhesion_bond_formation_rate_serializer_map_ (0),
    adhesion_spring_constant_serializer_ (0),
    adhesion_spring_constant_serializer_map_ (0),
    adhesion_receptor_density_serializer_ (0),
    adhesion_receptor_density_serializer_map_ (0),
    surface_binding_energy_serializer_ (0),
    surface_binding_energy_serializer_map_ (0),
    number_of_adhered_cells_serializer_ (0),
    number_of_adhered_cells_serializer_map_ (0),
    maximum_number_of_adhered_cells_serializer_ (0),
    maximum_number_of_adhered_cells_serializer_map_ (0),
    adhered_surface_area_serializer_ (0),
    adhered_surface_area_serializer_map_ (0),
    maximum_adhered_surface_area_serializer_ (0),
    maximum_adhered_surface_area_serializer_map_ (0),
    adhesion_force_per_surface_area_serializer_ (0),
    adhesion_force_per_surface_area_serializer_map_ (0),
    adhesion_probability_serializer_ (0),
    adhesion_probability_serializer_map_ (0),
    detachment_proability_serializer_ (0),
    detachment_proability_serializer_map_ (0),
    rolling_observation_serializer_ (0),
    rolling_observation_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // rolling_observation_sskel
  //

  inline
  void rolling_observation_sskel::
  rolling_velocity_serializer (::common::units_decimal_sskel& s)
  {
    this->rolling_velocity_serializer_ = &s;
  }

  inline
  void rolling_observation_sskel::
  rolling_velocity_serializer (::xml_schema::serializer_map& m)
  {
    this->rolling_velocity_serializer_map_ = &m;
  }

  inline
  void rolling_observation_sskel::
  shear_stress_serializer (::common::units_decimal_sskel& s)
  {
    this->shear_stress_serializer_ = &s;
  }

  inline
  void rolling_observation_sskel::
  shear_stress_serializer (::xml_schema::serializer_map& m)
  {
    this->shear_stress_serializer_map_ = &m;
  }

  inline
  void rolling_observation_sskel::
  serializers (::common::units_decimal_sskel& rolling_velocity,
               ::common::units_decimal_sskel& shear_stress)
  {
    this->rolling_velocity_serializer_ = &rolling_velocity;
    this->shear_stress_serializer_ = &shear_stress;
  }

  inline
  void rolling_observation_sskel::
  serializer_maps (::xml_schema::serializer_map& rolling_velocity,
                   ::xml_schema::serializer_map& shear_stress)
  {
    this->rolling_velocity_serializer_map_ = &rolling_velocity;
    this->shear_stress_serializer_map_ = &shear_stress;
  }

  inline
  rolling_observation_sskel::
  rolling_observation_sskel ()
  : rolling_observation_impl_ (0),
    rolling_velocity_serializer_ (0),
    rolling_velocity_serializer_map_ (0),
    shear_stress_serializer_ (0),
    shear_stress_serializer_map_ (0)
  {
  }

  inline
  rolling_observation_sskel::
  rolling_observation_sskel (rolling_observation_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    rolling_observation_impl_ (impl),
    rolling_velocity_serializer_ (0),
    rolling_velocity_serializer_map_ (0),
    shear_stress_serializer_ (0),
    shear_stress_serializer_map_ (0)
  {
  }

  // friction_sskel
  //

  inline
  void friction_sskel::
  compression_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->compression_serializer_ = &s;
  }

  inline
  void friction_sskel::
  compression_serializer (::xml_schema::serializer_map& m)
  {
    this->compression_serializer_map_ = &m;
  }

  inline
  void friction_sskel::
  ECM_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->ECM_serializer_ = &s;
  }

  inline
  void friction_sskel::
  ECM_serializer (::xml_schema::serializer_map& m)
  {
    this->ECM_serializer_map_ = &m;
  }

  inline
  void friction_sskel::
  shear_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->shear_serializer_ = &s;
  }

  inline
  void friction_sskel::
  shear_serializer (::xml_schema::serializer_map& m)
  {
    this->shear_serializer_map_ = &m;
  }

  inline
  void friction_sskel::
  serializers (::common::units_decimal_nonnegative_sskel& compression,
               ::common::units_decimal_nonnegative_sskel& ECM,
               ::common::units_decimal_nonnegative_sskel& shear)
  {
    this->compression_serializer_ = &compression;
    this->ECM_serializer_ = &ECM;
    this->shear_serializer_ = &shear;
  }

  inline
  void friction_sskel::
  serializer_maps (::xml_schema::serializer_map& compression,
                   ::xml_schema::serializer_map& ECM,
                   ::xml_schema::serializer_map& shear)
  {
    this->compression_serializer_map_ = &compression;
    this->ECM_serializer_map_ = &ECM;
    this->shear_serializer_map_ = &shear;
  }

  inline
  friction_sskel::
  friction_sskel ()
  : friction_impl_ (0),
    compression_serializer_ (0),
    compression_serializer_map_ (0),
    ECM_serializer_ (0),
    ECM_serializer_map_ (0),
    shear_serializer_ (0),
    shear_serializer_map_ (0)
  {
  }

  inline
  friction_sskel::
  friction_sskel (friction_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    friction_impl_ (impl),
    compression_serializer_ (0),
    compression_serializer_map_ (0),
    ECM_serializer_ (0),
    ECM_serializer_map_ (0),
    shear_serializer_ (0),
    shear_serializer_map_ (0)
  {
  }

  // mechanics_sskel
  //

  inline
  void mechanics_sskel::
  friction_serializer (::phenotype_common::friction_sskel& s)
  {
    this->friction_serializer_ = &s;
  }

  inline
  void mechanics_sskel::
  friction_serializer (::xml_schema::serializer_map& m)
  {
    this->friction_serializer_map_ = &m;
  }

  inline
  void mechanics_sskel::
  maximum_cell_deformation_serializer (::common::units_decimal_sskel& s)
  {
    this->maximum_cell_deformation_serializer_ = &s;
  }

  inline
  void mechanics_sskel::
  maximum_cell_deformation_serializer (::xml_schema::serializer_map& m)
  {
    this->maximum_cell_deformation_serializer_map_ = &m;
  }

  inline
  void mechanics_sskel::
  mechanical_pressure_serializer (::common::units_decimal_sskel& s)
  {
    this->mechanical_pressure_serializer_ = &s;
  }

  inline
  void mechanics_sskel::
  mechanical_pressure_serializer (::xml_schema::serializer_map& m)
  {
    this->mechanical_pressure_serializer_map_ = &m;
  }

  inline
  void mechanics_sskel::
  indentation_observation_serializer (::phenotype_common::indentation_observation_sskel& s)
  {
    this->indentation_observation_serializer_ = &s;
  }

  inline
  void mechanics_sskel::
  indentation_observation_serializer (::xml_schema::serializer_map& m)
  {
    this->indentation_observation_serializer_map_ = &m;
  }

  inline
  void mechanics_sskel::
  poisson_ratio_serializer (::common::units_decimal_sskel& s)
  {
    this->poisson_ratio_serializer_ = &s;
  }

  inline
  void mechanics_sskel::
  poisson_ratio_serializer (::xml_schema::serializer_map& m)
  {
    this->poisson_ratio_serializer_map_ = &m;
  }

  inline
  void mechanics_sskel::
  youngs_modulus_serializer (::common::units_decimal_sskel& s)
  {
    this->youngs_modulus_serializer_ = &s;
  }

  inline
  void mechanics_sskel::
  youngs_modulus_serializer (::xml_schema::serializer_map& m)
  {
    this->youngs_modulus_serializer_map_ = &m;
  }

  inline
  void mechanics_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void mechanics_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void mechanics_sskel::
  serializers (::phenotype_common::friction_sskel& friction,
               ::common::units_decimal_sskel& maximum_cell_deformation,
               ::common::units_decimal_sskel& mechanical_pressure,
               ::phenotype_common::indentation_observation_sskel& indentation_observation,
               ::common::units_decimal_sskel& poisson_ratio,
               ::common::units_decimal_sskel& youngs_modulus,
               ::common::custom_sskel& custom)
  {
    this->friction_serializer_ = &friction;
    this->maximum_cell_deformation_serializer_ = &maximum_cell_deformation;
    this->mechanical_pressure_serializer_ = &mechanical_pressure;
    this->indentation_observation_serializer_ = &indentation_observation;
    this->poisson_ratio_serializer_ = &poisson_ratio;
    this->youngs_modulus_serializer_ = &youngs_modulus;
    this->custom_serializer_ = &custom;
  }

  inline
  void mechanics_sskel::
  serializer_maps (::xml_schema::serializer_map& friction,
                   ::xml_schema::serializer_map& maximum_cell_deformation,
                   ::xml_schema::serializer_map& mechanical_pressure,
                   ::xml_schema::serializer_map& indentation_observation,
                   ::xml_schema::serializer_map& poisson_ratio,
                   ::xml_schema::serializer_map& youngs_modulus,
                   ::xml_schema::serializer_map& custom)
  {
    this->friction_serializer_map_ = &friction;
    this->maximum_cell_deformation_serializer_map_ = &maximum_cell_deformation;
    this->mechanical_pressure_serializer_map_ = &mechanical_pressure;
    this->indentation_observation_serializer_map_ = &indentation_observation;
    this->poisson_ratio_serializer_map_ = &poisson_ratio;
    this->youngs_modulus_serializer_map_ = &youngs_modulus;
    this->custom_serializer_map_ = &custom;
  }

  inline
  mechanics_sskel::
  mechanics_sskel ()
  : mechanics_impl_ (0),
    friction_serializer_ (0),
    friction_serializer_map_ (0),
    maximum_cell_deformation_serializer_ (0),
    maximum_cell_deformation_serializer_map_ (0),
    mechanical_pressure_serializer_ (0),
    mechanical_pressure_serializer_map_ (0),
    indentation_observation_serializer_ (0),
    indentation_observation_serializer_map_ (0),
    poisson_ratio_serializer_ (0),
    poisson_ratio_serializer_map_ (0),
    youngs_modulus_serializer_ (0),
    youngs_modulus_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  mechanics_sskel::
  mechanics_sskel (mechanics_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    mechanics_impl_ (impl),
    friction_serializer_ (0),
    friction_serializer_map_ (0),
    maximum_cell_deformation_serializer_ (0),
    maximum_cell_deformation_serializer_map_ (0),
    mechanical_pressure_serializer_ (0),
    mechanical_pressure_serializer_map_ (0),
    indentation_observation_serializer_ (0),
    indentation_observation_serializer_map_ (0),
    poisson_ratio_serializer_ (0),
    poisson_ratio_serializer_map_ (0),
    youngs_modulus_serializer_ (0),
    youngs_modulus_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // indentation_observation_sskel
  //

  inline
  void indentation_observation_sskel::
  depth_serializer (::common::units_decimal_sskel& s)
  {
    this->depth_serializer_ = &s;
  }

  inline
  void indentation_observation_sskel::
  depth_serializer (::xml_schema::serializer_map& m)
  {
    this->depth_serializer_map_ = &m;
  }

  inline
  void indentation_observation_sskel::
  poisson_ratio_serializer (::common::units_decimal_sskel& s)
  {
    this->poisson_ratio_serializer_ = &s;
  }

  inline
  void indentation_observation_sskel::
  poisson_ratio_serializer (::xml_schema::serializer_map& m)
  {
    this->poisson_ratio_serializer_map_ = &m;
  }

  inline
  void indentation_observation_sskel::
  youngs_modulus_serializer (::common::units_decimal_sskel& s)
  {
    this->youngs_modulus_serializer_ = &s;
  }

  inline
  void indentation_observation_sskel::
  youngs_modulus_serializer (::xml_schema::serializer_map& m)
  {
    this->youngs_modulus_serializer_map_ = &m;
  }

  inline
  void indentation_observation_sskel::
  serializers (::common::units_decimal_sskel& depth,
               ::common::units_decimal_sskel& poisson_ratio,
               ::common::units_decimal_sskel& youngs_modulus)
  {
    this->depth_serializer_ = &depth;
    this->poisson_ratio_serializer_ = &poisson_ratio;
    this->youngs_modulus_serializer_ = &youngs_modulus;
  }

  inline
  void indentation_observation_sskel::
  serializer_maps (::xml_schema::serializer_map& depth,
                   ::xml_schema::serializer_map& poisson_ratio,
                   ::xml_schema::serializer_map& youngs_modulus)
  {
    this->depth_serializer_map_ = &depth;
    this->poisson_ratio_serializer_map_ = &poisson_ratio;
    this->youngs_modulus_serializer_map_ = &youngs_modulus;
  }

  inline
  indentation_observation_sskel::
  indentation_observation_sskel ()
  : indentation_observation_impl_ (0),
    depth_serializer_ (0),
    depth_serializer_map_ (0),
    poisson_ratio_serializer_ (0),
    poisson_ratio_serializer_map_ (0),
    youngs_modulus_serializer_ (0),
    youngs_modulus_serializer_map_ (0)
  {
  }

  inline
  indentation_observation_sskel::
  indentation_observation_sskel (indentation_observation_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    indentation_observation_impl_ (impl),
    depth_serializer_ (0),
    depth_serializer_map_ (0),
    poisson_ratio_serializer_ (0),
    poisson_ratio_serializer_map_ (0),
    youngs_modulus_serializer_ (0),
    youngs_modulus_serializer_map_ (0)
  {
  }

  // motility_sskel
  //

  inline
  void motility_sskel::
  unrestricted_serializer (::phenotype_common::motility_types_sskel& s)
  {
    this->unrestricted_serializer_ = &s;
  }

  inline
  void motility_sskel::
  unrestricted_serializer (::xml_schema::serializer_map& m)
  {
    this->unrestricted_serializer_map_ = &m;
  }

  inline
  void motility_sskel::
  restricted_serializer (::phenotype_common::motility_types_sskel& s)
  {
    this->restricted_serializer_ = &s;
  }

  inline
  void motility_sskel::
  restricted_serializer (::xml_schema::serializer_map& m)
  {
    this->restricted_serializer_map_ = &m;
  }

  inline
  void motility_sskel::
  serializers (::phenotype_common::motility_types_sskel& unrestricted,
               ::phenotype_common::motility_types_sskel& restricted)
  {
    this->unrestricted_serializer_ = &unrestricted;
    this->restricted_serializer_ = &restricted;
  }

  inline
  void motility_sskel::
  serializer_maps (::xml_schema::serializer_map& unrestricted,
                   ::xml_schema::serializer_map& restricted)
  {
    this->unrestricted_serializer_map_ = &unrestricted;
    this->restricted_serializer_map_ = &restricted;
  }

  inline
  motility_sskel::
  motility_sskel ()
  : motility_impl_ (0),
    unrestricted_serializer_ (0),
    unrestricted_serializer_map_ (0),
    restricted_serializer_ (0),
    restricted_serializer_map_ (0)
  {
  }

  inline
  motility_sskel::
  motility_sskel (motility_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    motility_impl_ (impl),
    unrestricted_serializer_ (0),
    unrestricted_serializer_map_ (0),
    restricted_serializer_ (0),
    restricted_serializer_map_ (0)
  {
  }

  // motility_types_sskel
  //

  inline
  void motility_types_sskel::
  ID_serializer (::xml_schema::unsigned_int_sskel& ID)
  {
    this->ID_serializer_ = &ID;
  }

  inline
  void motility_types_sskel::
  timescale_serializer (::phenotype_common::timescale_sskel& s)
  {
    this->timescale_serializer_ = &s;
  }

  inline
  void motility_types_sskel::
  timescale_serializer (::xml_schema::serializer_map& m)
  {
    this->timescale_serializer_map_ = &m;
  }

  inline
  void motility_types_sskel::
  restriction_serializer (::variables::experimental_conditions_sskel& s)
  {
    this->restriction_serializer_ = &s;
  }

  inline
  void motility_types_sskel::
  restriction_serializer (::xml_schema::serializer_map& m)
  {
    this->restriction_serializer_map_ = &m;
  }

  inline
  void motility_types_sskel::
  net_displacement_serializer (::common::units_decimal_sskel& s)
  {
    this->net_displacement_serializer_ = &s;
  }

  inline
  void motility_types_sskel::
  net_displacement_serializer (::xml_schema::serializer_map& m)
  {
    this->net_displacement_serializer_map_ = &m;
  }

  inline
  void motility_types_sskel::
  total_displacement_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->total_displacement_serializer_ = &s;
  }

  inline
  void motility_types_sskel::
  total_displacement_serializer (::xml_schema::serializer_map& m)
  {
    this->total_displacement_serializer_map_ = &m;
  }

  inline
  void motility_types_sskel::
  mean_square_displacement_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->mean_square_displacement_serializer_ = &s;
  }

  inline
  void motility_types_sskel::
  mean_square_displacement_serializer (::xml_schema::serializer_map& m)
  {
    this->mean_square_displacement_serializer_map_ = &m;
  }

  inline
  void motility_types_sskel::
  mean_speed_serializer (::common::units_decimal_sskel& s)
  {
    this->mean_speed_serializer_ = &s;
  }

  inline
  void motility_types_sskel::
  mean_speed_serializer (::xml_schema::serializer_map& m)
  {
    this->mean_speed_serializer_map_ = &m;
  }

  inline
  void motility_types_sskel::
  net_speed_serializer (::common::units_decimal_sskel& s)
  {
    this->net_speed_serializer_ = &s;
  }

  inline
  void motility_types_sskel::
  net_speed_serializer (::xml_schema::serializer_map& m)
  {
    this->net_speed_serializer_map_ = &m;
  }

  inline
  void motility_types_sskel::
  persistence_serializer (::common::units_decimal_sskel& s)
  {
    this->persistence_serializer_ = &s;
  }

  inline
  void motility_types_sskel::
  persistence_serializer (::xml_schema::serializer_map& m)
  {
    this->persistence_serializer_map_ = &m;
  }

  inline
  void motility_types_sskel::
  mean_path_length_serializer (::common::units_decimal_sskel& s)
  {
    this->mean_path_length_serializer_ = &s;
  }

  inline
  void motility_types_sskel::
  mean_path_length_serializer (::xml_schema::serializer_map& m)
  {
    this->mean_path_length_serializer_map_ = &m;
  }

  inline
  void motility_types_sskel::
  diffusion_coefficient_serializer (::common::units_decimal_sskel& s)
  {
    this->diffusion_coefficient_serializer_ = &s;
  }

  inline
  void motility_types_sskel::
  diffusion_coefficient_serializer (::xml_schema::serializer_map& m)
  {
    this->diffusion_coefficient_serializer_map_ = &m;
  }

  inline
  void motility_types_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void motility_types_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void motility_types_sskel::
  serializers (::xml_schema::unsigned_int_sskel& ID,
               ::phenotype_common::timescale_sskel& timescale,
               ::variables::experimental_conditions_sskel& restriction,
               ::common::units_decimal_sskel& net_displacement,
               ::common::units_decimal_nonnegative_sskel& total_displacement,
               ::common::units_decimal_nonnegative_sskel& mean_square_displacement,
               ::common::units_decimal_sskel& mean_speed,
               ::common::units_decimal_sskel& net_speed,
               ::common::units_decimal_sskel& persistence,
               ::common::units_decimal_sskel& mean_path_length,
               ::common::units_decimal_sskel& diffusion_coefficient,
               ::common::custom_sskel& custom)
  {
    this->ID_serializer_ = &ID;
    this->timescale_serializer_ = &timescale;
    this->restriction_serializer_ = &restriction;
    this->net_displacement_serializer_ = &net_displacement;
    this->total_displacement_serializer_ = &total_displacement;
    this->mean_square_displacement_serializer_ = &mean_square_displacement;
    this->mean_speed_serializer_ = &mean_speed;
    this->net_speed_serializer_ = &net_speed;
    this->persistence_serializer_ = &persistence;
    this->mean_path_length_serializer_ = &mean_path_length;
    this->diffusion_coefficient_serializer_ = &diffusion_coefficient;
    this->custom_serializer_ = &custom;
  }

  inline
  void motility_types_sskel::
  serializer_maps (::xml_schema::serializer_map& timescale,
                   ::xml_schema::serializer_map& restriction,
                   ::xml_schema::serializer_map& net_displacement,
                   ::xml_schema::serializer_map& total_displacement,
                   ::xml_schema::serializer_map& mean_square_displacement,
                   ::xml_schema::serializer_map& mean_speed,
                   ::xml_schema::serializer_map& net_speed,
                   ::xml_schema::serializer_map& persistence,
                   ::xml_schema::serializer_map& mean_path_length,
                   ::xml_schema::serializer_map& diffusion_coefficient,
                   ::xml_schema::serializer_map& custom)
  {
    this->timescale_serializer_map_ = &timescale;
    this->restriction_serializer_map_ = &restriction;
    this->net_displacement_serializer_map_ = &net_displacement;
    this->total_displacement_serializer_map_ = &total_displacement;
    this->mean_square_displacement_serializer_map_ = &mean_square_displacement;
    this->mean_speed_serializer_map_ = &mean_speed;
    this->net_speed_serializer_map_ = &net_speed;
    this->persistence_serializer_map_ = &persistence;
    this->mean_path_length_serializer_map_ = &mean_path_length;
    this->diffusion_coefficient_serializer_map_ = &diffusion_coefficient;
    this->custom_serializer_map_ = &custom;
  }

  inline
  motility_types_sskel::
  motility_types_sskel ()
  : motility_types_impl_ (0),
    ID_serializer_ (0),
    timescale_serializer_ (0),
    timescale_serializer_map_ (0),
    restriction_serializer_ (0),
    restriction_serializer_map_ (0),
    net_displacement_serializer_ (0),
    net_displacement_serializer_map_ (0),
    total_displacement_serializer_ (0),
    total_displacement_serializer_map_ (0),
    mean_square_displacement_serializer_ (0),
    mean_square_displacement_serializer_map_ (0),
    mean_speed_serializer_ (0),
    mean_speed_serializer_map_ (0),
    net_speed_serializer_ (0),
    net_speed_serializer_map_ (0),
    persistence_serializer_ (0),
    persistence_serializer_map_ (0),
    mean_path_length_serializer_ (0),
    mean_path_length_serializer_map_ (0),
    diffusion_coefficient_serializer_ (0),
    diffusion_coefficient_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  motility_types_sskel::
  motility_types_sskel (motility_types_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    motility_types_impl_ (impl),
    ID_serializer_ (0),
    timescale_serializer_ (0),
    timescale_serializer_map_ (0),
    restriction_serializer_ (0),
    restriction_serializer_map_ (0),
    net_displacement_serializer_ (0),
    net_displacement_serializer_map_ (0),
    total_displacement_serializer_ (0),
    total_displacement_serializer_map_ (0),
    mean_square_displacement_serializer_ (0),
    mean_square_displacement_serializer_map_ (0),
    mean_speed_serializer_ (0),
    mean_speed_serializer_map_ (0),
    net_speed_serializer_ (0),
    net_speed_serializer_map_ (0),
    persistence_serializer_ (0),
    persistence_serializer_map_ (0),
    mean_path_length_serializer_ (0),
    mean_path_length_serializer_map_ (0),
    diffusion_coefficient_serializer_ (0),
    diffusion_coefficient_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // timescale_sskel
  //

  inline
  void timescale_sskel::
  mitotic_serializer (::xml_schema::boolean_sskel& mitotic)
  {
    this->mitotic_serializer_ = &mitotic;
  }

  inline
  void timescale_sskel::
  serializers (::xml_schema::string_sskel& units,
               ::xml_schema::string_sskel& measurement_type,
               ::xml_schema::double_sskel& uncertainty,
               ::xml_schema::double_sskel& negative_uncertainty,
               ::xml_schema::double_sskel& positive_uncertainty,
               ::xml_schema::double_sskel& uncertainty_percentage,
               ::xml_schema::double_sskel& negative_uncertainty_percentage,
               ::xml_schema::double_sskel& positive_uncertainty_percentage,
               ::xml_schema::double_sskel& median,
               ::xml_schema::double_sskel& standard_deviation,
               ::common::two_doubles_sskel& interquartile_range,
               ::common::two_doubles_sskel& range,
               ::xml_schema::double_sskel& min,
               ::xml_schema::double_sskel& max,
               ::xml_schema::double_sskel& standard_error,
               ::xml_schema::double_sskel& standard_error_of_the_mean,
               ::xml_schema::int_sskel& number_obs,
               ::xml_schema::double_sskel& skewnesss,
               ::xml_schema::double_sskel& kurtosis,
               ::xml_schema::boolean_sskel& mitotic)
  {
    this->units_serializer_ = &units;
    this->measurement_type_serializer_ = &measurement_type;
    this->uncertainty_serializer_ = &uncertainty;
    this->negative_uncertainty_serializer_ = &negative_uncertainty;
    this->positive_uncertainty_serializer_ = &positive_uncertainty;
    this->uncertainty_percentage_serializer_ = &uncertainty_percentage;
    this->negative_uncertainty_percentage_serializer_ = &negative_uncertainty_percentage;
    this->positive_uncertainty_percentage_serializer_ = &positive_uncertainty_percentage;
    this->median_serializer_ = &median;
    this->standard_deviation_serializer_ = &standard_deviation;
    this->interquartile_range_serializer_ = &interquartile_range;
    this->range_serializer_ = &range;
    this->min_serializer_ = &min;
    this->max_serializer_ = &max;
    this->standard_error_serializer_ = &standard_error;
    this->standard_error_of_the_mean_serializer_ = &standard_error_of_the_mean;
    this->number_obs_serializer_ = &number_obs;
    this->skewnesss_serializer_ = &skewnesss;
    this->kurtosis_serializer_ = &kurtosis;
    this->mitotic_serializer_ = &mitotic;
  }

  inline
  timescale_sskel::
  timescale_sskel (::common::units_decimal_sskel* tiein)
  : ::common::units_decimal_sskel (tiein, 0),
    timescale_impl_ (0),
    mitotic_serializer_ (0)
  {
  }

  inline
  timescale_sskel::
  timescale_sskel (timescale_sskel* impl, void*)
  : ::common::units_decimal_sskel (impl, 0),
    timescale_impl_ (impl),
    mitotic_serializer_ (0)
  {
  }

  // transport_processes_sskel
  //

  inline
  void transport_processes_sskel::
  variable_serializer (::phenotype_common::transport_variable_sskel& s)
  {
    this->variable_serializer_ = &s;
  }

  inline
  void transport_processes_sskel::
  variable_serializer (::xml_schema::serializer_map& m)
  {
    this->variable_serializer_map_ = &m;
  }

  inline
  void transport_processes_sskel::
  serializers (::phenotype_common::transport_variable_sskel& variable)
  {
    this->variable_serializer_ = &variable;
  }

  inline
  void transport_processes_sskel::
  serializer_maps (::xml_schema::serializer_map& variable)
  {
    this->variable_serializer_map_ = &variable;
  }

  inline
  transport_processes_sskel::
  transport_processes_sskel ()
  : transport_processes_impl_ (0),
    variable_serializer_ (0),
    variable_serializer_map_ (0)
  {
  }

  inline
  transport_processes_sskel::
  transport_processes_sskel (transport_processes_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    transport_processes_impl_ (impl),
    variable_serializer_ (0),
    variable_serializer_map_ (0)
  {
  }

  // transport_variable_sskel
  //

  inline
  void transport_variable_sskel::
  name_serializer (::xml_schema::string_sskel& name)
  {
    this->name_serializer_ = &name;
  }

  inline
  void transport_variable_sskel::
  units_serializer (::xml_schema::string_sskel& units)
  {
    this->units_serializer_ = &units;
  }

  inline
  void transport_variable_sskel::
  ID_serializer (::xml_schema::unsigned_long_sskel& ID)
  {
    this->ID_serializer_ = &ID;
  }

  inline
  void transport_variable_sskel::
  type_serializer (::variables::amount_type_sskel& type)
  {
    this->type_serializer_ = &type;
  }

  inline
  void transport_variable_sskel::
  ChEBI_ID_serializer (::xml_schema::string_sskel& ChEBI_ID)
  {
    this->ChEBI_ID_serializer_ = &ChEBI_ID;
  }

  inline
  void transport_variable_sskel::
  MeSH_ID_serializer (::xml_schema::string_sskel& MeSH_ID)
  {
    this->MeSH_ID_serializer_ = &MeSH_ID;
  }

  inline
  void transport_variable_sskel::
  DrugBank_ID_serializer (::xml_schema::string_sskel& DrugBank_ID)
  {
    this->DrugBank_ID_serializer_ = &DrugBank_ID;
  }

  inline
  void transport_variable_sskel::
  GMO_ID_serializer (::xml_schema::string_sskel& GMO_ID)
  {
    this->GMO_ID_serializer_ = &GMO_ID;
  }

  inline
  void transport_variable_sskel::
  GO_ID_serializer (::xml_schema::string_sskel& GO_ID)
  {
    this->GO_ID_serializer_ = &GO_ID;
  }

  inline
  void transport_variable_sskel::
  UniProt_ID_serializer (::xml_schema::string_sskel& UniProt_ID)
  {
    this->UniProt_ID_serializer_ = &UniProt_ID;
  }

  inline
  void transport_variable_sskel::
  PR_ID_serializer (::xml_schema::string_sskel& PR_ID)
  {
    this->PR_ID_serializer_ = &PR_ID;
  }

  inline
  void transport_variable_sskel::
  export_rate_serializer (::common::units_decimal_sskel& s)
  {
    this->export_rate_serializer_ = &s;
  }

  inline
  void transport_variable_sskel::
  export_rate_serializer (::xml_schema::serializer_map& m)
  {
    this->export_rate_serializer_map_ = &m;
  }

  inline
  void transport_variable_sskel::
  export_rate_per_unit_surface_area_serializer (::common::units_decimal_sskel& s)
  {
    this->export_rate_per_unit_surface_area_serializer_ = &s;
  }

  inline
  void transport_variable_sskel::
  export_rate_per_unit_surface_area_serializer (::xml_schema::serializer_map& m)
  {
    this->export_rate_per_unit_surface_area_serializer_map_ = &m;
  }

  inline
  void transport_variable_sskel::
  import_rate_serializer (::common::units_decimal_sskel& s)
  {
    this->import_rate_serializer_ = &s;
  }

  inline
  void transport_variable_sskel::
  import_rate_serializer (::xml_schema::serializer_map& m)
  {
    this->import_rate_serializer_map_ = &m;
  }

  inline
  void transport_variable_sskel::
  import_rate_per_unit_surface_area_serializer (::common::units_decimal_sskel& s)
  {
    this->import_rate_per_unit_surface_area_serializer_ = &s;
  }

  inline
  void transport_variable_sskel::
  import_rate_per_unit_surface_area_serializer (::xml_schema::serializer_map& m)
  {
    this->import_rate_per_unit_surface_area_serializer_map_ = &m;
  }

  inline
  void transport_variable_sskel::
  saturation_density_serializer (::common::units_decimal_sskel& s)
  {
    this->saturation_density_serializer_ = &s;
  }

  inline
  void transport_variable_sskel::
  saturation_density_serializer (::xml_schema::serializer_map& m)
  {
    this->saturation_density_serializer_map_ = &m;
  }

  inline
  void transport_variable_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void transport_variable_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void transport_variable_sskel::
  serializers (::xml_schema::string_sskel& name,
               ::xml_schema::string_sskel& units,
               ::xml_schema::unsigned_long_sskel& ID,
               ::variables::amount_type_sskel& type,
               ::xml_schema::string_sskel& ChEBI_ID,
               ::xml_schema::string_sskel& MeSH_ID,
               ::xml_schema::string_sskel& DrugBank_ID,
               ::xml_schema::string_sskel& GMO_ID,
               ::xml_schema::string_sskel& GO_ID,
               ::xml_schema::string_sskel& UniProt_ID,
               ::xml_schema::string_sskel& PR_ID,
               ::common::units_decimal_sskel& export_rate,
               ::common::units_decimal_sskel& export_rate_per_unit_surface_area,
               ::common::units_decimal_sskel& import_rate,
               ::common::units_decimal_sskel& import_rate_per_unit_surface_area,
               ::common::units_decimal_sskel& saturation_density,
               ::common::custom_sskel& custom)
  {
    this->name_serializer_ = &name;
    this->units_serializer_ = &units;
    this->ID_serializer_ = &ID;
    this->type_serializer_ = &type;
    this->ChEBI_ID_serializer_ = &ChEBI_ID;
    this->MeSH_ID_serializer_ = &MeSH_ID;
    this->DrugBank_ID_serializer_ = &DrugBank_ID;
    this->GMO_ID_serializer_ = &GMO_ID;
    this->GO_ID_serializer_ = &GO_ID;
    this->UniProt_ID_serializer_ = &UniProt_ID;
    this->PR_ID_serializer_ = &PR_ID;
    this->export_rate_serializer_ = &export_rate;
    this->export_rate_per_unit_surface_area_serializer_ = &export_rate_per_unit_surface_area;
    this->import_rate_serializer_ = &import_rate;
    this->import_rate_per_unit_surface_area_serializer_ = &import_rate_per_unit_surface_area;
    this->saturation_density_serializer_ = &saturation_density;
    this->custom_serializer_ = &custom;
  }

  inline
  void transport_variable_sskel::
  serializer_maps (::xml_schema::serializer_map& export_rate,
                   ::xml_schema::serializer_map& export_rate_per_unit_surface_area,
                   ::xml_schema::serializer_map& import_rate,
                   ::xml_schema::serializer_map& import_rate_per_unit_surface_area,
                   ::xml_schema::serializer_map& saturation_density,
                   ::xml_schema::serializer_map& custom)
  {
    this->export_rate_serializer_map_ = &export_rate;
    this->export_rate_per_unit_surface_area_serializer_map_ = &export_rate_per_unit_surface_area;
    this->import_rate_serializer_map_ = &import_rate;
    this->import_rate_per_unit_surface_area_serializer_map_ = &import_rate_per_unit_surface_area;
    this->saturation_density_serializer_map_ = &saturation_density;
    this->custom_serializer_map_ = &custom;
  }

  inline
  transport_variable_sskel::
  transport_variable_sskel ()
  : transport_variable_impl_ (0),
    name_serializer_ (0),
    units_serializer_ (0),
    ID_serializer_ (0),
    type_serializer_ (0),
    ChEBI_ID_serializer_ (0),
    MeSH_ID_serializer_ (0),
    DrugBank_ID_serializer_ (0),
    GMO_ID_serializer_ (0),
    GO_ID_serializer_ (0),
    UniProt_ID_serializer_ (0),
    PR_ID_serializer_ (0),
    export_rate_serializer_ (0),
    export_rate_serializer_map_ (0),
    export_rate_per_unit_surface_area_serializer_ (0),
    export_rate_per_unit_surface_area_serializer_map_ (0),
    import_rate_serializer_ (0),
    import_rate_serializer_map_ (0),
    import_rate_per_unit_surface_area_serializer_ (0),
    import_rate_per_unit_surface_area_serializer_map_ (0),
    saturation_density_serializer_ (0),
    saturation_density_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  transport_variable_sskel::
  transport_variable_sskel (transport_variable_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    transport_variable_impl_ (impl),
    name_serializer_ (0),
    units_serializer_ (0),
    ID_serializer_ (0),
    type_serializer_ (0),
    ChEBI_ID_serializer_ (0),
    MeSH_ID_serializer_ (0),
    DrugBank_ID_serializer_ (0),
    GMO_ID_serializer_ (0),
    GO_ID_serializer_ (0),
    UniProt_ID_serializer_ (0),
    PR_ID_serializer_ (0),
    export_rate_serializer_ (0),
    export_rate_serializer_map_ (0),
    export_rate_per_unit_surface_area_serializer_ (0),
    export_rate_per_unit_surface_area_serializer_map_ (0),
    import_rate_serializer_ (0),
    import_rate_serializer_map_ (0),
    import_rate_per_unit_surface_area_serializer_ (0),
    import_rate_per_unit_surface_area_serializer_map_ (0),
    saturation_density_serializer_ (0),
    saturation_density_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // geometrical_parameters_sskel
  //

  inline
  void geometrical_parameters_sskel::
  units_serializer (::xml_schema::string_sskel& units)
  {
    this->units_serializer_ = &units;
  }

  inline
  void geometrical_parameters_sskel::
  aspect_ratio_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->aspect_ratio_serializer_ = &s;
  }

  inline
  void geometrical_parameters_sskel::
  aspect_ratio_serializer (::xml_schema::serializer_map& m)
  {
    this->aspect_ratio_serializer_map_ = &m;
  }

  inline
  void geometrical_parameters_sskel::
  circularity_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->circularity_serializer_ = &s;
  }

  inline
  void geometrical_parameters_sskel::
  circularity_serializer (::xml_schema::serializer_map& m)
  {
    this->circularity_serializer_map_ = &m;
  }

  inline
  void geometrical_parameters_sskel::
  eccentricity_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->eccentricity_serializer_ = &s;
  }

  inline
  void geometrical_parameters_sskel::
  eccentricity_serializer (::xml_schema::serializer_map& m)
  {
    this->eccentricity_serializer_map_ = &m;
  }

  inline
  void geometrical_parameters_sskel::
  sphericity_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->sphericity_serializer_ = &s;
  }

  inline
  void geometrical_parameters_sskel::
  sphericity_serializer (::xml_schema::serializer_map& m)
  {
    this->sphericity_serializer_map_ = &m;
  }

  inline
  void geometrical_parameters_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void geometrical_parameters_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void geometrical_parameters_sskel::
  serializers (::xml_schema::string_sskel& units,
               ::common::units_decimal_nonnegative_sskel& aspect_ratio,
               ::common::units_decimal_nonnegative_sskel& circularity,
               ::common::units_decimal_nonnegative_sskel& eccentricity,
               ::common::units_decimal_nonnegative_sskel& sphericity,
               ::common::custom_sskel& custom)
  {
    this->units_serializer_ = &units;
    this->aspect_ratio_serializer_ = &aspect_ratio;
    this->circularity_serializer_ = &circularity;
    this->eccentricity_serializer_ = &eccentricity;
    this->sphericity_serializer_ = &sphericity;
    this->custom_serializer_ = &custom;
  }

  inline
  void geometrical_parameters_sskel::
  serializer_maps (::xml_schema::serializer_map& aspect_ratio,
                   ::xml_schema::serializer_map& circularity,
                   ::xml_schema::serializer_map& eccentricity,
                   ::xml_schema::serializer_map& sphericity,
                   ::xml_schema::serializer_map& custom)
  {
    this->aspect_ratio_serializer_map_ = &aspect_ratio;
    this->circularity_serializer_map_ = &circularity;
    this->eccentricity_serializer_map_ = &eccentricity;
    this->sphericity_serializer_map_ = &sphericity;
    this->custom_serializer_map_ = &custom;
  }

  inline
  geometrical_parameters_sskel::
  geometrical_parameters_sskel ()
  : geometrical_parameters_impl_ (0),
    units_serializer_ (0),
    aspect_ratio_serializer_ (0),
    aspect_ratio_serializer_map_ (0),
    circularity_serializer_ (0),
    circularity_serializer_map_ (0),
    eccentricity_serializer_ (0),
    eccentricity_serializer_map_ (0),
    sphericity_serializer_ (0),
    sphericity_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  geometrical_parameters_sskel::
  geometrical_parameters_sskel (geometrical_parameters_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    geometrical_parameters_impl_ (impl),
    units_serializer_ (0),
    aspect_ratio_serializer_ (0),
    aspect_ratio_serializer_map_ (0),
    circularity_serializer_ (0),
    circularity_serializer_map_ (0),
    eccentricity_serializer_ (0),
    eccentricity_serializer_map_ (0),
    sphericity_serializer_ (0),
    sphericity_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // lengths_sskel
  //

  inline
  void lengths_sskel::
  units_serializer (::xml_schema::string_sskel& units)
  {
    this->units_serializer_ = &units;
  }

  inline
  void lengths_sskel::
  diameter_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->diameter_serializer_ = &s;
  }

  inline
  void lengths_sskel::
  diameter_serializer (::xml_schema::serializer_map& m)
  {
    this->diameter_serializer_map_ = &m;
  }

  inline
  void lengths_sskel::
  major_axis_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->major_axis_serializer_ = &s;
  }

  inline
  void lengths_sskel::
  major_axis_serializer (::xml_schema::serializer_map& m)
  {
    this->major_axis_serializer_map_ = &m;
  }

  inline
  void lengths_sskel::
  minor_axis_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->minor_axis_serializer_ = &s;
  }

  inline
  void lengths_sskel::
  minor_axis_serializer (::xml_schema::serializer_map& m)
  {
    this->minor_axis_serializer_map_ = &m;
  }

  inline
  void lengths_sskel::
  perimeter_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->perimeter_serializer_ = &s;
  }

  inline
  void lengths_sskel::
  perimeter_serializer (::xml_schema::serializer_map& m)
  {
    this->perimeter_serializer_map_ = &m;
  }

  inline
  void lengths_sskel::
  radius_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->radius_serializer_ = &s;
  }

  inline
  void lengths_sskel::
  radius_serializer (::xml_schema::serializer_map& m)
  {
    this->radius_serializer_map_ = &m;
  }

  inline
  void lengths_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void lengths_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void lengths_sskel::
  serializers (::xml_schema::string_sskel& units,
               ::common::units_decimal_nonnegative_sskel& diameter,
               ::common::units_decimal_nonnegative_sskel& major_axis,
               ::common::units_decimal_nonnegative_sskel& minor_axis,
               ::common::units_decimal_nonnegative_sskel& perimeter,
               ::common::units_decimal_nonnegative_sskel& radius,
               ::common::custom_sskel& custom)
  {
    this->units_serializer_ = &units;
    this->diameter_serializer_ = &diameter;
    this->major_axis_serializer_ = &major_axis;
    this->minor_axis_serializer_ = &minor_axis;
    this->perimeter_serializer_ = &perimeter;
    this->radius_serializer_ = &radius;
    this->custom_serializer_ = &custom;
  }

  inline
  void lengths_sskel::
  serializer_maps (::xml_schema::serializer_map& diameter,
                   ::xml_schema::serializer_map& major_axis,
                   ::xml_schema::serializer_map& minor_axis,
                   ::xml_schema::serializer_map& perimeter,
                   ::xml_schema::serializer_map& radius,
                   ::xml_schema::serializer_map& custom)
  {
    this->diameter_serializer_map_ = &diameter;
    this->major_axis_serializer_map_ = &major_axis;
    this->minor_axis_serializer_map_ = &minor_axis;
    this->perimeter_serializer_map_ = &perimeter;
    this->radius_serializer_map_ = &radius;
    this->custom_serializer_map_ = &custom;
  }

  inline
  lengths_sskel::
  lengths_sskel ()
  : lengths_impl_ (0),
    units_serializer_ (0),
    diameter_serializer_ (0),
    diameter_serializer_map_ (0),
    major_axis_serializer_ (0),
    major_axis_serializer_map_ (0),
    minor_axis_serializer_ (0),
    minor_axis_serializer_map_ (0),
    perimeter_serializer_ (0),
    perimeter_serializer_map_ (0),
    radius_serializer_ (0),
    radius_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  lengths_sskel::
  lengths_sskel (lengths_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    lengths_impl_ (impl),
    units_serializer_ (0),
    diameter_serializer_ (0),
    diameter_serializer_map_ (0),
    major_axis_serializer_ (0),
    major_axis_serializer_map_ (0),
    minor_axis_serializer_ (0),
    minor_axis_serializer_map_ (0),
    perimeter_serializer_ (0),
    perimeter_serializer_map_ (0),
    radius_serializer_ (0),
    radius_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // areas_3D_sskel
  //

  inline
  void areas_3D_sskel::
  units_serializer (::xml_schema::string_sskel& units)
  {
    this->units_serializer_ = &units;
  }

  inline
  void areas_3D_sskel::
  free_surface_area_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->free_surface_area_serializer_ = &s;
  }

  inline
  void areas_3D_sskel::
  free_surface_area_serializer (::xml_schema::serializer_map& m)
  {
    this->free_surface_area_serializer_map_ = &m;
  }

  inline
  void areas_3D_sskel::
  total_surface_area_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->total_surface_area_serializer_ = &s;
  }

  inline
  void areas_3D_sskel::
  total_surface_area_serializer (::xml_schema::serializer_map& m)
  {
    this->total_surface_area_serializer_map_ = &m;
  }

  inline
  void areas_3D_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void areas_3D_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void areas_3D_sskel::
  serializers (::xml_schema::string_sskel& units,
               ::common::units_decimal_nonnegative_sskel& free_surface_area,
               ::common::units_decimal_nonnegative_sskel& total_surface_area,
               ::common::custom_sskel& custom)
  {
    this->units_serializer_ = &units;
    this->free_surface_area_serializer_ = &free_surface_area;
    this->total_surface_area_serializer_ = &total_surface_area;
    this->custom_serializer_ = &custom;
  }

  inline
  void areas_3D_sskel::
  serializer_maps (::xml_schema::serializer_map& free_surface_area,
                   ::xml_schema::serializer_map& total_surface_area,
                   ::xml_schema::serializer_map& custom)
  {
    this->free_surface_area_serializer_map_ = &free_surface_area;
    this->total_surface_area_serializer_map_ = &total_surface_area;
    this->custom_serializer_map_ = &custom;
  }

  inline
  areas_3D_sskel::
  areas_3D_sskel ()
  : areas_3D_impl_ (0),
    units_serializer_ (0),
    free_surface_area_serializer_ (0),
    free_surface_area_serializer_map_ (0),
    total_surface_area_serializer_ (0),
    total_surface_area_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  areas_3D_sskel::
  areas_3D_sskel (areas_3D_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    areas_3D_impl_ (impl),
    units_serializer_ (0),
    free_surface_area_serializer_ (0),
    free_surface_area_serializer_map_ (0),
    total_surface_area_serializer_ (0),
    total_surface_area_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // areas_2D_sskel
  //

  inline
  void areas_2D_sskel::
  units_serializer (::xml_schema::string_sskel& units)
  {
    this->units_serializer_ = &units;
  }

  inline
  void areas_2D_sskel::
  total_area_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->total_area_serializer_ = &s;
  }

  inline
  void areas_2D_sskel::
  total_area_serializer (::xml_schema::serializer_map& m)
  {
    this->total_area_serializer_map_ = &m;
  }

  inline
  void areas_2D_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void areas_2D_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void areas_2D_sskel::
  serializers (::xml_schema::string_sskel& units,
               ::common::units_decimal_nonnegative_sskel& total_area,
               ::common::custom_sskel& custom)
  {
    this->units_serializer_ = &units;
    this->total_area_serializer_ = &total_area;
    this->custom_serializer_ = &custom;
  }

  inline
  void areas_2D_sskel::
  serializer_maps (::xml_schema::serializer_map& total_area,
                   ::xml_schema::serializer_map& custom)
  {
    this->total_area_serializer_map_ = &total_area;
    this->custom_serializer_map_ = &custom;
  }

  inline
  areas_2D_sskel::
  areas_2D_sskel ()
  : areas_2D_impl_ (0),
    units_serializer_ (0),
    total_area_serializer_ (0),
    total_area_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  areas_2D_sskel::
  areas_2D_sskel (areas_2D_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    areas_2D_impl_ (impl),
    units_serializer_ (0),
    total_area_serializer_ (0),
    total_area_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // volumes_sskel
  //

  inline
  void volumes_sskel::
  units_serializer (::xml_schema::string_sskel& units)
  {
    this->units_serializer_ = &units;
  }

  inline
  void volumes_sskel::
  fluid_volume_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->fluid_volume_serializer_ = &s;
  }

  inline
  void volumes_sskel::
  fluid_volume_serializer (::xml_schema::serializer_map& m)
  {
    this->fluid_volume_serializer_map_ = &m;
  }

  inline
  void volumes_sskel::
  fluid_volume_fraction_serializer (::common::units_fraction_sskel& s)
  {
    this->fluid_volume_fraction_serializer_ = &s;
  }

  inline
  void volumes_sskel::
  fluid_volume_fraction_serializer (::xml_schema::serializer_map& m)
  {
    this->fluid_volume_fraction_serializer_map_ = &m;
  }

  inline
  void volumes_sskel::
  solid_calcified_volume_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->solid_calcified_volume_serializer_ = &s;
  }

  inline
  void volumes_sskel::
  solid_calcified_volume_serializer (::xml_schema::serializer_map& m)
  {
    this->solid_calcified_volume_serializer_map_ = &m;
  }

  inline
  void volumes_sskel::
  solid_volume_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->solid_volume_serializer_ = &s;
  }

  inline
  void volumes_sskel::
  solid_volume_serializer (::xml_schema::serializer_map& m)
  {
    this->solid_volume_serializer_map_ = &m;
  }

  inline
  void volumes_sskel::
  solid_volume_fraction_serializer (::common::units_fraction_sskel& s)
  {
    this->solid_volume_fraction_serializer_ = &s;
  }

  inline
  void volumes_sskel::
  solid_volume_fraction_serializer (::xml_schema::serializer_map& m)
  {
    this->solid_volume_fraction_serializer_map_ = &m;
  }

  inline
  void volumes_sskel::
  total_volume_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->total_volume_serializer_ = &s;
  }

  inline
  void volumes_sskel::
  total_volume_serializer (::xml_schema::serializer_map& m)
  {
    this->total_volume_serializer_map_ = &m;
  }

  inline
  void volumes_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void volumes_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void volumes_sskel::
  serializers (::xml_schema::string_sskel& units,
               ::common::units_decimal_nonnegative_sskel& fluid_volume,
               ::common::units_fraction_sskel& fluid_volume_fraction,
               ::common::units_decimal_nonnegative_sskel& solid_calcified_volume,
               ::common::units_decimal_nonnegative_sskel& solid_volume,
               ::common::units_fraction_sskel& solid_volume_fraction,
               ::common::units_decimal_nonnegative_sskel& total_volume,
               ::common::custom_sskel& custom)
  {
    this->units_serializer_ = &units;
    this->fluid_volume_serializer_ = &fluid_volume;
    this->fluid_volume_fraction_serializer_ = &fluid_volume_fraction;
    this->solid_calcified_volume_serializer_ = &solid_calcified_volume;
    this->solid_volume_serializer_ = &solid_volume;
    this->solid_volume_fraction_serializer_ = &solid_volume_fraction;
    this->total_volume_serializer_ = &total_volume;
    this->custom_serializer_ = &custom;
  }

  inline
  void volumes_sskel::
  serializer_maps (::xml_schema::serializer_map& fluid_volume,
                   ::xml_schema::serializer_map& fluid_volume_fraction,
                   ::xml_schema::serializer_map& solid_calcified_volume,
                   ::xml_schema::serializer_map& solid_volume,
                   ::xml_schema::serializer_map& solid_volume_fraction,
                   ::xml_schema::serializer_map& total_volume,
                   ::xml_schema::serializer_map& custom)
  {
    this->fluid_volume_serializer_map_ = &fluid_volume;
    this->fluid_volume_fraction_serializer_map_ = &fluid_volume_fraction;
    this->solid_calcified_volume_serializer_map_ = &solid_calcified_volume;
    this->solid_volume_serializer_map_ = &solid_volume;
    this->solid_volume_fraction_serializer_map_ = &solid_volume_fraction;
    this->total_volume_serializer_map_ = &total_volume;
    this->custom_serializer_map_ = &custom;
  }

  inline
  volumes_sskel::
  volumes_sskel ()
  : volumes_impl_ (0),
    units_serializer_ (0),
    fluid_volume_serializer_ (0),
    fluid_volume_serializer_map_ (0),
    fluid_volume_fraction_serializer_ (0),
    fluid_volume_fraction_serializer_map_ (0),
    solid_calcified_volume_serializer_ (0),
    solid_calcified_volume_serializer_map_ (0),
    solid_volume_serializer_ (0),
    solid_volume_serializer_map_ (0),
    solid_volume_fraction_serializer_ (0),
    solid_volume_fraction_serializer_map_ (0),
    total_volume_serializer_ (0),
    total_volume_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  volumes_sskel::
  volumes_sskel (volumes_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    volumes_impl_ (impl),
    units_serializer_ (0),
    fluid_volume_serializer_ (0),
    fluid_volume_serializer_map_ (0),
    fluid_volume_fraction_serializer_ (0),
    fluid_volume_fraction_serializer_map_ (0),
    solid_calcified_volume_serializer_ (0),
    solid_calcified_volume_serializer_map_ (0),
    solid_volume_serializer_ (0),
    solid_volume_serializer_map_ (0),
    solid_volume_fraction_serializer_ (0),
    solid_volume_fraction_serializer_map_ (0),
    total_volume_serializer_ (0),
    total_volume_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // geometrical_properties_sskel
  //

  inline
  void geometrical_properties_sskel::
  parameters_serializer (::phenotype_common::geometrical_parameters_sskel& s)
  {
    this->parameters_serializer_ = &s;
  }

  inline
  void geometrical_properties_sskel::
  parameters_serializer (::xml_schema::serializer_map& m)
  {
    this->parameters_serializer_map_ = &m;
  }

  inline
  void geometrical_properties_sskel::
  lengths_serializer (::phenotype_common::lengths_sskel& s)
  {
    this->lengths_serializer_ = &s;
  }

  inline
  void geometrical_properties_sskel::
  lengths_serializer (::xml_schema::serializer_map& m)
  {
    this->lengths_serializer_map_ = &m;
  }

  inline
  void geometrical_properties_sskel::
  areas_serializer (::phenotype_common::areas_3D_sskel& s)
  {
    this->areas_serializer_ = &s;
  }

  inline
  void geometrical_properties_sskel::
  areas_serializer (::xml_schema::serializer_map& m)
  {
    this->areas_serializer_map_ = &m;
  }

  inline
  void geometrical_properties_sskel::
  volumes_serializer (::phenotype_common::volumes_sskel& s)
  {
    this->volumes_serializer_ = &s;
  }

  inline
  void geometrical_properties_sskel::
  volumes_serializer (::xml_schema::serializer_map& m)
  {
    this->volumes_serializer_map_ = &m;
  }

  inline
  void geometrical_properties_sskel::
  cross_section_serializer (::phenotype_common::cross_section_sskel& s)
  {
    this->cross_section_serializer_ = &s;
  }

  inline
  void geometrical_properties_sskel::
  cross_section_serializer (::xml_schema::serializer_map& m)
  {
    this->cross_section_serializer_map_ = &m;
  }

  inline
  void geometrical_properties_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void geometrical_properties_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void geometrical_properties_sskel::
  serializers (::phenotype_common::geometrical_parameters_sskel& parameters,
               ::phenotype_common::lengths_sskel& lengths,
               ::phenotype_common::areas_3D_sskel& areas,
               ::phenotype_common::volumes_sskel& volumes,
               ::phenotype_common::cross_section_sskel& cross_section,
               ::common::custom_sskel& custom)
  {
    this->parameters_serializer_ = &parameters;
    this->lengths_serializer_ = &lengths;
    this->areas_serializer_ = &areas;
    this->volumes_serializer_ = &volumes;
    this->cross_section_serializer_ = &cross_section;
    this->custom_serializer_ = &custom;
  }

  inline
  void geometrical_properties_sskel::
  serializer_maps (::xml_schema::serializer_map& parameters,
                   ::xml_schema::serializer_map& lengths,
                   ::xml_schema::serializer_map& areas,
                   ::xml_schema::serializer_map& volumes,
                   ::xml_schema::serializer_map& cross_section,
                   ::xml_schema::serializer_map& custom)
  {
    this->parameters_serializer_map_ = &parameters;
    this->lengths_serializer_map_ = &lengths;
    this->areas_serializer_map_ = &areas;
    this->volumes_serializer_map_ = &volumes;
    this->cross_section_serializer_map_ = &cross_section;
    this->custom_serializer_map_ = &custom;
  }

  inline
  geometrical_properties_sskel::
  geometrical_properties_sskel ()
  : geometrical_properties_impl_ (0),
    parameters_serializer_ (0),
    parameters_serializer_map_ (0),
    lengths_serializer_ (0),
    lengths_serializer_map_ (0),
    areas_serializer_ (0),
    areas_serializer_map_ (0),
    volumes_serializer_ (0),
    volumes_serializer_map_ (0),
    cross_section_serializer_ (0),
    cross_section_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  geometrical_properties_sskel::
  geometrical_properties_sskel (geometrical_properties_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    geometrical_properties_impl_ (impl),
    parameters_serializer_ (0),
    parameters_serializer_map_ (0),
    lengths_serializer_ (0),
    lengths_serializer_map_ (0),
    areas_serializer_ (0),
    areas_serializer_map_ (0),
    volumes_serializer_ (0),
    volumes_serializer_map_ (0),
    cross_section_serializer_ (0),
    cross_section_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // cross_section_sskel
  //

  inline
  void cross_section_sskel::
  parameters_serializer (::phenotype_common::geometrical_parameters_sskel& s)
  {
    this->parameters_serializer_ = &s;
  }

  inline
  void cross_section_sskel::
  parameters_serializer (::xml_schema::serializer_map& m)
  {
    this->parameters_serializer_map_ = &m;
  }

  inline
  void cross_section_sskel::
  lengths_serializer (::phenotype_common::lengths_sskel& s)
  {
    this->lengths_serializer_ = &s;
  }

  inline
  void cross_section_sskel::
  lengths_serializer (::xml_schema::serializer_map& m)
  {
    this->lengths_serializer_map_ = &m;
  }

  inline
  void cross_section_sskel::
  areas_serializer (::phenotype_common::areas_2D_sskel& s)
  {
    this->areas_serializer_ = &s;
  }

  inline
  void cross_section_sskel::
  areas_serializer (::xml_schema::serializer_map& m)
  {
    this->areas_serializer_map_ = &m;
  }

  inline
  void cross_section_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void cross_section_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void cross_section_sskel::
  serializers (::phenotype_common::geometrical_parameters_sskel& parameters,
               ::phenotype_common::lengths_sskel& lengths,
               ::phenotype_common::areas_2D_sskel& areas,
               ::common::custom_sskel& custom)
  {
    this->parameters_serializer_ = &parameters;
    this->lengths_serializer_ = &lengths;
    this->areas_serializer_ = &areas;
    this->custom_serializer_ = &custom;
  }

  inline
  void cross_section_sskel::
  serializer_maps (::xml_schema::serializer_map& parameters,
                   ::xml_schema::serializer_map& lengths,
                   ::xml_schema::serializer_map& areas,
                   ::xml_schema::serializer_map& custom)
  {
    this->parameters_serializer_map_ = &parameters;
    this->lengths_serializer_map_ = &lengths;
    this->areas_serializer_map_ = &areas;
    this->custom_serializer_map_ = &custom;
  }

  inline
  cross_section_sskel::
  cross_section_sskel ()
  : cross_section_impl_ (0),
    parameters_serializer_ (0),
    parameters_serializer_map_ (0),
    lengths_serializer_ (0),
    lengths_serializer_map_ (0),
    areas_serializer_ (0),
    areas_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  cross_section_sskel::
  cross_section_sskel (cross_section_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    cross_section_impl_ (impl),
    parameters_serializer_ (0),
    parameters_serializer_map_ (0),
    lengths_serializer_ (0),
    lengths_serializer_map_ (0),
    areas_serializer_ (0),
    areas_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // mass_sskel
  //

  inline
  void mass_sskel::
  biomass_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->biomass_serializer_ = &s;
  }

  inline
  void mass_sskel::
  biomass_serializer (::xml_schema::serializer_map& m)
  {
    this->biomass_serializer_map_ = &m;
  }

  inline
  void mass_sskel::
  fluid_mass_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->fluid_mass_serializer_ = &s;
  }

  inline
  void mass_sskel::
  fluid_mass_serializer (::xml_schema::serializer_map& m)
  {
    this->fluid_mass_serializer_map_ = &m;
  }

  inline
  void mass_sskel::
  total_mass_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->total_mass_serializer_ = &s;
  }

  inline
  void mass_sskel::
  total_mass_serializer (::xml_schema::serializer_map& m)
  {
    this->total_mass_serializer_map_ = &m;
  }

  inline
  void mass_sskel::
  serializers (::common::units_decimal_nonnegative_sskel& biomass,
               ::common::units_decimal_nonnegative_sskel& fluid_mass,
               ::common::units_decimal_nonnegative_sskel& total_mass)
  {
    this->biomass_serializer_ = &biomass;
    this->fluid_mass_serializer_ = &fluid_mass;
    this->total_mass_serializer_ = &total_mass;
  }

  inline
  void mass_sskel::
  serializer_maps (::xml_schema::serializer_map& biomass,
                   ::xml_schema::serializer_map& fluid_mass,
                   ::xml_schema::serializer_map& total_mass)
  {
    this->biomass_serializer_map_ = &biomass;
    this->fluid_mass_serializer_map_ = &fluid_mass;
    this->total_mass_serializer_map_ = &total_mass;
  }

  inline
  mass_sskel::
  mass_sskel ()
  : mass_impl_ (0),
    biomass_serializer_ (0),
    biomass_serializer_map_ (0),
    fluid_mass_serializer_ (0),
    fluid_mass_serializer_map_ (0),
    total_mass_serializer_ (0),
    total_mass_serializer_map_ (0)
  {
  }

  inline
  mass_sskel::
  mass_sskel (mass_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    mass_impl_ (impl),
    biomass_serializer_ (0),
    biomass_serializer_map_ (0),
    fluid_mass_serializer_ (0),
    fluid_mass_serializer_map_ (0),
    total_mass_serializer_ (0),
    total_mass_serializer_map_ (0)
  {
  }
}

// Begin epilogue.
//
//
// End epilogue.

