// Copyright (c) 2005-2016 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

// MCDS_type_pskel
//

inline
MCDS_type_pskel::
MCDS_type_pskel (::xml_schema::string_pskel* tiein)
: ::xml_schema::string_pskel (tiein, 0),
  MCDS_type_impl_ (0)
{
  this->_enumeration_facet (_xsde_MCDS_type_pskel_enums_, 4UL);
}

inline
MCDS_type_pskel::
MCDS_type_pskel (MCDS_type_pskel* impl, void*)
: ::xml_schema::string_pskel (impl, 0),
  MCDS_type_impl_ (impl)
{
  this->_enumeration_facet (_xsde_MCDS_type_pskel_enums_, 4UL);
}

// MultiCellDS_pskel
//

inline
void MultiCellDS_pskel::
version_parser (::xml_schema::string_pskel& p)
{
  this->version_parser_ = &p;
}

inline
void MultiCellDS_pskel::
type_parser (::MCDS_type_pskel& p)
{
  this->type_parser_ = &p;
}

inline
void MultiCellDS_pskel::
cell_line_parser (::cell_line::cell_line_pskel& p)
{
  this->cell_line_parser_ = &p;
}

inline
void MultiCellDS_pskel::
cell_line_parser (::xml_schema::parser_map& m)
{
  this->cell_line_parser_map_ = &m;
}

inline
void MultiCellDS_pskel::
metadata_parser (::metadata::metadata_pskel& p)
{
  this->metadata_parser_ = &p;
}

inline
void MultiCellDS_pskel::
metadata_parser (::xml_schema::parser_map& m)
{
  this->metadata_parser_map_ = &m;
}

inline
void MultiCellDS_pskel::
microenvironment_parser (::microenvironment::microenvironment_pskel& p)
{
  this->microenvironment_parser_ = &p;
}

inline
void MultiCellDS_pskel::
microenvironment_parser (::xml_schema::parser_map& m)
{
  this->microenvironment_parser_map_ = &m;
}

inline
void MultiCellDS_pskel::
cellular_information_parser (::cell::cellular_information_pskel& p)
{
  this->cellular_information_parser_ = &p;
}

inline
void MultiCellDS_pskel::
cellular_information_parser (::xml_schema::parser_map& m)
{
  this->cellular_information_parser_map_ = &m;
}

inline
void MultiCellDS_pskel::
parsers (::xml_schema::string_pskel& version,
         ::MCDS_type_pskel& type,
         ::cell_line::cell_line_pskel& cell_line,
         ::metadata::metadata_pskel& metadata,
         ::microenvironment::microenvironment_pskel& microenvironment,
         ::cell::cellular_information_pskel& cellular_information)
{
  this->version_parser_ = &version;
  this->type_parser_ = &type;
  this->cell_line_parser_ = &cell_line;
  this->metadata_parser_ = &metadata;
  this->microenvironment_parser_ = &microenvironment;
  this->cellular_information_parser_ = &cellular_information;
}

inline
void MultiCellDS_pskel::
parser_maps (::xml_schema::parser_map& cell_line,
             ::xml_schema::parser_map& metadata,
             ::xml_schema::parser_map& microenvironment,
             ::xml_schema::parser_map& cellular_information)
{
  this->cell_line_parser_map_ = &cell_line;
  this->metadata_parser_map_ = &metadata;
  this->microenvironment_parser_map_ = &microenvironment;
  this->cellular_information_parser_map_ = &cellular_information;
}

inline
MultiCellDS_pskel::
MultiCellDS_pskel ()
: MultiCellDS_impl_ (0),
  version_parser_ (0),
  type_parser_ (0),
  cell_line_parser_ (0),
  cell_line_parser_map_ (0),
  metadata_parser_ (0),
  metadata_parser_map_ (0),
  microenvironment_parser_ (0),
  microenvironment_parser_map_ (0),
  cellular_information_parser_ (0),
  cellular_information_parser_map_ (0),
  v_state_stack_ (sizeof (v_state_), &v_state_first_)
{
}

inline
MultiCellDS_pskel::
MultiCellDS_pskel (MultiCellDS_pskel* impl, void*)
: ::xsde::cxx::parser::validating::complex_content (impl, 0),
  MultiCellDS_impl_ (impl),
  version_parser_ (0),
  type_parser_ (0),
  cell_line_parser_ (0),
  cell_line_parser_map_ (0),
  metadata_parser_ (0),
  metadata_parser_map_ (0),
  microenvironment_parser_ (0),
  microenvironment_parser_map_ (0),
  cellular_information_parser_ (0),
  cellular_information_parser_map_ (0),
  v_state_stack_ (sizeof (v_state_), &v_state_first_)
{
}

// Begin epilogue.
//
//
// End epilogue.

