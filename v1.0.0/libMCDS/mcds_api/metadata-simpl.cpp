// Copyright (c) 2005-2016 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

#include "metadata-simpl.hpp"

namespace metadata
{
  // URL_simpl
  //

  URL_simpl::
  URL_simpl ()
  : URL_sskel (&base_impl_)
  {
  }

  void URL_simpl::
  pre (const ::metadata::URL& x)
  {
    this->base_impl_.pre (x);
  }

  // orcid_identifier_simpl
  //

  void orcid_identifier_simpl::
  pre (const ::metadata::orcid_identifier& x)
  {
    this->orcid_identifier_simpl_state_.orcid_identifier_ = &x;
  }

  bool orcid_identifier_simpl::
  path_present ()
  {
    return this->orcid_identifier_simpl_state_.orcid_identifier_->path_present ();
  }

  ::std::string orcid_identifier_simpl::
  path ()
  {
    return this->orcid_identifier_simpl_state_.orcid_identifier_->path ();
  }

  bool orcid_identifier_simpl::
  given_names_present ()
  {
    return this->orcid_identifier_simpl_state_.orcid_identifier_->given_names_present ();
  }

  ::std::string orcid_identifier_simpl::
  given_names ()
  {
    return this->orcid_identifier_simpl_state_.orcid_identifier_->given_names ();
  }

  bool orcid_identifier_simpl::
  family_name_present ()
  {
    return this->orcid_identifier_simpl_state_.orcid_identifier_->family_name_present ();
  }

  ::std::string orcid_identifier_simpl::
  family_name ()
  {
    return this->orcid_identifier_simpl_state_.orcid_identifier_->family_name ();
  }

  bool orcid_identifier_simpl::
  email_present ()
  {
    return this->orcid_identifier_simpl_state_.orcid_identifier_->email_present ();
  }

  ::std::string orcid_identifier_simpl::
  email ()
  {
    return this->orcid_identifier_simpl_state_.orcid_identifier_->email ();
  }

  bool orcid_identifier_simpl::
  url_present ()
  {
    return this->orcid_identifier_simpl_state_.orcid_identifier_->url_present ();
  }

  const ::metadata::URL& orcid_identifier_simpl::
  url ()
  {
    return this->orcid_identifier_simpl_state_.orcid_identifier_->url ();
  }

  bool orcid_identifier_simpl::
  organization_name_present ()
  {
    return this->orcid_identifier_simpl_state_.orcid_identifier_->organization_name_present ();
  }

  ::std::string orcid_identifier_simpl::
  organization_name ()
  {
    return this->orcid_identifier_simpl_state_.orcid_identifier_->organization_name ();
  }

  bool orcid_identifier_simpl::
  department_name_present ()
  {
    return this->orcid_identifier_simpl_state_.orcid_identifier_->department_name_present ();
  }

  ::std::string orcid_identifier_simpl::
  department_name ()
  {
    return this->orcid_identifier_simpl_state_.orcid_identifier_->department_name ();
  }

  // orcid_person_simpl
  //

  void orcid_person_simpl::
  pre (const ::metadata::orcid_person& x)
  {
    this->orcid_person_simpl_state_.orcid_person_ = &x;
    this->orcid_person_simpl_state_.orcid_identifier_ = 
    this->orcid_person_simpl_state_.orcid_person_->orcid_identifier ().begin ();
    this->orcid_person_simpl_state_.orcid_identifier_end_ = 
    this->orcid_person_simpl_state_.orcid_person_->orcid_identifier ().end ();
  }

  bool orcid_person_simpl::
  orcid_identifier_next ()
  {
    return this->orcid_person_simpl_state_.orcid_identifier_ != 
    this->orcid_person_simpl_state_.orcid_identifier_end_;
  }

  const ::metadata::orcid_identifier& orcid_person_simpl::
  orcid_identifier ()
  {
    return *this->orcid_person_simpl_state_.orcid_identifier_++;
  }

  // classification_simpl
  //

  void classification_simpl::
  pre (const ::metadata::classification& x)
  {
    this->classification_simpl_state_.classification_ = &x;
  }

  ::std::string classification_simpl::
  classification_number ()
  {
    return this->classification_simpl_state_.classification_->classification_number ();
  }

  unsigned int classification_simpl::
  line ()
  {
    return this->classification_simpl_state_.classification_->line ();
  }

  unsigned int classification_simpl::
  variant ()
  {
    return this->classification_simpl_state_.classification_->variant ();
  }

  unsigned int classification_simpl::
  branch ()
  {
    return this->classification_simpl_state_.classification_->branch ();
  }

  unsigned int classification_simpl::
  version ()
  {
    return this->classification_simpl_state_.classification_->version ();
  }

  // curation_simpl
  //

  void curation_simpl::
  pre (const ::metadata::curation& x)
  {
    this->curation_simpl_state_.curation_ = &x;
  }

  bool curation_simpl::
  curated_present ()
  {
    return this->curation_simpl_state_.curation_->curated_present ();
  }

  bool curation_simpl::
  curated ()
  {
    return this->curation_simpl_state_.curation_->curated ();
  }

  ::xml_schema::date_time curation_simpl::
  created ()
  {
    return this->curation_simpl_state_.curation_->created ();
  }

  ::xml_schema::date_time curation_simpl::
  last_modified ()
  {
    return this->curation_simpl_state_.curation_->last_modified ();
  }

  curation_sskel::choice_arm_tag curation_simpl::
  choice_arm ()
  {
    choice_arm_tag t (static_cast< choice_arm_tag > (
                        this->curation_simpl_state_.curation_->choice_arm ()));
    return t;
  }

  const ::metadata::classification& curation_simpl::
  classification ()
  {
    return this->curation_simpl_state_.curation_->classification ();
  }

  ::std::string curation_simpl::
  version ()
  {
    return this->curation_simpl_state_.curation_->version ();
  }

  const ::metadata::orcid_person& curation_simpl::
  creator ()
  {
    return this->curation_simpl_state_.curation_->creator ();
  }

  const ::metadata::orcid_person& curation_simpl::
  current_contact ()
  {
    return this->curation_simpl_state_.curation_->current_contact ();
  }

  bool curation_simpl::
  curator_present ()
  {
    return this->curation_simpl_state_.curation_->curator_present ();
  }

  const ::metadata::orcid_person& curation_simpl::
  curator ()
  {
    return this->curation_simpl_state_.curation_->curator ();
  }

  const ::metadata::orcid_person& curation_simpl::
  last_modified_by ()
  {
    return this->curation_simpl_state_.curation_->last_modified_by ();
  }

  // citation_simpl
  //

  void citation_simpl::
  pre (const ::metadata::citation& x)
  {
    this->citation_simpl_state_.citation_ = &x;
    this->citation_simpl_state_.URL_ = 
    this->citation_simpl_state_.citation_->URL ().begin ();
    this->citation_simpl_state_.URL_end_ = 
    this->citation_simpl_state_.citation_->URL ().end ();
  }

  bool citation_simpl::
  text_present ()
  {
    return this->citation_simpl_state_.citation_->text_present ();
  }

  ::std::string citation_simpl::
  text ()
  {
    return this->citation_simpl_state_.citation_->text ();
  }

  bool citation_simpl::
  DOI_present ()
  {
    return this->citation_simpl_state_.citation_->DOI_present ();
  }

  ::std::string citation_simpl::
  DOI ()
  {
    return this->citation_simpl_state_.citation_->DOI ();
  }

  bool citation_simpl::
  URL_next ()
  {
    return this->citation_simpl_state_.URL_ != 
    this->citation_simpl_state_.URL_end_;
  }

  const ::metadata::URL& citation_simpl::
  URL ()
  {
    return *this->citation_simpl_state_.URL_++;
  }

  bool citation_simpl::
  PMID_present ()
  {
    return this->citation_simpl_state_.citation_->PMID_present ();
  }

  ::std::string citation_simpl::
  PMID ()
  {
    return this->citation_simpl_state_.citation_->PMID ();
  }

  bool citation_simpl::
  PMCID_present ()
  {
    return this->citation_simpl_state_.citation_->PMCID_present ();
  }

  ::std::string citation_simpl::
  PMCID ()
  {
    return this->citation_simpl_state_.citation_->PMCID ();
  }

  bool citation_simpl::
  arXiv_present ()
  {
    return this->citation_simpl_state_.citation_->arXiv_present ();
  }

  ::std::string citation_simpl::
  arXiv ()
  {
    return this->citation_simpl_state_.citation_->arXiv ();
  }

  bool citation_simpl::
  notes_present ()
  {
    return this->citation_simpl_state_.citation_->notes_present ();
  }

  ::std::string citation_simpl::
  notes ()
  {
    return this->citation_simpl_state_.citation_->notes ();
  }

  bool citation_simpl::
  custom_present ()
  {
    return this->citation_simpl_state_.citation_->custom_present ();
  }

  const ::common::custom& citation_simpl::
  custom ()
  {
    return this->citation_simpl_state_.citation_->custom ();
  }

  // data_origin_simpl
  //

  void data_origin_simpl::
  pre (const ::metadata::data_origin& x)
  {
    this->data_origin_simpl_state_.data_origin_ = &x;
    this->data_origin_simpl_state_.citation_ = 
    this->data_origin_simpl_state_.data_origin_->citation ().begin ();
    this->data_origin_simpl_state_.citation_end_ = 
    this->data_origin_simpl_state_.data_origin_->citation ().end ();
  }

  bool data_origin_simpl::
  ID_present ()
  {
    return this->data_origin_simpl_state_.data_origin_->ID_present ();
  }

  unsigned long long data_origin_simpl::
  ID ()
  {
    return this->data_origin_simpl_state_.data_origin_->ID ();
  }

  bool data_origin_simpl::
  instrumentation_information_present ()
  {
    return this->data_origin_simpl_state_.data_origin_->instrumentation_information_present ();
  }

  ::std::string data_origin_simpl::
  instrumentation_information ()
  {
    return this->data_origin_simpl_state_.data_origin_->instrumentation_information ();
  }

  bool data_origin_simpl::
  experimental_protocol_present ()
  {
    return this->data_origin_simpl_state_.data_origin_->experimental_protocol_present ();
  }

  ::std::string data_origin_simpl::
  experimental_protocol ()
  {
    return this->data_origin_simpl_state_.data_origin_->experimental_protocol ();
  }

  bool data_origin_simpl::
  citation_next ()
  {
    return this->data_origin_simpl_state_.citation_ != 
    this->data_origin_simpl_state_.citation_end_;
  }

  const ::metadata::citation& data_origin_simpl::
  citation ()
  {
    return *this->data_origin_simpl_state_.citation_++;
  }

  bool data_origin_simpl::
  xpath_present ()
  {
    return this->data_origin_simpl_state_.data_origin_->xpath_present ();
  }

  ::std::string data_origin_simpl::
  xpath ()
  {
    return this->data_origin_simpl_state_.data_origin_->xpath ();
  }

  bool data_origin_simpl::
  notes_present ()
  {
    return this->data_origin_simpl_state_.data_origin_->notes_present ();
  }

  ::std::string data_origin_simpl::
  notes ()
  {
    return this->data_origin_simpl_state_.data_origin_->notes ();
  }

  bool data_origin_simpl::
  custom_present ()
  {
    return this->data_origin_simpl_state_.data_origin_->custom_present ();
  }

  const ::common::custom& data_origin_simpl::
  custom ()
  {
    return this->data_origin_simpl_state_.data_origin_->custom ();
  }

  // data_origins_simpl
  //

  void data_origins_simpl::
  pre (const ::metadata::data_origins& x)
  {
    this->data_origins_simpl_state_.data_origins_ = &x;
    this->data_origins_simpl_state_.data_origin_ = 
    this->data_origins_simpl_state_.data_origins_->data_origin ().begin ();
    this->data_origins_simpl_state_.data_origin_end_ = 
    this->data_origins_simpl_state_.data_origins_->data_origin ().end ();
  }

  bool data_origins_simpl::
  data_origin_next ()
  {
    return this->data_origins_simpl_state_.data_origin_ != 
    this->data_origins_simpl_state_.data_origin_end_;
  }

  const ::metadata::data_origin& data_origins_simpl::
  data_origin ()
  {
    return *this->data_origins_simpl_state_.data_origin_++;
  }

  bool data_origins_simpl::
  custom_present ()
  {
    return this->data_origins_simpl_state_.data_origins_->custom_present ();
  }

  const ::common::custom& data_origins_simpl::
  custom ()
  {
    return this->data_origins_simpl_state_.data_origins_->custom ();
  }

  // data_analysis_simpl
  //

  void data_analysis_simpl::
  pre (const ::metadata::data_analysis& x)
  {
    this->data_analysis_simpl_state_.data_analysis_ = &x;
  }

  bool data_analysis_simpl::
  URL_present ()
  {
    return this->data_analysis_simpl_state_.data_analysis_->URL_present ();
  }

  const ::metadata::URL& data_analysis_simpl::
  URL ()
  {
    return this->data_analysis_simpl_state_.data_analysis_->URL ();
  }

  bool data_analysis_simpl::
  citation_present ()
  {
    return this->data_analysis_simpl_state_.data_analysis_->citation_present ();
  }

  const ::metadata::citation& data_analysis_simpl::
  citation ()
  {
    return this->data_analysis_simpl_state_.data_analysis_->citation ();
  }

  bool data_analysis_simpl::
  software_present ()
  {
    return this->data_analysis_simpl_state_.data_analysis_->software_present ();
  }

  const ::metadata::software& data_analysis_simpl::
  software ()
  {
    return this->data_analysis_simpl_state_.data_analysis_->software ();
  }

  bool data_analysis_simpl::
  xpath_present ()
  {
    return this->data_analysis_simpl_state_.data_analysis_->xpath_present ();
  }

  ::std::string data_analysis_simpl::
  xpath ()
  {
    return this->data_analysis_simpl_state_.data_analysis_->xpath ();
  }

  bool data_analysis_simpl::
  notes_present ()
  {
    return this->data_analysis_simpl_state_.data_analysis_->notes_present ();
  }

  ::std::string data_analysis_simpl::
  notes ()
  {
    return this->data_analysis_simpl_state_.data_analysis_->notes ();
  }

  bool data_analysis_simpl::
  custom_present ()
  {
    return this->data_analysis_simpl_state_.data_analysis_->custom_present ();
  }

  const ::common::custom& data_analysis_simpl::
  custom ()
  {
    return this->data_analysis_simpl_state_.data_analysis_->custom ();
  }

  // software_simpl
  //

  void software_simpl::
  pre (const ::metadata::software& x)
  {
    this->software_simpl_state_.software_ = &x;
  }

  bool software_simpl::
  software_name_present ()
  {
    return this->software_simpl_state_.software_->software_name_present ();
  }

  ::std::string software_simpl::
  software_name ()
  {
    return this->software_simpl_state_.software_->software_name ();
  }

  bool software_simpl::
  software_version_present ()
  {
    return this->software_simpl_state_.software_->software_version_present ();
  }

  ::std::string software_simpl::
  software_version ()
  {
    return this->software_simpl_state_.software_->software_version ();
  }

  bool software_simpl::
  software_input_configuration_present ()
  {
    return this->software_simpl_state_.software_->software_input_configuration_present ();
  }

  const ::common::custom& software_simpl::
  software_input_configuration ()
  {
    return this->software_simpl_state_.software_->software_input_configuration ();
  }

  bool software_simpl::
  name_present ()
  {
    return this->software_simpl_state_.software_->name_present ();
  }

  ::std::string software_simpl::
  name ()
  {
    return this->software_simpl_state_.software_->name ();
  }

  bool software_simpl::
  version_present ()
  {
    return this->software_simpl_state_.software_->version_present ();
  }

  ::std::string software_simpl::
  version ()
  {
    return this->software_simpl_state_.software_->version ();
  }

  bool software_simpl::
  input_configuration_present ()
  {
    return this->software_simpl_state_.software_->input_configuration_present ();
  }

  const ::common::custom& software_simpl::
  input_configuration ()
  {
    return this->software_simpl_state_.software_->input_configuration ();
  }

  bool software_simpl::
  URL_present ()
  {
    return this->software_simpl_state_.software_->URL_present ();
  }

  const ::metadata::URL& software_simpl::
  URL ()
  {
    return this->software_simpl_state_.software_->URL ();
  }

  bool software_simpl::
  creator_present ()
  {
    return this->software_simpl_state_.software_->creator_present ();
  }

  const ::metadata::orcid_person& software_simpl::
  creator ()
  {
    return this->software_simpl_state_.software_->creator ();
  }

  bool software_simpl::
  citation_present ()
  {
    return this->software_simpl_state_.software_->citation_present ();
  }

  const ::metadata::citation& software_simpl::
  citation ()
  {
    return this->software_simpl_state_.software_->citation ();
  }

  bool software_simpl::
  user_present ()
  {
    return this->software_simpl_state_.software_->user_present ();
  }

  const ::metadata::orcid_person& software_simpl::
  user ()
  {
    return this->software_simpl_state_.software_->user ();
  }

  bool software_simpl::
  custom_present ()
  {
    return this->software_simpl_state_.software_->custom_present ();
  }

  const ::common::custom& software_simpl::
  custom ()
  {
    return this->software_simpl_state_.software_->custom ();
  }

  // species_simpl
  //

  species_simpl::
  species_simpl ()
  : species_sskel (&base_impl_)
  {
  }

  void species_simpl::
  pre (const ::metadata::species& x)
  {
    this->base_impl_.pre (x);
    this->species_simpl_state_.species_ = &x;
  }

  bool species_simpl::
  MeSH_ID_present ()
  {
    return this->species_simpl_state_.species_->MeSH_ID_present ();
  }

  ::std::string species_simpl::
  MeSH_ID ()
  {
    return this->species_simpl_state_.species_->MeSH_ID ();
  }

  // disease_simpl
  //

  disease_simpl::
  disease_simpl ()
  : disease_sskel (&base_impl_)
  {
  }

  void disease_simpl::
  pre (const ::metadata::disease& x)
  {
    this->base_impl_.pre (x);
    this->disease_simpl_state_.disease_ = &x;
  }

  bool disease_simpl::
  EFO_ID_present ()
  {
    return this->disease_simpl_state_.disease_->EFO_ID_present ();
  }

  ::std::string disease_simpl::
  EFO_ID ()
  {
    return this->disease_simpl_state_.disease_->EFO_ID ();
  }

  bool disease_simpl::
  DOID_ID_present ()
  {
    return this->disease_simpl_state_.disease_->DOID_ID_present ();
  }

  ::std::string disease_simpl::
  DOID_ID ()
  {
    return this->disease_simpl_state_.disease_->DOID_ID ();
  }

  // patient_derived_simpl
  //

  patient_derived_simpl::
  patient_derived_simpl ()
  : patient_derived_sskel (&base_impl_)
  {
  }

  void patient_derived_simpl::
  pre (const ::metadata::patient_derived& x)
  {
    this->base_impl_.pre (x);
    this->patient_derived_simpl_state_.patient_derived_ = &x;
  }

  bool patient_derived_simpl::
  patient_ID_present ()
  {
    return this->patient_derived_simpl_state_.patient_derived_->patient_ID_present ();
  }

  ::std::string patient_derived_simpl::
  patient_ID ()
  {
    return this->patient_derived_simpl_state_.patient_derived_->patient_ID ();
  }

  // cell_origin_simpl
  //

  void cell_origin_simpl::
  pre (const ::metadata::cell_origin& x)
  {
    this->cell_origin_simpl_state_.cell_origin_ = &x;
  }

  bool cell_origin_simpl::
  BTO_ID_present ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->BTO_ID_present ();
  }

  ::std::string cell_origin_simpl::
  BTO_ID ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->BTO_ID ();
  }

  bool cell_origin_simpl::
  CLO_ID_present ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->CLO_ID_present ();
  }

  ::std::string cell_origin_simpl::
  CLO_ID ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->CLO_ID ();
  }

  bool cell_origin_simpl::
  species_present ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->species_present ();
  }

  const ::metadata::species& cell_origin_simpl::
  species ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->species ();
  }

  bool cell_origin_simpl::
  strain_present ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->strain_present ();
  }

  ::std::string cell_origin_simpl::
  strain ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->strain ();
  }

  bool cell_origin_simpl::
  organ_present ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->organ_present ();
  }

  ::std::string cell_origin_simpl::
  organ ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->organ ();
  }

  bool cell_origin_simpl::
  disease_present ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->disease_present ();
  }

  const ::metadata::disease& cell_origin_simpl::
  disease ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->disease ();
  }

  bool cell_origin_simpl::
  morphology_present ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->morphology_present ();
  }

  ::std::string cell_origin_simpl::
  morphology ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->morphology ();
  }

  bool cell_origin_simpl::
  patient_derived_present ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->patient_derived_present ();
  }

  const ::metadata::patient_derived& cell_origin_simpl::
  patient_derived ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->patient_derived ();
  }

  bool cell_origin_simpl::
  custom_present ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->custom_present ();
  }

  const ::common::custom& cell_origin_simpl::
  custom ()
  {
    return this->cell_origin_simpl_state_.cell_origin_->custom ();
  }

  // MultiCellDB_simpl
  //

  void MultiCellDB_simpl::
  pre (const ::metadata::MultiCellDB& x)
  {
    this->MultiCellDB_simpl_state_.MultiCellDB_ = &x;
  }

  bool MultiCellDB_simpl::
  ID_present ()
  {
    return this->MultiCellDB_simpl_state_.MultiCellDB_->ID_present ();
  }

  ::std::string MultiCellDB_simpl::
  ID ()
  {
    return this->MultiCellDB_simpl_state_.MultiCellDB_->ID ();
  }

  bool MultiCellDB_simpl::
  name_present ()
  {
    return this->MultiCellDB_simpl_state_.MultiCellDB_->name_present ();
  }

  ::std::string MultiCellDB_simpl::
  name ()
  {
    return this->MultiCellDB_simpl_state_.MultiCellDB_->name ();
  }

  // rights_simpl
  //

  void rights_simpl::
  pre (const ::metadata::rights& x)
  {
    this->rights_simpl_state_.rights_ = &x;
    this->rights_simpl_state_.license_ = 
    this->rights_simpl_state_.rights_->license ().begin ();
    this->rights_simpl_state_.license_end_ = 
    this->rights_simpl_state_.rights_->license ().end ();
  }

  bool rights_simpl::
  license_next ()
  {
    return this->rights_simpl_state_.license_ != 
    this->rights_simpl_state_.license_end_;
  }

  const ::metadata::license& rights_simpl::
  license ()
  {
    return *this->rights_simpl_state_.license_++;
  }

  bool rights_simpl::
  custom_present ()
  {
    return this->rights_simpl_state_.rights_->custom_present ();
  }

  const ::common::custom& rights_simpl::
  custom ()
  {
    return this->rights_simpl_state_.rights_->custom ();
  }

  // license_simpl
  //

  void license_simpl::
  pre (const ::metadata::license& x)
  {
    this->license_simpl_state_.license_ = &x;
  }

  const ::metadata::LicenseDocument& license_simpl::
  LicenseDocument ()
  {
    return this->license_simpl_state_.license_->LicenseDocument ();
  }

  bool license_simpl::
  notes_present ()
  {
    return this->license_simpl_state_.license_->notes_present ();
  }

  ::std::string license_simpl::
  notes ()
  {
    return this->license_simpl_state_.license_->notes ();
  }

  bool license_simpl::
  custom_present ()
  {
    return this->license_simpl_state_.license_->custom_present ();
  }

  const ::common::custom& license_simpl::
  custom ()
  {
    return this->license_simpl_state_.license_->custom ();
  }

  // LicenseDocument_simpl
  //

  void LicenseDocument_simpl::
  pre (const ::metadata::LicenseDocument& x)
  {
    this->LicenseDocument_simpl_state_.LicenseDocument_ = &x;
  }

  ::std::string LicenseDocument_simpl::
  name ()
  {
    return this->LicenseDocument_simpl_state_.LicenseDocument_->name ();
  }

  bool LicenseDocument_simpl::
  URL_present ()
  {
    return this->LicenseDocument_simpl_state_.LicenseDocument_->URL_present ();
  }

  const ::metadata::URL& LicenseDocument_simpl::
  URL ()
  {
    return this->LicenseDocument_simpl_state_.LicenseDocument_->URL ();
  }

  bool LicenseDocument_simpl::
  custom_present ()
  {
    return this->LicenseDocument_simpl_state_.LicenseDocument_->custom_present ();
  }

  const ::common::custom& LicenseDocument_simpl::
  custom ()
  {
    return this->LicenseDocument_simpl_state_.LicenseDocument_->custom ();
  }

  // metadata_simpl
  //

  void metadata_simpl::
  pre (const ::metadata::metadata& x)
  {
    this->metadata_simpl_state_.metadata_ = &x;
    this->metadata_simpl_state_.data_analysis_ = 
    this->metadata_simpl_state_.metadata_->data_analysis ().begin ();
    this->metadata_simpl_state_.data_analysis_end_ = 
    this->metadata_simpl_state_.metadata_->data_analysis ().end ();
  }

  bool metadata_simpl::
  MultiCellDB_present ()
  {
    return this->metadata_simpl_state_.metadata_->MultiCellDB_present ();
  }

  const ::metadata::MultiCellDB& metadata_simpl::
  MultiCellDB ()
  {
    return this->metadata_simpl_state_.metadata_->MultiCellDB ();
  }

  bool metadata_simpl::
  description_present ()
  {
    return this->metadata_simpl_state_.metadata_->description_present ();
  }

  ::std::string metadata_simpl::
  description ()
  {
    return this->metadata_simpl_state_.metadata_->description ();
  }

  bool metadata_simpl::
  software_present ()
  {
    return this->metadata_simpl_state_.metadata_->software_present ();
  }

  const ::metadata::software& metadata_simpl::
  software ()
  {
    return this->metadata_simpl_state_.metadata_->software ();
  }

  bool metadata_simpl::
  citation_present ()
  {
    return this->metadata_simpl_state_.metadata_->citation_present ();
  }

  const ::metadata::citation& metadata_simpl::
  citation ()
  {
    return this->metadata_simpl_state_.metadata_->citation ();
  }

  bool metadata_simpl::
  curation_present ()
  {
    return this->metadata_simpl_state_.metadata_->curation_present ();
  }

  const ::metadata::curation& metadata_simpl::
  curation ()
  {
    return this->metadata_simpl_state_.metadata_->curation ();
  }

  bool metadata_simpl::
  data_origins_present ()
  {
    return this->metadata_simpl_state_.metadata_->data_origins_present ();
  }

  const ::metadata::data_origins& metadata_simpl::
  data_origins ()
  {
    return this->metadata_simpl_state_.metadata_->data_origins ();
  }

  bool metadata_simpl::
  data_analysis_next ()
  {
    return this->metadata_simpl_state_.data_analysis_ != 
    this->metadata_simpl_state_.data_analysis_end_;
  }

  const ::metadata::data_analysis& metadata_simpl::
  data_analysis ()
  {
    return *this->metadata_simpl_state_.data_analysis_++;
  }

  const ::metadata::rights& metadata_simpl::
  rights ()
  {
    return this->metadata_simpl_state_.metadata_->rights ();
  }

  bool metadata_simpl::
  cell_origin_present ()
  {
    return this->metadata_simpl_state_.metadata_->cell_origin_present ();
  }

  const ::metadata::cell_origin& metadata_simpl::
  cell_origin ()
  {
    return this->metadata_simpl_state_.metadata_->cell_origin ();
  }

  bool metadata_simpl::
  current_time_present ()
  {
    return this->metadata_simpl_state_.metadata_->current_time_present ();
  }

  const ::common::units_decimal_nonnegative& metadata_simpl::
  current_time ()
  {
    return this->metadata_simpl_state_.metadata_->current_time ();
  }

  bool metadata_simpl::
  current_runtime_present ()
  {
    return this->metadata_simpl_state_.metadata_->current_runtime_present ();
  }

  const ::common::units_decimal_nonnegative& metadata_simpl::
  current_runtime ()
  {
    return this->metadata_simpl_state_.metadata_->current_runtime ();
  }

  bool metadata_simpl::
  created_present ()
  {
    return this->metadata_simpl_state_.metadata_->created_present ();
  }

  ::xml_schema::date_time metadata_simpl::
  created ()
  {
    return this->metadata_simpl_state_.metadata_->created ();
  }

  bool metadata_simpl::
  last_modified_present ()
  {
    return this->metadata_simpl_state_.metadata_->last_modified_present ();
  }

  ::xml_schema::date_time metadata_simpl::
  last_modified ()
  {
    return this->metadata_simpl_state_.metadata_->last_modified ();
  }

  bool metadata_simpl::
  notes_present ()
  {
    return this->metadata_simpl_state_.metadata_->notes_present ();
  }

  ::std::string metadata_simpl::
  notes ()
  {
    return this->metadata_simpl_state_.metadata_->notes ();
  }

  bool metadata_simpl::
  custom_present ()
  {
    return this->metadata_simpl_state_.metadata_->custom_present ();
  }

  const ::common::custom& metadata_simpl::
  custom ()
  {
    return this->metadata_simpl_state_.metadata_->custom ();
  }
}

// Begin epilogue.
//
//
// End epilogue.

