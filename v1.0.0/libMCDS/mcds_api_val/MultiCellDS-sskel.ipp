// Copyright (c) 2005-2016 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

// MCDS_type_sskel
//

inline
MCDS_type_sskel::
MCDS_type_sskel (::xml_schema::string_sskel* tiein)
: ::xml_schema::string_sskel (tiein, 0),
  MCDS_type_impl_ (0)
{
  this->_enumeration_facet (_xsde_MCDS_type_sskel_enums_, 4UL);
}

inline
MCDS_type_sskel::
MCDS_type_sskel (MCDS_type_sskel* impl, void*)
: ::xml_schema::string_sskel (impl, 0),
  MCDS_type_impl_ (impl)
{
  this->_enumeration_facet (_xsde_MCDS_type_sskel_enums_, 4UL);
}

// MultiCellDS_sskel
//

inline
void MultiCellDS_sskel::
version_serializer (::xml_schema::string_sskel& version)
{
  this->version_serializer_ = &version;
}

inline
void MultiCellDS_sskel::
type_serializer (::MCDS_type_sskel& type)
{
  this->type_serializer_ = &type;
}

inline
void MultiCellDS_sskel::
cell_line_serializer (::cell_line::cell_line_sskel& s)
{
  this->cell_line_serializer_ = &s;
}

inline
void MultiCellDS_sskel::
cell_line_serializer (::xml_schema::serializer_map& m)
{
  this->cell_line_serializer_map_ = &m;
}

inline
void MultiCellDS_sskel::
metadata_serializer (::metadata::metadata_sskel& s)
{
  this->metadata_serializer_ = &s;
}

inline
void MultiCellDS_sskel::
metadata_serializer (::xml_schema::serializer_map& m)
{
  this->metadata_serializer_map_ = &m;
}

inline
void MultiCellDS_sskel::
microenvironment_serializer (::microenvironment::microenvironment_sskel& s)
{
  this->microenvironment_serializer_ = &s;
}

inline
void MultiCellDS_sskel::
microenvironment_serializer (::xml_schema::serializer_map& m)
{
  this->microenvironment_serializer_map_ = &m;
}

inline
void MultiCellDS_sskel::
cellular_information_serializer (::cell::cellular_information_sskel& s)
{
  this->cellular_information_serializer_ = &s;
}

inline
void MultiCellDS_sskel::
cellular_information_serializer (::xml_schema::serializer_map& m)
{
  this->cellular_information_serializer_map_ = &m;
}

inline
void MultiCellDS_sskel::
serializers (::xml_schema::string_sskel& version,
             ::MCDS_type_sskel& type,
             ::cell_line::cell_line_sskel& cell_line,
             ::metadata::metadata_sskel& metadata,
             ::microenvironment::microenvironment_sskel& microenvironment,
             ::cell::cellular_information_sskel& cellular_information)
{
  this->version_serializer_ = &version;
  this->type_serializer_ = &type;
  this->cell_line_serializer_ = &cell_line;
  this->metadata_serializer_ = &metadata;
  this->microenvironment_serializer_ = &microenvironment;
  this->cellular_information_serializer_ = &cellular_information;
}

inline
void MultiCellDS_sskel::
serializer_maps (::xml_schema::serializer_map& cell_line,
                 ::xml_schema::serializer_map& metadata,
                 ::xml_schema::serializer_map& microenvironment,
                 ::xml_schema::serializer_map& cellular_information)
{
  this->cell_line_serializer_map_ = &cell_line;
  this->metadata_serializer_map_ = &metadata;
  this->microenvironment_serializer_map_ = &microenvironment;
  this->cellular_information_serializer_map_ = &cellular_information;
}

inline
MultiCellDS_sskel::
MultiCellDS_sskel ()
: MultiCellDS_impl_ (0),
  version_serializer_ (0),
  type_serializer_ (0),
  cell_line_serializer_ (0),
  cell_line_serializer_map_ (0),
  metadata_serializer_ (0),
  metadata_serializer_map_ (0),
  microenvironment_serializer_ (0),
  microenvironment_serializer_map_ (0),
  cellular_information_serializer_ (0),
  cellular_information_serializer_map_ (0)
{
}

inline
MultiCellDS_sskel::
MultiCellDS_sskel (MultiCellDS_sskel* impl, void*)
: ::xsde::cxx::serializer::validating::complex_content (impl, 0),
  MultiCellDS_impl_ (impl),
  version_serializer_ (0),
  type_serializer_ (0),
  cell_line_serializer_ (0),
  cell_line_serializer_map_ (0),
  metadata_serializer_ (0),
  metadata_serializer_map_ (0),
  microenvironment_serializer_ (0),
  microenvironment_serializer_map_ (0),
  cellular_information_serializer_ (0),
  cellular_information_serializer_map_ (0)
{
}

// Begin epilogue.
//
//
// End epilogue.

