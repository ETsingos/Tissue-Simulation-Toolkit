// Copyright (c) 2005-2016 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

namespace state
{
  // phase_name_sskel
  //

  inline
  void phase_name_sskel::
  GO_ID_serializer (::xml_schema::string_sskel& GO_ID)
  {
    this->GO_ID_serializer_ = &GO_ID;
  }

  inline
  void phase_name_sskel::
  serializers (::xml_schema::string_sskel& GO_ID)
  {
    this->GO_ID_serializer_ = &GO_ID;
  }

  inline
  phase_name_sskel::
  phase_name_sskel (::xml_schema::string_sskel* tiein)
  : ::xml_schema::string_sskel (tiein, 0),
    phase_name_impl_ (0),
    GO_ID_serializer_ (0)
  {
  }

  inline
  phase_name_sskel::
  phase_name_sskel (phase_name_sskel* impl, void*)
  : ::xml_schema::string_sskel (impl, 0),
    phase_name_impl_ (impl),
    GO_ID_serializer_ (0)
  {
  }

  // phase_sskel
  //

  inline
  void phase_sskel::
  model_name_serializer (::xml_schema::string_sskel& s)
  {
    this->model_name_serializer_ = &s;
  }

  inline
  void phase_sskel::
  model_name_serializer (::xml_schema::serializer_map& m)
  {
    this->model_name_serializer_map_ = &m;
  }

  inline
  void phase_sskel::
  phase_name_serializer (::state::phase_name_sskel& s)
  {
    this->phase_name_serializer_ = &s;
  }

  inline
  void phase_sskel::
  phase_name_serializer (::xml_schema::serializer_map& m)
  {
    this->phase_name_serializer_map_ = &m;
  }

  inline
  void phase_sskel::
  cell_cycle_model_index_serializer (::xml_schema::unsigned_short_sskel& s)
  {
    this->cell_cycle_model_index_serializer_ = &s;
  }

  inline
  void phase_sskel::
  cell_cycle_model_index_serializer (::xml_schema::serializer_map& m)
  {
    this->cell_cycle_model_index_serializer_map_ = &m;
  }

  inline
  void phase_sskel::
  cell_cycle_phase_index_serializer (::xml_schema::unsigned_short_sskel& s)
  {
    this->cell_cycle_phase_index_serializer_ = &s;
  }

  inline
  void phase_sskel::
  cell_cycle_phase_index_serializer (::xml_schema::serializer_map& m)
  {
    this->cell_cycle_phase_index_serializer_map_ = &m;
  }

  inline
  void phase_sskel::
  elapsed_time_serializer (::common::units_decimal_sskel& s)
  {
    this->elapsed_time_serializer_ = &s;
  }

  inline
  void phase_sskel::
  elapsed_time_serializer (::xml_schema::serializer_map& m)
  {
    this->elapsed_time_serializer_map_ = &m;
  }

  inline
  void phase_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void phase_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void phase_sskel::
  serializers (::xml_schema::string_sskel& model_name,
               ::state::phase_name_sskel& phase_name,
               ::xml_schema::unsigned_short_sskel& cell_cycle_model_index,
               ::xml_schema::unsigned_short_sskel& cell_cycle_phase_index,
               ::common::units_decimal_sskel& elapsed_time,
               ::common::custom_sskel& custom)
  {
    this->model_name_serializer_ = &model_name;
    this->phase_name_serializer_ = &phase_name;
    this->cell_cycle_model_index_serializer_ = &cell_cycle_model_index;
    this->cell_cycle_phase_index_serializer_ = &cell_cycle_phase_index;
    this->elapsed_time_serializer_ = &elapsed_time;
    this->custom_serializer_ = &custom;
  }

  inline
  void phase_sskel::
  serializer_maps (::xml_schema::serializer_map& model_name,
                   ::xml_schema::serializer_map& phase_name,
                   ::xml_schema::serializer_map& cell_cycle_model_index,
                   ::xml_schema::serializer_map& cell_cycle_phase_index,
                   ::xml_schema::serializer_map& elapsed_time,
                   ::xml_schema::serializer_map& custom)
  {
    this->model_name_serializer_map_ = &model_name;
    this->phase_name_serializer_map_ = &phase_name;
    this->cell_cycle_model_index_serializer_map_ = &cell_cycle_model_index;
    this->cell_cycle_phase_index_serializer_map_ = &cell_cycle_phase_index;
    this->elapsed_time_serializer_map_ = &elapsed_time;
    this->custom_serializer_map_ = &custom;
  }

  inline
  phase_sskel::
  phase_sskel ()
  : phase_impl_ (0),
    model_name_serializer_ (0),
    model_name_serializer_map_ (0),
    phase_name_serializer_ (0),
    phase_name_serializer_map_ (0),
    cell_cycle_model_index_serializer_ (0),
    cell_cycle_model_index_serializer_map_ (0),
    cell_cycle_phase_index_serializer_ (0),
    cell_cycle_phase_index_serializer_map_ (0),
    elapsed_time_serializer_ (0),
    elapsed_time_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  phase_sskel::
  phase_sskel (phase_sskel* impl, void*)
  : ::xsde::cxx::serializer::validating::complex_content (impl, 0),
    phase_impl_ (impl),
    model_name_serializer_ (0),
    model_name_serializer_map_ (0),
    phase_name_serializer_ (0),
    phase_name_serializer_map_ (0),
    cell_cycle_model_index_serializer_ (0),
    cell_cycle_model_index_serializer_map_ (0),
    cell_cycle_phase_index_serializer_ (0),
    cell_cycle_phase_index_serializer_map_ (0),
    elapsed_time_serializer_ (0),
    elapsed_time_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // orientation_formalism_sskel
  //

  inline
  orientation_formalism_sskel::
  orientation_formalism_sskel (::xml_schema::string_sskel* tiein)
  : ::xml_schema::string_sskel (tiein, 0),
    orientation_formalism_impl_ (0)
  {
    this->_enumeration_facet (_xsde_orientation_formalism_sskel_enums_, 7UL);
  }

  inline
  orientation_formalism_sskel::
  orientation_formalism_sskel (orientation_formalism_sskel* impl, void*)
  : ::xml_schema::string_sskel (impl, 0),
    orientation_formalism_impl_ (impl)
  {
    this->_enumeration_facet (_xsde_orientation_formalism_sskel_enums_, 7UL);
  }

  // orientation_sskel
  //

  inline
  void orientation_sskel::
  formalism_serializer (::state::orientation_formalism_sskel& formalism)
  {
    this->formalism_serializer_ = &formalism;
  }

  inline
  void orientation_sskel::
  serializers (::xml_schema::double_sskel& double_list_sskel_item,
               ::xml_schema::string_sskel& units,
               ::xml_schema::string_sskel& measurement_type,
               ::xml_schema::double_sskel& uncertainty,
               ::xml_schema::double_sskel& negative_uncertainty,
               ::xml_schema::double_sskel& positive_uncertainty,
               ::xml_schema::double_sskel& uncertainty_percentage,
               ::xml_schema::double_sskel& negative_uncertainty_percentage,
               ::xml_schema::double_sskel& positive_uncertainty_percentage,
               ::xml_schema::double_sskel& median,
               ::xml_schema::double_sskel& standard_deviation,
               ::common::two_doubles_sskel& interquartile_range,
               ::common::two_doubles_sskel& range,
               ::xml_schema::double_sskel& min,
               ::xml_schema::double_sskel& max,
               ::xml_schema::double_sskel& standard_error,
               ::xml_schema::double_sskel& standard_error_of_the_mean,
               ::xml_schema::int_sskel& number_obs,
               ::xml_schema::double_sskel& skewnesss,
               ::xml_schema::double_sskel& kurtosis,
               ::state::orientation_formalism_sskel& formalism)
  {
    this->_xsde_item_ = &double_list_sskel_item;
    this->units_serializer_ = &units;
    this->measurement_type_serializer_ = &measurement_type;
    this->uncertainty_serializer_ = &uncertainty;
    this->negative_uncertainty_serializer_ = &negative_uncertainty;
    this->positive_uncertainty_serializer_ = &positive_uncertainty;
    this->uncertainty_percentage_serializer_ = &uncertainty_percentage;
    this->negative_uncertainty_percentage_serializer_ = &negative_uncertainty_percentage;
    this->positive_uncertainty_percentage_serializer_ = &positive_uncertainty_percentage;
    this->median_serializer_ = &median;
    this->standard_deviation_serializer_ = &standard_deviation;
    this->interquartile_range_serializer_ = &interquartile_range;
    this->range_serializer_ = &range;
    this->min_serializer_ = &min;
    this->max_serializer_ = &max;
    this->standard_error_serializer_ = &standard_error;
    this->standard_error_of_the_mean_serializer_ = &standard_error_of_the_mean;
    this->number_obs_serializer_ = &number_obs;
    this->skewnesss_serializer_ = &skewnesss;
    this->kurtosis_serializer_ = &kurtosis;
    this->formalism_serializer_ = &formalism;
  }

  inline
  orientation_sskel::
  orientation_sskel (::common::units_double_list_sskel* tiein)
  : ::common::units_double_list_sskel (tiein, 0),
    orientation_impl_ (0),
    formalism_serializer_ (0)
  {
  }

  inline
  orientation_sskel::
  orientation_sskel (orientation_sskel* impl, void*)
  : ::common::units_double_list_sskel (impl, 0),
    orientation_impl_ (impl),
    formalism_serializer_ (0)
  {
  }

  // cell_parts_sskel
  //

  inline
  void cell_parts_sskel::
  name_serializer (::xml_schema::string_sskel& name)
  {
    this->name_serializer_ = &name;
  }

  inline
  void cell_parts_sskel::
  ID_serializer (::xml_schema::unsigned_int_sskel& ID)
  {
    this->ID_serializer_ = &ID;
  }

  inline
  void cell_parts_sskel::
  orientation_serializer (::state::orientation_sskel& s)
  {
    this->orientation_serializer_ = &s;
  }

  inline
  void cell_parts_sskel::
  orientation_serializer (::xml_schema::serializer_map& m)
  {
    this->orientation_serializer_map_ = &m;
  }

  inline
  void cell_parts_sskel::
  position_serializer (::common::units_double_list_sskel& s)
  {
    this->position_serializer_ = &s;
  }

  inline
  void cell_parts_sskel::
  position_serializer (::xml_schema::serializer_map& m)
  {
    this->position_serializer_map_ = &m;
  }

  inline
  void cell_parts_sskel::
  velocity_serializer (::common::units_double_list_sskel& s)
  {
    this->velocity_serializer_ = &s;
  }

  inline
  void cell_parts_sskel::
  velocity_serializer (::xml_schema::serializer_map& m)
  {
    this->velocity_serializer_map_ = &m;
  }

  inline
  void cell_parts_sskel::
  voxels_serializer (::mesh::int_list_xpath_sskel& s)
  {
    this->voxels_serializer_ = &s;
  }

  inline
  void cell_parts_sskel::
  voxels_serializer (::xml_schema::serializer_map& m)
  {
    this->voxels_serializer_map_ = &m;
  }

  inline
  void cell_parts_sskel::
  cell_part_serializer (::state::cell_parts_sskel& s)
  {
    this->cell_part_serializer_ = &s;
  }

  inline
  void cell_parts_sskel::
  cell_part_serializer (::xml_schema::serializer_map& m)
  {
    this->cell_part_serializer_map_ = &m;
  }

  inline
  void cell_parts_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void cell_parts_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void cell_parts_sskel::
  serializers (::xml_schema::string_sskel& name,
               ::xml_schema::unsigned_int_sskel& ID,
               ::state::orientation_sskel& orientation,
               ::common::units_double_list_sskel& position,
               ::common::units_double_list_sskel& velocity,
               ::mesh::int_list_xpath_sskel& voxels,
               ::state::cell_parts_sskel& cell_part,
               ::common::custom_sskel& custom)
  {
    this->name_serializer_ = &name;
    this->ID_serializer_ = &ID;
    this->orientation_serializer_ = &orientation;
    this->position_serializer_ = &position;
    this->velocity_serializer_ = &velocity;
    this->voxels_serializer_ = &voxels;
    this->cell_part_serializer_ = &cell_part;
    this->custom_serializer_ = &custom;
  }

  inline
  void cell_parts_sskel::
  serializer_maps (::xml_schema::serializer_map& orientation,
                   ::xml_schema::serializer_map& position,
                   ::xml_schema::serializer_map& velocity,
                   ::xml_schema::serializer_map& voxels,
                   ::xml_schema::serializer_map& cell_part,
                   ::xml_schema::serializer_map& custom)
  {
    this->orientation_serializer_map_ = &orientation;
    this->position_serializer_map_ = &position;
    this->velocity_serializer_map_ = &velocity;
    this->voxels_serializer_map_ = &voxels;
    this->cell_part_serializer_map_ = &cell_part;
    this->custom_serializer_map_ = &custom;
  }

  inline
  cell_parts_sskel::
  cell_parts_sskel ()
  : cell_parts_impl_ (0),
    name_serializer_ (0),
    ID_serializer_ (0),
    orientation_serializer_ (0),
    orientation_serializer_map_ (0),
    position_serializer_ (0),
    position_serializer_map_ (0),
    velocity_serializer_ (0),
    velocity_serializer_map_ (0),
    voxels_serializer_ (0),
    voxels_serializer_map_ (0),
    cell_part_serializer_ (0),
    cell_part_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  cell_parts_sskel::
  cell_parts_sskel (cell_parts_sskel* impl, void*)
  : ::xsde::cxx::serializer::validating::complex_content (impl, 0),
    cell_parts_impl_ (impl),
    name_serializer_ (0),
    ID_serializer_ (0),
    orientation_serializer_ (0),
    orientation_serializer_map_ (0),
    position_serializer_ (0),
    position_serializer_map_ (0),
    velocity_serializer_ (0),
    velocity_serializer_map_ (0),
    voxels_serializer_ (0),
    voxels_serializer_map_ (0),
    cell_part_serializer_ (0),
    cell_part_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // state_sskel
  //

  inline
  void state_sskel::
  orientation_serializer (::state::orientation_sskel& s)
  {
    this->orientation_serializer_ = &s;
  }

  inline
  void state_sskel::
  orientation_serializer (::xml_schema::serializer_map& m)
  {
    this->orientation_serializer_map_ = &m;
  }

  inline
  void state_sskel::
  position_serializer (::common::units_double_list_sskel& s)
  {
    this->position_serializer_ = &s;
  }

  inline
  void state_sskel::
  position_serializer (::xml_schema::serializer_map& m)
  {
    this->position_serializer_map_ = &m;
  }

  inline
  void state_sskel::
  velocity_serializer (::common::units_double_list_sskel& s)
  {
    this->velocity_serializer_ = &s;
  }

  inline
  void state_sskel::
  velocity_serializer (::xml_schema::serializer_map& m)
  {
    this->velocity_serializer_map_ = &m;
  }

  inline
  void state_sskel::
  voxels_serializer (::mesh::int_list_xpath_sskel& s)
  {
    this->voxels_serializer_ = &s;
  }

  inline
  void state_sskel::
  voxels_serializer (::xml_schema::serializer_map& m)
  {
    this->voxels_serializer_map_ = &m;
  }

  inline
  void state_sskel::
  cell_part_serializer (::state::cell_parts_sskel& s)
  {
    this->cell_part_serializer_ = &s;
  }

  inline
  void state_sskel::
  cell_part_serializer (::xml_schema::serializer_map& m)
  {
    this->cell_part_serializer_map_ = &m;
  }

  inline
  void state_sskel::
  phase_serializer (::state::phase_sskel& s)
  {
    this->phase_serializer_ = &s;
  }

  inline
  void state_sskel::
  phase_serializer (::xml_schema::serializer_map& m)
  {
    this->phase_serializer_map_ = &m;
  }

  inline
  void state_sskel::
  adhered_cells_serializer (::state::list_of_adhered_cells_sskel& s)
  {
    this->adhered_cells_serializer_ = &s;
  }

  inline
  void state_sskel::
  adhered_cells_serializer (::xml_schema::serializer_map& m)
  {
    this->adhered_cells_serializer_map_ = &m;
  }

  inline
  void state_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void state_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void state_sskel::
  serializers (::state::orientation_sskel& orientation,
               ::common::units_double_list_sskel& position,
               ::common::units_double_list_sskel& velocity,
               ::mesh::int_list_xpath_sskel& voxels,
               ::state::cell_parts_sskel& cell_part,
               ::state::phase_sskel& phase,
               ::state::list_of_adhered_cells_sskel& adhered_cells,
               ::common::custom_sskel& custom)
  {
    this->orientation_serializer_ = &orientation;
    this->position_serializer_ = &position;
    this->velocity_serializer_ = &velocity;
    this->voxels_serializer_ = &voxels;
    this->cell_part_serializer_ = &cell_part;
    this->phase_serializer_ = &phase;
    this->adhered_cells_serializer_ = &adhered_cells;
    this->custom_serializer_ = &custom;
  }

  inline
  void state_sskel::
  serializer_maps (::xml_schema::serializer_map& orientation,
                   ::xml_schema::serializer_map& position,
                   ::xml_schema::serializer_map& velocity,
                   ::xml_schema::serializer_map& voxels,
                   ::xml_schema::serializer_map& cell_part,
                   ::xml_schema::serializer_map& phase,
                   ::xml_schema::serializer_map& adhered_cells,
                   ::xml_schema::serializer_map& custom)
  {
    this->orientation_serializer_map_ = &orientation;
    this->position_serializer_map_ = &position;
    this->velocity_serializer_map_ = &velocity;
    this->voxels_serializer_map_ = &voxels;
    this->cell_part_serializer_map_ = &cell_part;
    this->phase_serializer_map_ = &phase;
    this->adhered_cells_serializer_map_ = &adhered_cells;
    this->custom_serializer_map_ = &custom;
  }

  inline
  state_sskel::
  state_sskel ()
  : state_impl_ (0),
    orientation_serializer_ (0),
    orientation_serializer_map_ (0),
    position_serializer_ (0),
    position_serializer_map_ (0),
    velocity_serializer_ (0),
    velocity_serializer_map_ (0),
    voxels_serializer_ (0),
    voxels_serializer_map_ (0),
    cell_part_serializer_ (0),
    cell_part_serializer_map_ (0),
    phase_serializer_ (0),
    phase_serializer_map_ (0),
    adhered_cells_serializer_ (0),
    adhered_cells_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  state_sskel::
  state_sskel (state_sskel* impl, void*)
  : ::xsde::cxx::serializer::validating::complex_content (impl, 0),
    state_impl_ (impl),
    orientation_serializer_ (0),
    orientation_serializer_map_ (0),
    position_serializer_ (0),
    position_serializer_map_ (0),
    velocity_serializer_ (0),
    velocity_serializer_map_ (0),
    voxels_serializer_ (0),
    voxels_serializer_map_ (0),
    cell_part_serializer_ (0),
    cell_part_serializer_map_ (0),
    phase_serializer_ (0),
    phase_serializer_map_ (0),
    adhered_cells_serializer_ (0),
    adhered_cells_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // adhered_cell_sskel
  //

  inline
  void adhered_cell_sskel::
  ID_serializer (::xml_schema::unsigned_int_sskel& s)
  {
    this->ID_serializer_ = &s;
  }

  inline
  void adhered_cell_sskel::
  ID_serializer (::xml_schema::serializer_map& m)
  {
    this->ID_serializer_map_ = &m;
  }

  inline
  void adhered_cell_sskel::
  contact_area_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->contact_area_serializer_ = &s;
  }

  inline
  void adhered_cell_sskel::
  contact_area_serializer (::xml_schema::serializer_map& m)
  {
    this->contact_area_serializer_map_ = &m;
  }

  inline
  void adhered_cell_sskel::
  contact_serializer (::phenotype_common::cross_section_sskel& s)
  {
    this->contact_serializer_ = &s;
  }

  inline
  void adhered_cell_sskel::
  contact_serializer (::xml_schema::serializer_map& m)
  {
    this->contact_serializer_map_ = &m;
  }

  inline
  void adhered_cell_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void adhered_cell_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void adhered_cell_sskel::
  serializers (::xml_schema::unsigned_int_sskel& ID,
               ::common::units_decimal_nonnegative_sskel& contact_area,
               ::phenotype_common::cross_section_sskel& contact,
               ::common::custom_sskel& custom)
  {
    this->ID_serializer_ = &ID;
    this->contact_area_serializer_ = &contact_area;
    this->contact_serializer_ = &contact;
    this->custom_serializer_ = &custom;
  }

  inline
  void adhered_cell_sskel::
  serializer_maps (::xml_schema::serializer_map& ID,
                   ::xml_schema::serializer_map& contact_area,
                   ::xml_schema::serializer_map& contact,
                   ::xml_schema::serializer_map& custom)
  {
    this->ID_serializer_map_ = &ID;
    this->contact_area_serializer_map_ = &contact_area;
    this->contact_serializer_map_ = &contact;
    this->custom_serializer_map_ = &custom;
  }

  inline
  adhered_cell_sskel::
  adhered_cell_sskel ()
  : adhered_cell_impl_ (0),
    ID_serializer_ (0),
    ID_serializer_map_ (0),
    contact_area_serializer_ (0),
    contact_area_serializer_map_ (0),
    contact_serializer_ (0),
    contact_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  adhered_cell_sskel::
  adhered_cell_sskel (adhered_cell_sskel* impl, void*)
  : ::xsde::cxx::serializer::validating::complex_content (impl, 0),
    adhered_cell_impl_ (impl),
    ID_serializer_ (0),
    ID_serializer_map_ (0),
    contact_area_serializer_ (0),
    contact_area_serializer_map_ (0),
    contact_serializer_ (0),
    contact_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // list_of_adhered_cells_sskel
  //

  inline
  void list_of_adhered_cells_sskel::
  adhered_cell_serializer (::state::adhered_cell_sskel& s)
  {
    this->adhered_cell_serializer_ = &s;
  }

  inline
  void list_of_adhered_cells_sskel::
  adhered_cell_serializer (::xml_schema::serializer_map& m)
  {
    this->adhered_cell_serializer_map_ = &m;
  }

  inline
  void list_of_adhered_cells_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void list_of_adhered_cells_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void list_of_adhered_cells_sskel::
  serializers (::state::adhered_cell_sskel& adhered_cell,
               ::common::custom_sskel& custom)
  {
    this->adhered_cell_serializer_ = &adhered_cell;
    this->custom_serializer_ = &custom;
  }

  inline
  void list_of_adhered_cells_sskel::
  serializer_maps (::xml_schema::serializer_map& adhered_cell,
                   ::xml_schema::serializer_map& custom)
  {
    this->adhered_cell_serializer_map_ = &adhered_cell;
    this->custom_serializer_map_ = &custom;
  }

  inline
  list_of_adhered_cells_sskel::
  list_of_adhered_cells_sskel ()
  : list_of_adhered_cells_impl_ (0),
    adhered_cell_serializer_ (0),
    adhered_cell_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  list_of_adhered_cells_sskel::
  list_of_adhered_cells_sskel (list_of_adhered_cells_sskel* impl, void*)
  : ::xsde::cxx::serializer::validating::complex_content (impl, 0),
    list_of_adhered_cells_impl_ (impl),
    adhered_cell_serializer_ (0),
    adhered_cell_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }
}

// Begin epilogue.
//
//
// End epilogue.

