// Copyright (c) 2005-2016 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

namespace common
{
  // custom_pskel
  //

  inline
  custom_pskel::
  custom_pskel ()
  : custom_impl_ (0),
    v_state_stack_ (sizeof (v_state_), &v_state_first_)
  {
  }

  inline
  custom_pskel::
  custom_pskel (custom_pskel* impl, void*)
  : ::xsde::cxx::parser::validating::complex_content (impl, 0),
    custom_impl_ (impl),
    v_state_stack_ (sizeof (v_state_), &v_state_first_)
  {
  }

  // double_list_pskel
  //

  inline
  void double_list_pskel::
  item_parser (::xml_schema::double_pskel& item)
  {
    this->_xsde_item_ = &item;
  }

  inline
  void double_list_pskel::
  parsers (::xml_schema::double_pskel& item)
  {
    this->_xsde_item_ = &item;
  }

  inline
  double_list_pskel::
  double_list_pskel ()
  : double_list_impl_ (0),
    _xsde_item_ (0)
  {
  }

  inline
  double_list_pskel::
  double_list_pskel (double_list_pskel* impl, void*)
  : ::xsde::cxx::parser::validating::list_base (impl, 0),
    double_list_impl_ (impl),
    _xsde_item_ (0)
  {
  }

  // unsigned_int_list_pskel
  //

  inline
  void unsigned_int_list_pskel::
  item_parser (::xml_schema::unsigned_int_pskel& item)
  {
    this->_xsde_item_ = &item;
  }

  inline
  void unsigned_int_list_pskel::
  parsers (::xml_schema::unsigned_int_pskel& item)
  {
    this->_xsde_item_ = &item;
  }

  inline
  unsigned_int_list_pskel::
  unsigned_int_list_pskel ()
  : unsigned_int_list_impl_ (0),
    _xsde_item_ (0)
  {
  }

  inline
  unsigned_int_list_pskel::
  unsigned_int_list_pskel (unsigned_int_list_pskel* impl, void*)
  : ::xsde::cxx::parser::validating::list_base (impl, 0),
    unsigned_int_list_impl_ (impl),
    _xsde_item_ (0)
  {
  }

  // two_doubles_pskel
  //

  inline
  two_doubles_pskel::
  two_doubles_pskel (::common::double_list_pskel* tiein)
  : ::common::double_list_pskel (tiein, 0),
    two_doubles_impl_ (0)
  {
  }

  inline
  two_doubles_pskel::
  two_doubles_pskel (two_doubles_pskel* impl, void*)
  : ::common::double_list_pskel (impl, 0),
    two_doubles_impl_ (impl)
  {
  }

  // units_double_list_pskel
  //

  inline
  void units_double_list_pskel::
  units_parser (::xml_schema::string_pskel& p)
  {
    this->units_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  measurement_type_parser (::xml_schema::string_pskel& p)
  {
    this->measurement_type_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  uncertainty_parser (::xml_schema::double_pskel& p)
  {
    this->uncertainty_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  negative_uncertainty_parser (::xml_schema::double_pskel& p)
  {
    this->negative_uncertainty_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  positive_uncertainty_parser (::xml_schema::double_pskel& p)
  {
    this->positive_uncertainty_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  uncertainty_percentage_parser (::xml_schema::double_pskel& p)
  {
    this->uncertainty_percentage_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  negative_uncertainty_percentage_parser (::xml_schema::double_pskel& p)
  {
    this->negative_uncertainty_percentage_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  positive_uncertainty_percentage_parser (::xml_schema::double_pskel& p)
  {
    this->positive_uncertainty_percentage_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  median_parser (::xml_schema::double_pskel& p)
  {
    this->median_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  standard_deviation_parser (::xml_schema::double_pskel& p)
  {
    this->standard_deviation_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  interquartile_range_parser (::common::two_doubles_pskel& p)
  {
    this->interquartile_range_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  range_parser (::common::two_doubles_pskel& p)
  {
    this->range_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  min_parser (::xml_schema::double_pskel& p)
  {
    this->min_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  max_parser (::xml_schema::double_pskel& p)
  {
    this->max_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  standard_error_parser (::xml_schema::double_pskel& p)
  {
    this->standard_error_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  standard_error_of_the_mean_parser (::xml_schema::double_pskel& p)
  {
    this->standard_error_of_the_mean_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  number_obs_parser (::xml_schema::int_pskel& p)
  {
    this->number_obs_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  skewnesss_parser (::xml_schema::double_pskel& p)
  {
    this->skewnesss_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  kurtosis_parser (::xml_schema::double_pskel& p)
  {
    this->kurtosis_parser_ = &p;
  }

  inline
  void units_double_list_pskel::
  parsers (::xml_schema::double_pskel& double_list_pskel_item,
           ::xml_schema::string_pskel& units,
           ::xml_schema::string_pskel& measurement_type,
           ::xml_schema::double_pskel& uncertainty,
           ::xml_schema::double_pskel& negative_uncertainty,
           ::xml_schema::double_pskel& positive_uncertainty,
           ::xml_schema::double_pskel& uncertainty_percentage,
           ::xml_schema::double_pskel& negative_uncertainty_percentage,
           ::xml_schema::double_pskel& positive_uncertainty_percentage,
           ::xml_schema::double_pskel& median,
           ::xml_schema::double_pskel& standard_deviation,
           ::common::two_doubles_pskel& interquartile_range,
           ::common::two_doubles_pskel& range,
           ::xml_schema::double_pskel& min,
           ::xml_schema::double_pskel& max,
           ::xml_schema::double_pskel& standard_error,
           ::xml_schema::double_pskel& standard_error_of_the_mean,
           ::xml_schema::int_pskel& number_obs,
           ::xml_schema::double_pskel& skewnesss,
           ::xml_schema::double_pskel& kurtosis)
  {
    this->_xsde_item_ = &double_list_pskel_item;
    this->units_parser_ = &units;
    this->measurement_type_parser_ = &measurement_type;
    this->uncertainty_parser_ = &uncertainty;
    this->negative_uncertainty_parser_ = &negative_uncertainty;
    this->positive_uncertainty_parser_ = &positive_uncertainty;
    this->uncertainty_percentage_parser_ = &uncertainty_percentage;
    this->negative_uncertainty_percentage_parser_ = &negative_uncertainty_percentage;
    this->positive_uncertainty_percentage_parser_ = &positive_uncertainty_percentage;
    this->median_parser_ = &median;
    this->standard_deviation_parser_ = &standard_deviation;
    this->interquartile_range_parser_ = &interquartile_range;
    this->range_parser_ = &range;
    this->min_parser_ = &min;
    this->max_parser_ = &max;
    this->standard_error_parser_ = &standard_error;
    this->standard_error_of_the_mean_parser_ = &standard_error_of_the_mean;
    this->number_obs_parser_ = &number_obs;
    this->skewnesss_parser_ = &skewnesss;
    this->kurtosis_parser_ = &kurtosis;
  }

  inline
  units_double_list_pskel::
  units_double_list_pskel (::common::double_list_pskel* tiein)
  : ::common::double_list_pskel (tiein, 0),
    units_double_list_impl_ (0),
    units_parser_ (0),
    measurement_type_parser_ (0),
    uncertainty_parser_ (0),
    negative_uncertainty_parser_ (0),
    positive_uncertainty_parser_ (0),
    uncertainty_percentage_parser_ (0),
    negative_uncertainty_percentage_parser_ (0),
    positive_uncertainty_percentage_parser_ (0),
    median_parser_ (0),
    standard_deviation_parser_ (0),
    interquartile_range_parser_ (0),
    range_parser_ (0),
    min_parser_ (0),
    max_parser_ (0),
    standard_error_parser_ (0),
    standard_error_of_the_mean_parser_ (0),
    number_obs_parser_ (0),
    skewnesss_parser_ (0),
    kurtosis_parser_ (0)
  {
  }

  inline
  units_double_list_pskel::
  units_double_list_pskel (units_double_list_pskel* impl, void*)
  : ::common::double_list_pskel (impl, 0),
    units_double_list_impl_ (impl),
    units_parser_ (0),
    measurement_type_parser_ (0),
    uncertainty_parser_ (0),
    negative_uncertainty_parser_ (0),
    positive_uncertainty_parser_ (0),
    uncertainty_percentage_parser_ (0),
    negative_uncertainty_percentage_parser_ (0),
    positive_uncertainty_percentage_parser_ (0),
    median_parser_ (0),
    standard_deviation_parser_ (0),
    interquartile_range_parser_ (0),
    range_parser_ (0),
    min_parser_ (0),
    max_parser_ (0),
    standard_error_parser_ (0),
    standard_error_of_the_mean_parser_ (0),
    number_obs_parser_ (0),
    skewnesss_parser_ (0),
    kurtosis_parser_ (0)
  {
  }

  // delimited_list_pskel
  //

  inline
  void delimited_list_pskel::
  delimiter_parser (::xml_schema::string_pskel& p)
  {
    this->delimiter_parser_ = &p;
  }

  inline
  void delimited_list_pskel::
  parsers (::xml_schema::string_pskel& delimiter)
  {
    this->delimiter_parser_ = &delimiter;
  }

  inline
  delimited_list_pskel::
  delimited_list_pskel (::xml_schema::string_pskel* tiein)
  : ::xml_schema::string_pskel (tiein, 0),
    delimited_list_impl_ (0),
    delimiter_parser_ (0)
  {
  }

  inline
  delimited_list_pskel::
  delimited_list_pskel (delimited_list_pskel* impl, void*)
  : ::xml_schema::string_pskel (impl, 0),
    delimited_list_impl_ (impl),
    delimiter_parser_ (0)
  {
  }

  // units_delimited_list_pskel
  //

  inline
  void units_delimited_list_pskel::
  units_parser (::xml_schema::string_pskel& p)
  {
    this->units_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  measurement_type_parser (::xml_schema::string_pskel& p)
  {
    this->measurement_type_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  uncertainty_parser (::xml_schema::double_pskel& p)
  {
    this->uncertainty_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  negative_uncertainty_parser (::xml_schema::double_pskel& p)
  {
    this->negative_uncertainty_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  positive_uncertainty_parser (::xml_schema::double_pskel& p)
  {
    this->positive_uncertainty_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  uncertainty_percentage_parser (::xml_schema::double_pskel& p)
  {
    this->uncertainty_percentage_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  negative_uncertainty_percentage_parser (::xml_schema::double_pskel& p)
  {
    this->negative_uncertainty_percentage_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  positive_uncertainty_percentage_parser (::xml_schema::double_pskel& p)
  {
    this->positive_uncertainty_percentage_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  median_parser (::xml_schema::double_pskel& p)
  {
    this->median_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  standard_deviation_parser (::xml_schema::double_pskel& p)
  {
    this->standard_deviation_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  interquartile_range_parser (::common::two_doubles_pskel& p)
  {
    this->interquartile_range_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  range_parser (::common::two_doubles_pskel& p)
  {
    this->range_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  min_parser (::xml_schema::double_pskel& p)
  {
    this->min_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  max_parser (::xml_schema::double_pskel& p)
  {
    this->max_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  standard_error_parser (::xml_schema::double_pskel& p)
  {
    this->standard_error_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  standard_error_of_the_mean_parser (::xml_schema::double_pskel& p)
  {
    this->standard_error_of_the_mean_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  number_obs_parser (::xml_schema::int_pskel& p)
  {
    this->number_obs_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  skewnesss_parser (::xml_schema::double_pskel& p)
  {
    this->skewnesss_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  kurtosis_parser (::xml_schema::double_pskel& p)
  {
    this->kurtosis_parser_ = &p;
  }

  inline
  void units_delimited_list_pskel::
  parsers (::xml_schema::string_pskel& delimiter,
           ::xml_schema::string_pskel& units,
           ::xml_schema::string_pskel& measurement_type,
           ::xml_schema::double_pskel& uncertainty,
           ::xml_schema::double_pskel& negative_uncertainty,
           ::xml_schema::double_pskel& positive_uncertainty,
           ::xml_schema::double_pskel& uncertainty_percentage,
           ::xml_schema::double_pskel& negative_uncertainty_percentage,
           ::xml_schema::double_pskel& positive_uncertainty_percentage,
           ::xml_schema::double_pskel& median,
           ::xml_schema::double_pskel& standard_deviation,
           ::common::two_doubles_pskel& interquartile_range,
           ::common::two_doubles_pskel& range,
           ::xml_schema::double_pskel& min,
           ::xml_schema::double_pskel& max,
           ::xml_schema::double_pskel& standard_error,
           ::xml_schema::double_pskel& standard_error_of_the_mean,
           ::xml_schema::int_pskel& number_obs,
           ::xml_schema::double_pskel& skewnesss,
           ::xml_schema::double_pskel& kurtosis)
  {
    this->delimiter_parser_ = &delimiter;
    this->units_parser_ = &units;
    this->measurement_type_parser_ = &measurement_type;
    this->uncertainty_parser_ = &uncertainty;
    this->negative_uncertainty_parser_ = &negative_uncertainty;
    this->positive_uncertainty_parser_ = &positive_uncertainty;
    this->uncertainty_percentage_parser_ = &uncertainty_percentage;
    this->negative_uncertainty_percentage_parser_ = &negative_uncertainty_percentage;
    this->positive_uncertainty_percentage_parser_ = &positive_uncertainty_percentage;
    this->median_parser_ = &median;
    this->standard_deviation_parser_ = &standard_deviation;
    this->interquartile_range_parser_ = &interquartile_range;
    this->range_parser_ = &range;
    this->min_parser_ = &min;
    this->max_parser_ = &max;
    this->standard_error_parser_ = &standard_error;
    this->standard_error_of_the_mean_parser_ = &standard_error_of_the_mean;
    this->number_obs_parser_ = &number_obs;
    this->skewnesss_parser_ = &skewnesss;
    this->kurtosis_parser_ = &kurtosis;
  }

  inline
  units_delimited_list_pskel::
  units_delimited_list_pskel (::common::delimited_list_pskel* tiein)
  : ::common::delimited_list_pskel (tiein, 0),
    units_delimited_list_impl_ (0),
    units_parser_ (0),
    measurement_type_parser_ (0),
    uncertainty_parser_ (0),
    negative_uncertainty_parser_ (0),
    positive_uncertainty_parser_ (0),
    uncertainty_percentage_parser_ (0),
    negative_uncertainty_percentage_parser_ (0),
    positive_uncertainty_percentage_parser_ (0),
    median_parser_ (0),
    standard_deviation_parser_ (0),
    interquartile_range_parser_ (0),
    range_parser_ (0),
    min_parser_ (0),
    max_parser_ (0),
    standard_error_parser_ (0),
    standard_error_of_the_mean_parser_ (0),
    number_obs_parser_ (0),
    skewnesss_parser_ (0),
    kurtosis_parser_ (0)
  {
  }

  inline
  units_delimited_list_pskel::
  units_delimited_list_pskel (units_delimited_list_pskel* impl, void*)
  : ::common::delimited_list_pskel (impl, 0),
    units_delimited_list_impl_ (impl),
    units_parser_ (0),
    measurement_type_parser_ (0),
    uncertainty_parser_ (0),
    negative_uncertainty_parser_ (0),
    positive_uncertainty_parser_ (0),
    uncertainty_percentage_parser_ (0),
    negative_uncertainty_percentage_parser_ (0),
    positive_uncertainty_percentage_parser_ (0),
    median_parser_ (0),
    standard_deviation_parser_ (0),
    interquartile_range_parser_ (0),
    range_parser_ (0),
    min_parser_ (0),
    max_parser_ (0),
    standard_error_parser_ (0),
    standard_error_of_the_mean_parser_ (0),
    number_obs_parser_ (0),
    skewnesss_parser_ (0),
    kurtosis_parser_ (0)
  {
  }

  // units_decimal_pskel
  //

  inline
  void units_decimal_pskel::
  units_parser (::xml_schema::string_pskel& p)
  {
    this->units_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  measurement_type_parser (::xml_schema::string_pskel& p)
  {
    this->measurement_type_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  uncertainty_parser (::xml_schema::double_pskel& p)
  {
    this->uncertainty_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  negative_uncertainty_parser (::xml_schema::double_pskel& p)
  {
    this->negative_uncertainty_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  positive_uncertainty_parser (::xml_schema::double_pskel& p)
  {
    this->positive_uncertainty_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  uncertainty_percentage_parser (::xml_schema::double_pskel& p)
  {
    this->uncertainty_percentage_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  negative_uncertainty_percentage_parser (::xml_schema::double_pskel& p)
  {
    this->negative_uncertainty_percentage_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  positive_uncertainty_percentage_parser (::xml_schema::double_pskel& p)
  {
    this->positive_uncertainty_percentage_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  median_parser (::xml_schema::double_pskel& p)
  {
    this->median_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  standard_deviation_parser (::xml_schema::double_pskel& p)
  {
    this->standard_deviation_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  interquartile_range_parser (::common::two_doubles_pskel& p)
  {
    this->interquartile_range_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  range_parser (::common::two_doubles_pskel& p)
  {
    this->range_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  min_parser (::xml_schema::double_pskel& p)
  {
    this->min_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  max_parser (::xml_schema::double_pskel& p)
  {
    this->max_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  standard_error_parser (::xml_schema::double_pskel& p)
  {
    this->standard_error_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  standard_error_of_the_mean_parser (::xml_schema::double_pskel& p)
  {
    this->standard_error_of_the_mean_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  number_obs_parser (::xml_schema::int_pskel& p)
  {
    this->number_obs_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  skewnesss_parser (::xml_schema::double_pskel& p)
  {
    this->skewnesss_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  kurtosis_parser (::xml_schema::double_pskel& p)
  {
    this->kurtosis_parser_ = &p;
  }

  inline
  void units_decimal_pskel::
  parsers (::xml_schema::string_pskel& units,
           ::xml_schema::string_pskel& measurement_type,
           ::xml_schema::double_pskel& uncertainty,
           ::xml_schema::double_pskel& negative_uncertainty,
           ::xml_schema::double_pskel& positive_uncertainty,
           ::xml_schema::double_pskel& uncertainty_percentage,
           ::xml_schema::double_pskel& negative_uncertainty_percentage,
           ::xml_schema::double_pskel& positive_uncertainty_percentage,
           ::xml_schema::double_pskel& median,
           ::xml_schema::double_pskel& standard_deviation,
           ::common::two_doubles_pskel& interquartile_range,
           ::common::two_doubles_pskel& range,
           ::xml_schema::double_pskel& min,
           ::xml_schema::double_pskel& max,
           ::xml_schema::double_pskel& standard_error,
           ::xml_schema::double_pskel& standard_error_of_the_mean,
           ::xml_schema::int_pskel& number_obs,
           ::xml_schema::double_pskel& skewnesss,
           ::xml_schema::double_pskel& kurtosis)
  {
    this->units_parser_ = &units;
    this->measurement_type_parser_ = &measurement_type;
    this->uncertainty_parser_ = &uncertainty;
    this->negative_uncertainty_parser_ = &negative_uncertainty;
    this->positive_uncertainty_parser_ = &positive_uncertainty;
    this->uncertainty_percentage_parser_ = &uncertainty_percentage;
    this->negative_uncertainty_percentage_parser_ = &negative_uncertainty_percentage;
    this->positive_uncertainty_percentage_parser_ = &positive_uncertainty_percentage;
    this->median_parser_ = &median;
    this->standard_deviation_parser_ = &standard_deviation;
    this->interquartile_range_parser_ = &interquartile_range;
    this->range_parser_ = &range;
    this->min_parser_ = &min;
    this->max_parser_ = &max;
    this->standard_error_parser_ = &standard_error;
    this->standard_error_of_the_mean_parser_ = &standard_error_of_the_mean;
    this->number_obs_parser_ = &number_obs;
    this->skewnesss_parser_ = &skewnesss;
    this->kurtosis_parser_ = &kurtosis;
  }

  inline
  units_decimal_pskel::
  units_decimal_pskel (::xml_schema::double_pskel* tiein)
  : ::xml_schema::double_pskel (tiein, 0),
    units_decimal_impl_ (0),
    units_parser_ (0),
    measurement_type_parser_ (0),
    uncertainty_parser_ (0),
    negative_uncertainty_parser_ (0),
    positive_uncertainty_parser_ (0),
    uncertainty_percentage_parser_ (0),
    negative_uncertainty_percentage_parser_ (0),
    positive_uncertainty_percentage_parser_ (0),
    median_parser_ (0),
    standard_deviation_parser_ (0),
    interquartile_range_parser_ (0),
    range_parser_ (0),
    min_parser_ (0),
    max_parser_ (0),
    standard_error_parser_ (0),
    standard_error_of_the_mean_parser_ (0),
    number_obs_parser_ (0),
    skewnesss_parser_ (0),
    kurtosis_parser_ (0)
  {
  }

  inline
  units_decimal_pskel::
  units_decimal_pskel (units_decimal_pskel* impl, void*)
  : ::xml_schema::double_pskel (impl, 0),
    units_decimal_impl_ (impl),
    units_parser_ (0),
    measurement_type_parser_ (0),
    uncertainty_parser_ (0),
    negative_uncertainty_parser_ (0),
    positive_uncertainty_parser_ (0),
    uncertainty_percentage_parser_ (0),
    negative_uncertainty_percentage_parser_ (0),
    positive_uncertainty_percentage_parser_ (0),
    median_parser_ (0),
    standard_deviation_parser_ (0),
    interquartile_range_parser_ (0),
    range_parser_ (0),
    min_parser_ (0),
    max_parser_ (0),
    standard_error_parser_ (0),
    standard_error_of_the_mean_parser_ (0),
    number_obs_parser_ (0),
    skewnesss_parser_ (0),
    kurtosis_parser_ (0)
  {
  }

  // units_decimal_nonnegative_pskel
  //

  inline
  units_decimal_nonnegative_pskel::
  units_decimal_nonnegative_pskel (::common::units_decimal_pskel* tiein)
  : ::common::units_decimal_pskel (tiein, 0),
    units_decimal_nonnegative_impl_ (0)
  {
    this->_min_facet (.0, true);
  }

  inline
  units_decimal_nonnegative_pskel::
  units_decimal_nonnegative_pskel (units_decimal_nonnegative_pskel* impl, void*)
  : ::common::units_decimal_pskel (impl, 0),
    units_decimal_nonnegative_impl_ (impl)
  {
    this->_min_facet (.0, true);
  }

  // units_unsignedShort_pskel
  //

  inline
  void units_unsignedShort_pskel::
  measurement_type_parser (::xml_schema::string_pskel& p)
  {
    this->measurement_type_parser_ = &p;
  }

  inline
  void units_unsignedShort_pskel::
  units_parser (::xml_schema::string_pskel& p)
  {
    this->units_parser_ = &p;
  }

  inline
  void units_unsignedShort_pskel::
  parsers (::xml_schema::string_pskel& measurement_type,
           ::xml_schema::string_pskel& units)
  {
    this->measurement_type_parser_ = &measurement_type;
    this->units_parser_ = &units;
  }

  inline
  units_unsignedShort_pskel::
  units_unsignedShort_pskel (::xml_schema::unsigned_short_pskel* tiein)
  : ::xml_schema::unsigned_short_pskel (tiein, 0),
    units_unsignedShort_impl_ (0),
    measurement_type_parser_ (0),
    units_parser_ (0)
  {
  }

  inline
  units_unsignedShort_pskel::
  units_unsignedShort_pskel (units_unsignedShort_pskel* impl, void*)
  : ::xml_schema::unsigned_short_pskel (impl, 0),
    units_unsignedShort_impl_ (impl),
    measurement_type_parser_ (0),
    units_parser_ (0)
  {
  }

  // units_boolean_pskel
  //

  inline
  void units_boolean_pskel::
  units_parser (::xml_schema::string_pskel& p)
  {
    this->units_parser_ = &p;
  }

  inline
  void units_boolean_pskel::
  parsers (::xml_schema::string_pskel& units)
  {
    this->units_parser_ = &units;
  }

  inline
  units_boolean_pskel::
  units_boolean_pskel (::xml_schema::boolean_pskel* tiein)
  : ::xml_schema::boolean_pskel (tiein, 0),
    units_boolean_impl_ (0),
    units_parser_ (0)
  {
  }

  inline
  units_boolean_pskel::
  units_boolean_pskel (units_boolean_pskel* impl, void*)
  : ::xml_schema::boolean_pskel (impl, 0),
    units_boolean_impl_ (impl),
    units_parser_ (0)
  {
  }

  // fraction_pskel
  //

  inline
  fraction_pskel::
  fraction_pskel (::xml_schema::double_pskel* tiein)
  : ::xml_schema::double_pskel (tiein, 0),
    fraction_impl_ (0)
  {
    this->_max_facet (1.0, true);
    this->_min_facet (.0, true);
  }

  inline
  fraction_pskel::
  fraction_pskel (fraction_pskel* impl, void*)
  : ::xml_schema::double_pskel (impl, 0),
    fraction_impl_ (impl)
  {
    this->_max_facet (1.0, true);
    this->_min_facet (.0, true);
  }

  // units_fraction_pskel
  //

  inline
  units_fraction_pskel::
  units_fraction_pskel (::common::units_decimal_pskel* tiein)
  : ::common::units_decimal_pskel (tiein, 0),
    units_fraction_impl_ (0)
  {
    this->_max_facet (1.0, true);
    this->_min_facet (.0, true);
  }

  inline
  units_fraction_pskel::
  units_fraction_pskel (units_fraction_pskel* impl, void*)
  : ::common::units_decimal_pskel (impl, 0),
    units_fraction_impl_ (impl)
  {
    this->_max_facet (1.0, true);
    this->_min_facet (.0, true);
  }

  // units_string_pskel
  //

  inline
  void units_string_pskel::
  units_parser (::xml_schema::string_pskel& p)
  {
    this->units_parser_ = &p;
  }

  inline
  void units_string_pskel::
  measurement_type_parser (::xml_schema::string_pskel& p)
  {
    this->measurement_type_parser_ = &p;
  }

  inline
  void units_string_pskel::
  uncertainty_parser (::xml_schema::double_pskel& p)
  {
    this->uncertainty_parser_ = &p;
  }

  inline
  void units_string_pskel::
  negative_uncertainty_parser (::xml_schema::double_pskel& p)
  {
    this->negative_uncertainty_parser_ = &p;
  }

  inline
  void units_string_pskel::
  positive_uncertainty_parser (::xml_schema::double_pskel& p)
  {
    this->positive_uncertainty_parser_ = &p;
  }

  inline
  void units_string_pskel::
  uncertainty_percentage_parser (::xml_schema::double_pskel& p)
  {
    this->uncertainty_percentage_parser_ = &p;
  }

  inline
  void units_string_pskel::
  negative_uncertainty_percentage_parser (::xml_schema::double_pskel& p)
  {
    this->negative_uncertainty_percentage_parser_ = &p;
  }

  inline
  void units_string_pskel::
  positive_uncertainty_percentage_parser (::xml_schema::double_pskel& p)
  {
    this->positive_uncertainty_percentage_parser_ = &p;
  }

  inline
  void units_string_pskel::
  median_parser (::xml_schema::double_pskel& p)
  {
    this->median_parser_ = &p;
  }

  inline
  void units_string_pskel::
  standard_deviation_parser (::xml_schema::double_pskel& p)
  {
    this->standard_deviation_parser_ = &p;
  }

  inline
  void units_string_pskel::
  interquartile_range_parser (::common::two_doubles_pskel& p)
  {
    this->interquartile_range_parser_ = &p;
  }

  inline
  void units_string_pskel::
  range_parser (::common::two_doubles_pskel& p)
  {
    this->range_parser_ = &p;
  }

  inline
  void units_string_pskel::
  min_parser (::xml_schema::double_pskel& p)
  {
    this->min_parser_ = &p;
  }

  inline
  void units_string_pskel::
  max_parser (::xml_schema::double_pskel& p)
  {
    this->max_parser_ = &p;
  }

  inline
  void units_string_pskel::
  standard_error_parser (::xml_schema::double_pskel& p)
  {
    this->standard_error_parser_ = &p;
  }

  inline
  void units_string_pskel::
  standard_error_of_the_mean_parser (::xml_schema::double_pskel& p)
  {
    this->standard_error_of_the_mean_parser_ = &p;
  }

  inline
  void units_string_pskel::
  number_obs_parser (::xml_schema::int_pskel& p)
  {
    this->number_obs_parser_ = &p;
  }

  inline
  void units_string_pskel::
  skewnesss_parser (::xml_schema::double_pskel& p)
  {
    this->skewnesss_parser_ = &p;
  }

  inline
  void units_string_pskel::
  kurtosis_parser (::xml_schema::double_pskel& p)
  {
    this->kurtosis_parser_ = &p;
  }

  inline
  void units_string_pskel::
  parsers (::xml_schema::string_pskel& units,
           ::xml_schema::string_pskel& measurement_type,
           ::xml_schema::double_pskel& uncertainty,
           ::xml_schema::double_pskel& negative_uncertainty,
           ::xml_schema::double_pskel& positive_uncertainty,
           ::xml_schema::double_pskel& uncertainty_percentage,
           ::xml_schema::double_pskel& negative_uncertainty_percentage,
           ::xml_schema::double_pskel& positive_uncertainty_percentage,
           ::xml_schema::double_pskel& median,
           ::xml_schema::double_pskel& standard_deviation,
           ::common::two_doubles_pskel& interquartile_range,
           ::common::two_doubles_pskel& range,
           ::xml_schema::double_pskel& min,
           ::xml_schema::double_pskel& max,
           ::xml_schema::double_pskel& standard_error,
           ::xml_schema::double_pskel& standard_error_of_the_mean,
           ::xml_schema::int_pskel& number_obs,
           ::xml_schema::double_pskel& skewnesss,
           ::xml_schema::double_pskel& kurtosis)
  {
    this->units_parser_ = &units;
    this->measurement_type_parser_ = &measurement_type;
    this->uncertainty_parser_ = &uncertainty;
    this->negative_uncertainty_parser_ = &negative_uncertainty;
    this->positive_uncertainty_parser_ = &positive_uncertainty;
    this->uncertainty_percentage_parser_ = &uncertainty_percentage;
    this->negative_uncertainty_percentage_parser_ = &negative_uncertainty_percentage;
    this->positive_uncertainty_percentage_parser_ = &positive_uncertainty_percentage;
    this->median_parser_ = &median;
    this->standard_deviation_parser_ = &standard_deviation;
    this->interquartile_range_parser_ = &interquartile_range;
    this->range_parser_ = &range;
    this->min_parser_ = &min;
    this->max_parser_ = &max;
    this->standard_error_parser_ = &standard_error;
    this->standard_error_of_the_mean_parser_ = &standard_error_of_the_mean;
    this->number_obs_parser_ = &number_obs;
    this->skewnesss_parser_ = &skewnesss;
    this->kurtosis_parser_ = &kurtosis;
  }

  inline
  units_string_pskel::
  units_string_pskel (::xml_schema::string_pskel* tiein)
  : ::xml_schema::string_pskel (tiein, 0),
    units_string_impl_ (0),
    units_parser_ (0),
    measurement_type_parser_ (0),
    uncertainty_parser_ (0),
    negative_uncertainty_parser_ (0),
    positive_uncertainty_parser_ (0),
    uncertainty_percentage_parser_ (0),
    negative_uncertainty_percentage_parser_ (0),
    positive_uncertainty_percentage_parser_ (0),
    median_parser_ (0),
    standard_deviation_parser_ (0),
    interquartile_range_parser_ (0),
    range_parser_ (0),
    min_parser_ (0),
    max_parser_ (0),
    standard_error_parser_ (0),
    standard_error_of_the_mean_parser_ (0),
    number_obs_parser_ (0),
    skewnesss_parser_ (0),
    kurtosis_parser_ (0)
  {
  }

  inline
  units_string_pskel::
  units_string_pskel (units_string_pskel* impl, void*)
  : ::xml_schema::string_pskel (impl, 0),
    units_string_impl_ (impl),
    units_parser_ (0),
    measurement_type_parser_ (0),
    uncertainty_parser_ (0),
    negative_uncertainty_parser_ (0),
    positive_uncertainty_parser_ (0),
    uncertainty_percentage_parser_ (0),
    negative_uncertainty_percentage_parser_ (0),
    positive_uncertainty_percentage_parser_ (0),
    median_parser_ (0),
    standard_deviation_parser_ (0),
    interquartile_range_parser_ (0),
    range_parser_ (0),
    min_parser_ (0),
    max_parser_ (0),
    standard_error_parser_ (0),
    standard_error_of_the_mean_parser_ (0),
    number_obs_parser_ (0),
    skewnesss_parser_ (0),
    kurtosis_parser_ (0)
  {
  }

  // data_storage_formats_pskel
  //

  inline
  data_storage_formats_pskel::
  data_storage_formats_pskel (::xml_schema::string_pskel* tiein)
  : ::xml_schema::string_pskel (tiein, 0),
    data_storage_formats_impl_ (0)
  {
    this->_enumeration_facet (_xsde_data_storage_formats_pskel_enums_, 7UL);
  }

  inline
  data_storage_formats_pskel::
  data_storage_formats_pskel (data_storage_formats_pskel* impl, void*)
  : ::xml_schema::string_pskel (impl, 0),
    data_storage_formats_impl_ (impl)
  {
    this->_enumeration_facet (_xsde_data_storage_formats_pskel_enums_, 7UL);
  }

  // threshold_type_pskel
  //

  inline
  threshold_type_pskel::
  threshold_type_pskel (::xml_schema::string_pskel* tiein)
  : ::xml_schema::string_pskel (tiein, 0),
    threshold_type_impl_ (0)
  {
    this->_enumeration_facet (_xsde_threshold_type_pskel_enums_, 6UL);
  }

  inline
  threshold_type_pskel::
  threshold_type_pskel (threshold_type_pskel* impl, void*)
  : ::xml_schema::string_pskel (impl, 0),
    threshold_type_impl_ (impl)
  {
    this->_enumeration_facet (_xsde_threshold_type_pskel_enums_, 6UL);
  }

  // transition_threshold_pskel
  //

  inline
  void transition_threshold_pskel::
  quantity_parser (::xml_schema::string_pskel& p)
  {
    this->quantity_parser_ = &p;
  }

  inline
  void transition_threshold_pskel::
  type_parser (::common::threshold_type_pskel& p)
  {
    this->type_parser_ = &p;
  }

  inline
  void transition_threshold_pskel::
  variable_ID_parser (::xml_schema::unsigned_long_pskel& p)
  {
    this->variable_ID_parser_ = &p;
  }

  inline
  void transition_threshold_pskel::
  parsers (::xml_schema::string_pskel& units,
           ::xml_schema::string_pskel& measurement_type,
           ::xml_schema::double_pskel& uncertainty,
           ::xml_schema::double_pskel& negative_uncertainty,
           ::xml_schema::double_pskel& positive_uncertainty,
           ::xml_schema::double_pskel& uncertainty_percentage,
           ::xml_schema::double_pskel& negative_uncertainty_percentage,
           ::xml_schema::double_pskel& positive_uncertainty_percentage,
           ::xml_schema::double_pskel& median,
           ::xml_schema::double_pskel& standard_deviation,
           ::common::two_doubles_pskel& interquartile_range,
           ::common::two_doubles_pskel& range,
           ::xml_schema::double_pskel& min,
           ::xml_schema::double_pskel& max,
           ::xml_schema::double_pskel& standard_error,
           ::xml_schema::double_pskel& standard_error_of_the_mean,
           ::xml_schema::int_pskel& number_obs,
           ::xml_schema::double_pskel& skewnesss,
           ::xml_schema::double_pskel& kurtosis,
           ::xml_schema::string_pskel& quantity,
           ::common::threshold_type_pskel& type,
           ::xml_schema::unsigned_long_pskel& variable_ID)
  {
    this->units_parser_ = &units;
    this->measurement_type_parser_ = &measurement_type;
    this->uncertainty_parser_ = &uncertainty;
    this->negative_uncertainty_parser_ = &negative_uncertainty;
    this->positive_uncertainty_parser_ = &positive_uncertainty;
    this->uncertainty_percentage_parser_ = &uncertainty_percentage;
    this->negative_uncertainty_percentage_parser_ = &negative_uncertainty_percentage;
    this->positive_uncertainty_percentage_parser_ = &positive_uncertainty_percentage;
    this->median_parser_ = &median;
    this->standard_deviation_parser_ = &standard_deviation;
    this->interquartile_range_parser_ = &interquartile_range;
    this->range_parser_ = &range;
    this->min_parser_ = &min;
    this->max_parser_ = &max;
    this->standard_error_parser_ = &standard_error;
    this->standard_error_of_the_mean_parser_ = &standard_error_of_the_mean;
    this->number_obs_parser_ = &number_obs;
    this->skewnesss_parser_ = &skewnesss;
    this->kurtosis_parser_ = &kurtosis;
    this->quantity_parser_ = &quantity;
    this->type_parser_ = &type;
    this->variable_ID_parser_ = &variable_ID;
  }

  inline
  transition_threshold_pskel::
  transition_threshold_pskel (::common::units_decimal_pskel* tiein)
  : ::common::units_decimal_pskel (tiein, 0),
    transition_threshold_impl_ (0),
    quantity_parser_ (0),
    type_parser_ (0),
    variable_ID_parser_ (0),
    v_state_attr_stack_ (sizeof (v_state_attr_), &v_state_attr_first_)
  {
  }

  inline
  transition_threshold_pskel::
  transition_threshold_pskel (transition_threshold_pskel* impl, void*)
  : ::common::units_decimal_pskel (impl, 0),
    transition_threshold_impl_ (impl),
    quantity_parser_ (0),
    type_parser_ (0),
    variable_ID_parser_ (0),
    v_state_attr_stack_ (sizeof (v_state_attr_), &v_state_attr_first_)
  {
  }
}

// Begin epilogue.
//
//
// End epilogue.

