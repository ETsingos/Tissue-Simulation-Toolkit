// Copyright (c) 2005-2016 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

namespace common
{
  // custom_sskel
  //

  inline
  custom_sskel::
  custom_sskel ()
  : custom_impl_ (0)
  {
  }

  inline
  custom_sskel::
  custom_sskel (custom_sskel* impl, void*)
  : ::xsde::cxx::serializer::validating::complex_content (impl, 0),
    custom_impl_ (impl)
  {
  }

  // double_list_sskel
  //

  inline
  void double_list_sskel::
  item_serializer (::xml_schema::double_sskel& item)
  {
    this->_xsde_item_ = &item;
  }

  inline
  void double_list_sskel::
  serializers (::xml_schema::double_sskel& item)
  {
    this->_xsde_item_ = &item;
  }

  inline
  double_list_sskel::
  double_list_sskel ()
  : double_list_impl_ (0),
    _xsde_item_ (0)
  {
  }

  inline
  double_list_sskel::
  double_list_sskel (double_list_sskel* impl, void*)
  : ::xsde::cxx::serializer::validating::simple_content (impl, 0),
    double_list_impl_ (impl),
    _xsde_item_ (0)
  {
  }

  // unsigned_int_list_sskel
  //

  inline
  void unsigned_int_list_sskel::
  item_serializer (::xml_schema::unsigned_int_sskel& item)
  {
    this->_xsde_item_ = &item;
  }

  inline
  void unsigned_int_list_sskel::
  serializers (::xml_schema::unsigned_int_sskel& item)
  {
    this->_xsde_item_ = &item;
  }

  inline
  unsigned_int_list_sskel::
  unsigned_int_list_sskel ()
  : unsigned_int_list_impl_ (0),
    _xsde_item_ (0)
  {
  }

  inline
  unsigned_int_list_sskel::
  unsigned_int_list_sskel (unsigned_int_list_sskel* impl, void*)
  : ::xsde::cxx::serializer::validating::simple_content (impl, 0),
    unsigned_int_list_impl_ (impl),
    _xsde_item_ (0)
  {
  }

  // two_doubles_sskel
  //

  inline
  two_doubles_sskel::
  two_doubles_sskel (::common::double_list_sskel* tiein)
  : ::common::double_list_sskel (tiein, 0),
    two_doubles_impl_ (0)
  {
  }

  inline
  two_doubles_sskel::
  two_doubles_sskel (two_doubles_sskel* impl, void*)
  : ::common::double_list_sskel (impl, 0),
    two_doubles_impl_ (impl)
  {
  }

  // units_double_list_sskel
  //

  inline
  void units_double_list_sskel::
  units_serializer (::xml_schema::string_sskel& units)
  {
    this->units_serializer_ = &units;
  }

  inline
  void units_double_list_sskel::
  measurement_type_serializer (::xml_schema::string_sskel& measurement_type)
  {
    this->measurement_type_serializer_ = &measurement_type;
  }

  inline
  void units_double_list_sskel::
  uncertainty_serializer (::xml_schema::double_sskel& uncertainty)
  {
    this->uncertainty_serializer_ = &uncertainty;
  }

  inline
  void units_double_list_sskel::
  negative_uncertainty_serializer (::xml_schema::double_sskel& negative_uncertainty)
  {
    this->negative_uncertainty_serializer_ = &negative_uncertainty;
  }

  inline
  void units_double_list_sskel::
  positive_uncertainty_serializer (::xml_schema::double_sskel& positive_uncertainty)
  {
    this->positive_uncertainty_serializer_ = &positive_uncertainty;
  }

  inline
  void units_double_list_sskel::
  uncertainty_percentage_serializer (::xml_schema::double_sskel& uncertainty_percentage)
  {
    this->uncertainty_percentage_serializer_ = &uncertainty_percentage;
  }

  inline
  void units_double_list_sskel::
  negative_uncertainty_percentage_serializer (::xml_schema::double_sskel& negative_uncertainty_percentage)
  {
    this->negative_uncertainty_percentage_serializer_ = &negative_uncertainty_percentage;
  }

  inline
  void units_double_list_sskel::
  positive_uncertainty_percentage_serializer (::xml_schema::double_sskel& positive_uncertainty_percentage)
  {
    this->positive_uncertainty_percentage_serializer_ = &positive_uncertainty_percentage;
  }

  inline
  void units_double_list_sskel::
  median_serializer (::xml_schema::double_sskel& median)
  {
    this->median_serializer_ = &median;
  }

  inline
  void units_double_list_sskel::
  standard_deviation_serializer (::xml_schema::double_sskel& standard_deviation)
  {
    this->standard_deviation_serializer_ = &standard_deviation;
  }

  inline
  void units_double_list_sskel::
  interquartile_range_serializer (::common::two_doubles_sskel& interquartile_range)
  {
    this->interquartile_range_serializer_ = &interquartile_range;
  }

  inline
  void units_double_list_sskel::
  range_serializer (::common::two_doubles_sskel& range)
  {
    this->range_serializer_ = &range;
  }

  inline
  void units_double_list_sskel::
  min_serializer (::xml_schema::double_sskel& min)
  {
    this->min_serializer_ = &min;
  }

  inline
  void units_double_list_sskel::
  max_serializer (::xml_schema::double_sskel& max)
  {
    this->max_serializer_ = &max;
  }

  inline
  void units_double_list_sskel::
  standard_error_serializer (::xml_schema::double_sskel& standard_error)
  {
    this->standard_error_serializer_ = &standard_error;
  }

  inline
  void units_double_list_sskel::
  standard_error_of_the_mean_serializer (::xml_schema::double_sskel& standard_error_of_the_mean)
  {
    this->standard_error_of_the_mean_serializer_ = &standard_error_of_the_mean;
  }

  inline
  void units_double_list_sskel::
  number_obs_serializer (::xml_schema::int_sskel& number_obs)
  {
    this->number_obs_serializer_ = &number_obs;
  }

  inline
  void units_double_list_sskel::
  skewnesss_serializer (::xml_schema::double_sskel& skewnesss)
  {
    this->skewnesss_serializer_ = &skewnesss;
  }

  inline
  void units_double_list_sskel::
  kurtosis_serializer (::xml_schema::double_sskel& kurtosis)
  {
    this->kurtosis_serializer_ = &kurtosis;
  }

  inline
  void units_double_list_sskel::
  serializers (::xml_schema::double_sskel& double_list_sskel_item,
               ::xml_schema::string_sskel& units,
               ::xml_schema::string_sskel& measurement_type,
               ::xml_schema::double_sskel& uncertainty,
               ::xml_schema::double_sskel& negative_uncertainty,
               ::xml_schema::double_sskel& positive_uncertainty,
               ::xml_schema::double_sskel& uncertainty_percentage,
               ::xml_schema::double_sskel& negative_uncertainty_percentage,
               ::xml_schema::double_sskel& positive_uncertainty_percentage,
               ::xml_schema::double_sskel& median,
               ::xml_schema::double_sskel& standard_deviation,
               ::common::two_doubles_sskel& interquartile_range,
               ::common::two_doubles_sskel& range,
               ::xml_schema::double_sskel& min,
               ::xml_schema::double_sskel& max,
               ::xml_schema::double_sskel& standard_error,
               ::xml_schema::double_sskel& standard_error_of_the_mean,
               ::xml_schema::int_sskel& number_obs,
               ::xml_schema::double_sskel& skewnesss,
               ::xml_schema::double_sskel& kurtosis)
  {
    this->_xsde_item_ = &double_list_sskel_item;
    this->units_serializer_ = &units;
    this->measurement_type_serializer_ = &measurement_type;
    this->uncertainty_serializer_ = &uncertainty;
    this->negative_uncertainty_serializer_ = &negative_uncertainty;
    this->positive_uncertainty_serializer_ = &positive_uncertainty;
    this->uncertainty_percentage_serializer_ = &uncertainty_percentage;
    this->negative_uncertainty_percentage_serializer_ = &negative_uncertainty_percentage;
    this->positive_uncertainty_percentage_serializer_ = &positive_uncertainty_percentage;
    this->median_serializer_ = &median;
    this->standard_deviation_serializer_ = &standard_deviation;
    this->interquartile_range_serializer_ = &interquartile_range;
    this->range_serializer_ = &range;
    this->min_serializer_ = &min;
    this->max_serializer_ = &max;
    this->standard_error_serializer_ = &standard_error;
    this->standard_error_of_the_mean_serializer_ = &standard_error_of_the_mean;
    this->number_obs_serializer_ = &number_obs;
    this->skewnesss_serializer_ = &skewnesss;
    this->kurtosis_serializer_ = &kurtosis;
  }

  inline
  units_double_list_sskel::
  units_double_list_sskel (::common::double_list_sskel* tiein)
  : ::common::double_list_sskel (tiein, 0),
    units_double_list_impl_ (0),
    units_serializer_ (0),
    measurement_type_serializer_ (0),
    uncertainty_serializer_ (0),
    negative_uncertainty_serializer_ (0),
    positive_uncertainty_serializer_ (0),
    uncertainty_percentage_serializer_ (0),
    negative_uncertainty_percentage_serializer_ (0),
    positive_uncertainty_percentage_serializer_ (0),
    median_serializer_ (0),
    standard_deviation_serializer_ (0),
    interquartile_range_serializer_ (0),
    range_serializer_ (0),
    min_serializer_ (0),
    max_serializer_ (0),
    standard_error_serializer_ (0),
    standard_error_of_the_mean_serializer_ (0),
    number_obs_serializer_ (0),
    skewnesss_serializer_ (0),
    kurtosis_serializer_ (0)
  {
  }

  inline
  units_double_list_sskel::
  units_double_list_sskel (units_double_list_sskel* impl, void*)
  : ::common::double_list_sskel (impl, 0),
    units_double_list_impl_ (impl),
    units_serializer_ (0),
    measurement_type_serializer_ (0),
    uncertainty_serializer_ (0),
    negative_uncertainty_serializer_ (0),
    positive_uncertainty_serializer_ (0),
    uncertainty_percentage_serializer_ (0),
    negative_uncertainty_percentage_serializer_ (0),
    positive_uncertainty_percentage_serializer_ (0),
    median_serializer_ (0),
    standard_deviation_serializer_ (0),
    interquartile_range_serializer_ (0),
    range_serializer_ (0),
    min_serializer_ (0),
    max_serializer_ (0),
    standard_error_serializer_ (0),
    standard_error_of_the_mean_serializer_ (0),
    number_obs_serializer_ (0),
    skewnesss_serializer_ (0),
    kurtosis_serializer_ (0)
  {
  }

  // delimited_list_sskel
  //

  inline
  void delimited_list_sskel::
  delimiter_serializer (::xml_schema::string_sskel& delimiter)
  {
    this->delimiter_serializer_ = &delimiter;
  }

  inline
  void delimited_list_sskel::
  serializers (::xml_schema::string_sskel& delimiter)
  {
    this->delimiter_serializer_ = &delimiter;
  }

  inline
  delimited_list_sskel::
  delimited_list_sskel (::xml_schema::string_sskel* tiein)
  : ::xml_schema::string_sskel (tiein, 0),
    delimited_list_impl_ (0),
    delimiter_serializer_ (0)
  {
  }

  inline
  delimited_list_sskel::
  delimited_list_sskel (delimited_list_sskel* impl, void*)
  : ::xml_schema::string_sskel (impl, 0),
    delimited_list_impl_ (impl),
    delimiter_serializer_ (0)
  {
  }

  // units_delimited_list_sskel
  //

  inline
  void units_delimited_list_sskel::
  units_serializer (::xml_schema::string_sskel& units)
  {
    this->units_serializer_ = &units;
  }

  inline
  void units_delimited_list_sskel::
  measurement_type_serializer (::xml_schema::string_sskel& measurement_type)
  {
    this->measurement_type_serializer_ = &measurement_type;
  }

  inline
  void units_delimited_list_sskel::
  uncertainty_serializer (::xml_schema::double_sskel& uncertainty)
  {
    this->uncertainty_serializer_ = &uncertainty;
  }

  inline
  void units_delimited_list_sskel::
  negative_uncertainty_serializer (::xml_schema::double_sskel& negative_uncertainty)
  {
    this->negative_uncertainty_serializer_ = &negative_uncertainty;
  }

  inline
  void units_delimited_list_sskel::
  positive_uncertainty_serializer (::xml_schema::double_sskel& positive_uncertainty)
  {
    this->positive_uncertainty_serializer_ = &positive_uncertainty;
  }

  inline
  void units_delimited_list_sskel::
  uncertainty_percentage_serializer (::xml_schema::double_sskel& uncertainty_percentage)
  {
    this->uncertainty_percentage_serializer_ = &uncertainty_percentage;
  }

  inline
  void units_delimited_list_sskel::
  negative_uncertainty_percentage_serializer (::xml_schema::double_sskel& negative_uncertainty_percentage)
  {
    this->negative_uncertainty_percentage_serializer_ = &negative_uncertainty_percentage;
  }

  inline
  void units_delimited_list_sskel::
  positive_uncertainty_percentage_serializer (::xml_schema::double_sskel& positive_uncertainty_percentage)
  {
    this->positive_uncertainty_percentage_serializer_ = &positive_uncertainty_percentage;
  }

  inline
  void units_delimited_list_sskel::
  median_serializer (::xml_schema::double_sskel& median)
  {
    this->median_serializer_ = &median;
  }

  inline
  void units_delimited_list_sskel::
  standard_deviation_serializer (::xml_schema::double_sskel& standard_deviation)
  {
    this->standard_deviation_serializer_ = &standard_deviation;
  }

  inline
  void units_delimited_list_sskel::
  interquartile_range_serializer (::common::two_doubles_sskel& interquartile_range)
  {
    this->interquartile_range_serializer_ = &interquartile_range;
  }

  inline
  void units_delimited_list_sskel::
  range_serializer (::common::two_doubles_sskel& range)
  {
    this->range_serializer_ = &range;
  }

  inline
  void units_delimited_list_sskel::
  min_serializer (::xml_schema::double_sskel& min)
  {
    this->min_serializer_ = &min;
  }

  inline
  void units_delimited_list_sskel::
  max_serializer (::xml_schema::double_sskel& max)
  {
    this->max_serializer_ = &max;
  }

  inline
  void units_delimited_list_sskel::
  standard_error_serializer (::xml_schema::double_sskel& standard_error)
  {
    this->standard_error_serializer_ = &standard_error;
  }

  inline
  void units_delimited_list_sskel::
  standard_error_of_the_mean_serializer (::xml_schema::double_sskel& standard_error_of_the_mean)
  {
    this->standard_error_of_the_mean_serializer_ = &standard_error_of_the_mean;
  }

  inline
  void units_delimited_list_sskel::
  number_obs_serializer (::xml_schema::int_sskel& number_obs)
  {
    this->number_obs_serializer_ = &number_obs;
  }

  inline
  void units_delimited_list_sskel::
  skewnesss_serializer (::xml_schema::double_sskel& skewnesss)
  {
    this->skewnesss_serializer_ = &skewnesss;
  }

  inline
  void units_delimited_list_sskel::
  kurtosis_serializer (::xml_schema::double_sskel& kurtosis)
  {
    this->kurtosis_serializer_ = &kurtosis;
  }

  inline
  void units_delimited_list_sskel::
  serializers (::xml_schema::string_sskel& delimiter,
               ::xml_schema::string_sskel& units,
               ::xml_schema::string_sskel& measurement_type,
               ::xml_schema::double_sskel& uncertainty,
               ::xml_schema::double_sskel& negative_uncertainty,
               ::xml_schema::double_sskel& positive_uncertainty,
               ::xml_schema::double_sskel& uncertainty_percentage,
               ::xml_schema::double_sskel& negative_uncertainty_percentage,
               ::xml_schema::double_sskel& positive_uncertainty_percentage,
               ::xml_schema::double_sskel& median,
               ::xml_schema::double_sskel& standard_deviation,
               ::common::two_doubles_sskel& interquartile_range,
               ::common::two_doubles_sskel& range,
               ::xml_schema::double_sskel& min,
               ::xml_schema::double_sskel& max,
               ::xml_schema::double_sskel& standard_error,
               ::xml_schema::double_sskel& standard_error_of_the_mean,
               ::xml_schema::int_sskel& number_obs,
               ::xml_schema::double_sskel& skewnesss,
               ::xml_schema::double_sskel& kurtosis)
  {
    this->delimiter_serializer_ = &delimiter;
    this->units_serializer_ = &units;
    this->measurement_type_serializer_ = &measurement_type;
    this->uncertainty_serializer_ = &uncertainty;
    this->negative_uncertainty_serializer_ = &negative_uncertainty;
    this->positive_uncertainty_serializer_ = &positive_uncertainty;
    this->uncertainty_percentage_serializer_ = &uncertainty_percentage;
    this->negative_uncertainty_percentage_serializer_ = &negative_uncertainty_percentage;
    this->positive_uncertainty_percentage_serializer_ = &positive_uncertainty_percentage;
    this->median_serializer_ = &median;
    this->standard_deviation_serializer_ = &standard_deviation;
    this->interquartile_range_serializer_ = &interquartile_range;
    this->range_serializer_ = &range;
    this->min_serializer_ = &min;
    this->max_serializer_ = &max;
    this->standard_error_serializer_ = &standard_error;
    this->standard_error_of_the_mean_serializer_ = &standard_error_of_the_mean;
    this->number_obs_serializer_ = &number_obs;
    this->skewnesss_serializer_ = &skewnesss;
    this->kurtosis_serializer_ = &kurtosis;
  }

  inline
  units_delimited_list_sskel::
  units_delimited_list_sskel (::common::delimited_list_sskel* tiein)
  : ::common::delimited_list_sskel (tiein, 0),
    units_delimited_list_impl_ (0),
    units_serializer_ (0),
    measurement_type_serializer_ (0),
    uncertainty_serializer_ (0),
    negative_uncertainty_serializer_ (0),
    positive_uncertainty_serializer_ (0),
    uncertainty_percentage_serializer_ (0),
    negative_uncertainty_percentage_serializer_ (0),
    positive_uncertainty_percentage_serializer_ (0),
    median_serializer_ (0),
    standard_deviation_serializer_ (0),
    interquartile_range_serializer_ (0),
    range_serializer_ (0),
    min_serializer_ (0),
    max_serializer_ (0),
    standard_error_serializer_ (0),
    standard_error_of_the_mean_serializer_ (0),
    number_obs_serializer_ (0),
    skewnesss_serializer_ (0),
    kurtosis_serializer_ (0)
  {
  }

  inline
  units_delimited_list_sskel::
  units_delimited_list_sskel (units_delimited_list_sskel* impl, void*)
  : ::common::delimited_list_sskel (impl, 0),
    units_delimited_list_impl_ (impl),
    units_serializer_ (0),
    measurement_type_serializer_ (0),
    uncertainty_serializer_ (0),
    negative_uncertainty_serializer_ (0),
    positive_uncertainty_serializer_ (0),
    uncertainty_percentage_serializer_ (0),
    negative_uncertainty_percentage_serializer_ (0),
    positive_uncertainty_percentage_serializer_ (0),
    median_serializer_ (0),
    standard_deviation_serializer_ (0),
    interquartile_range_serializer_ (0),
    range_serializer_ (0),
    min_serializer_ (0),
    max_serializer_ (0),
    standard_error_serializer_ (0),
    standard_error_of_the_mean_serializer_ (0),
    number_obs_serializer_ (0),
    skewnesss_serializer_ (0),
    kurtosis_serializer_ (0)
  {
  }

  // units_decimal_sskel
  //

  inline
  void units_decimal_sskel::
  units_serializer (::xml_schema::string_sskel& units)
  {
    this->units_serializer_ = &units;
  }

  inline
  void units_decimal_sskel::
  measurement_type_serializer (::xml_schema::string_sskel& measurement_type)
  {
    this->measurement_type_serializer_ = &measurement_type;
  }

  inline
  void units_decimal_sskel::
  uncertainty_serializer (::xml_schema::double_sskel& uncertainty)
  {
    this->uncertainty_serializer_ = &uncertainty;
  }

  inline
  void units_decimal_sskel::
  negative_uncertainty_serializer (::xml_schema::double_sskel& negative_uncertainty)
  {
    this->negative_uncertainty_serializer_ = &negative_uncertainty;
  }

  inline
  void units_decimal_sskel::
  positive_uncertainty_serializer (::xml_schema::double_sskel& positive_uncertainty)
  {
    this->positive_uncertainty_serializer_ = &positive_uncertainty;
  }

  inline
  void units_decimal_sskel::
  uncertainty_percentage_serializer (::xml_schema::double_sskel& uncertainty_percentage)
  {
    this->uncertainty_percentage_serializer_ = &uncertainty_percentage;
  }

  inline
  void units_decimal_sskel::
  negative_uncertainty_percentage_serializer (::xml_schema::double_sskel& negative_uncertainty_percentage)
  {
    this->negative_uncertainty_percentage_serializer_ = &negative_uncertainty_percentage;
  }

  inline
  void units_decimal_sskel::
  positive_uncertainty_percentage_serializer (::xml_schema::double_sskel& positive_uncertainty_percentage)
  {
    this->positive_uncertainty_percentage_serializer_ = &positive_uncertainty_percentage;
  }

  inline
  void units_decimal_sskel::
  median_serializer (::xml_schema::double_sskel& median)
  {
    this->median_serializer_ = &median;
  }

  inline
  void units_decimal_sskel::
  standard_deviation_serializer (::xml_schema::double_sskel& standard_deviation)
  {
    this->standard_deviation_serializer_ = &standard_deviation;
  }

  inline
  void units_decimal_sskel::
  interquartile_range_serializer (::common::two_doubles_sskel& interquartile_range)
  {
    this->interquartile_range_serializer_ = &interquartile_range;
  }

  inline
  void units_decimal_sskel::
  range_serializer (::common::two_doubles_sskel& range)
  {
    this->range_serializer_ = &range;
  }

  inline
  void units_decimal_sskel::
  min_serializer (::xml_schema::double_sskel& min)
  {
    this->min_serializer_ = &min;
  }

  inline
  void units_decimal_sskel::
  max_serializer (::xml_schema::double_sskel& max)
  {
    this->max_serializer_ = &max;
  }

  inline
  void units_decimal_sskel::
  standard_error_serializer (::xml_schema::double_sskel& standard_error)
  {
    this->standard_error_serializer_ = &standard_error;
  }

  inline
  void units_decimal_sskel::
  standard_error_of_the_mean_serializer (::xml_schema::double_sskel& standard_error_of_the_mean)
  {
    this->standard_error_of_the_mean_serializer_ = &standard_error_of_the_mean;
  }

  inline
  void units_decimal_sskel::
  number_obs_serializer (::xml_schema::int_sskel& number_obs)
  {
    this->number_obs_serializer_ = &number_obs;
  }

  inline
  void units_decimal_sskel::
  skewnesss_serializer (::xml_schema::double_sskel& skewnesss)
  {
    this->skewnesss_serializer_ = &skewnesss;
  }

  inline
  void units_decimal_sskel::
  kurtosis_serializer (::xml_schema::double_sskel& kurtosis)
  {
    this->kurtosis_serializer_ = &kurtosis;
  }

  inline
  void units_decimal_sskel::
  serializers (::xml_schema::string_sskel& units,
               ::xml_schema::string_sskel& measurement_type,
               ::xml_schema::double_sskel& uncertainty,
               ::xml_schema::double_sskel& negative_uncertainty,
               ::xml_schema::double_sskel& positive_uncertainty,
               ::xml_schema::double_sskel& uncertainty_percentage,
               ::xml_schema::double_sskel& negative_uncertainty_percentage,
               ::xml_schema::double_sskel& positive_uncertainty_percentage,
               ::xml_schema::double_sskel& median,
               ::xml_schema::double_sskel& standard_deviation,
               ::common::two_doubles_sskel& interquartile_range,
               ::common::two_doubles_sskel& range,
               ::xml_schema::double_sskel& min,
               ::xml_schema::double_sskel& max,
               ::xml_schema::double_sskel& standard_error,
               ::xml_schema::double_sskel& standard_error_of_the_mean,
               ::xml_schema::int_sskel& number_obs,
               ::xml_schema::double_sskel& skewnesss,
               ::xml_schema::double_sskel& kurtosis)
  {
    this->units_serializer_ = &units;
    this->measurement_type_serializer_ = &measurement_type;
    this->uncertainty_serializer_ = &uncertainty;
    this->negative_uncertainty_serializer_ = &negative_uncertainty;
    this->positive_uncertainty_serializer_ = &positive_uncertainty;
    this->uncertainty_percentage_serializer_ = &uncertainty_percentage;
    this->negative_uncertainty_percentage_serializer_ = &negative_uncertainty_percentage;
    this->positive_uncertainty_percentage_serializer_ = &positive_uncertainty_percentage;
    this->median_serializer_ = &median;
    this->standard_deviation_serializer_ = &standard_deviation;
    this->interquartile_range_serializer_ = &interquartile_range;
    this->range_serializer_ = &range;
    this->min_serializer_ = &min;
    this->max_serializer_ = &max;
    this->standard_error_serializer_ = &standard_error;
    this->standard_error_of_the_mean_serializer_ = &standard_error_of_the_mean;
    this->number_obs_serializer_ = &number_obs;
    this->skewnesss_serializer_ = &skewnesss;
    this->kurtosis_serializer_ = &kurtosis;
  }

  inline
  units_decimal_sskel::
  units_decimal_sskel (::xml_schema::double_sskel* tiein)
  : ::xml_schema::double_sskel (tiein, 0),
    units_decimal_impl_ (0),
    units_serializer_ (0),
    measurement_type_serializer_ (0),
    uncertainty_serializer_ (0),
    negative_uncertainty_serializer_ (0),
    positive_uncertainty_serializer_ (0),
    uncertainty_percentage_serializer_ (0),
    negative_uncertainty_percentage_serializer_ (0),
    positive_uncertainty_percentage_serializer_ (0),
    median_serializer_ (0),
    standard_deviation_serializer_ (0),
    interquartile_range_serializer_ (0),
    range_serializer_ (0),
    min_serializer_ (0),
    max_serializer_ (0),
    standard_error_serializer_ (0),
    standard_error_of_the_mean_serializer_ (0),
    number_obs_serializer_ (0),
    skewnesss_serializer_ (0),
    kurtosis_serializer_ (0)
  {
  }

  inline
  units_decimal_sskel::
  units_decimal_sskel (units_decimal_sskel* impl, void*)
  : ::xml_schema::double_sskel (impl, 0),
    units_decimal_impl_ (impl),
    units_serializer_ (0),
    measurement_type_serializer_ (0),
    uncertainty_serializer_ (0),
    negative_uncertainty_serializer_ (0),
    positive_uncertainty_serializer_ (0),
    uncertainty_percentage_serializer_ (0),
    negative_uncertainty_percentage_serializer_ (0),
    positive_uncertainty_percentage_serializer_ (0),
    median_serializer_ (0),
    standard_deviation_serializer_ (0),
    interquartile_range_serializer_ (0),
    range_serializer_ (0),
    min_serializer_ (0),
    max_serializer_ (0),
    standard_error_serializer_ (0),
    standard_error_of_the_mean_serializer_ (0),
    number_obs_serializer_ (0),
    skewnesss_serializer_ (0),
    kurtosis_serializer_ (0)
  {
  }

  // units_decimal_nonnegative_sskel
  //

  inline
  units_decimal_nonnegative_sskel::
  units_decimal_nonnegative_sskel (::common::units_decimal_sskel* tiein)
  : ::common::units_decimal_sskel (tiein, 0),
    units_decimal_nonnegative_impl_ (0)
  {
    this->_min_facet (.0, true);
  }

  inline
  units_decimal_nonnegative_sskel::
  units_decimal_nonnegative_sskel (units_decimal_nonnegative_sskel* impl, void*)
  : ::common::units_decimal_sskel (impl, 0),
    units_decimal_nonnegative_impl_ (impl)
  {
    this->_min_facet (.0, true);
  }

  // units_unsignedShort_sskel
  //

  inline
  void units_unsignedShort_sskel::
  measurement_type_serializer (::xml_schema::string_sskel& measurement_type)
  {
    this->measurement_type_serializer_ = &measurement_type;
  }

  inline
  void units_unsignedShort_sskel::
  units_serializer (::xml_schema::string_sskel& units)
  {
    this->units_serializer_ = &units;
  }

  inline
  void units_unsignedShort_sskel::
  serializers (::xml_schema::string_sskel& measurement_type,
               ::xml_schema::string_sskel& units)
  {
    this->measurement_type_serializer_ = &measurement_type;
    this->units_serializer_ = &units;
  }

  inline
  units_unsignedShort_sskel::
  units_unsignedShort_sskel (::xml_schema::unsigned_short_sskel* tiein)
  : ::xml_schema::unsigned_short_sskel (tiein, 0),
    units_unsignedShort_impl_ (0),
    measurement_type_serializer_ (0),
    units_serializer_ (0)
  {
  }

  inline
  units_unsignedShort_sskel::
  units_unsignedShort_sskel (units_unsignedShort_sskel* impl, void*)
  : ::xml_schema::unsigned_short_sskel (impl, 0),
    units_unsignedShort_impl_ (impl),
    measurement_type_serializer_ (0),
    units_serializer_ (0)
  {
  }

  // units_boolean_sskel
  //

  inline
  void units_boolean_sskel::
  units_serializer (::xml_schema::string_sskel& units)
  {
    this->units_serializer_ = &units;
  }

  inline
  void units_boolean_sskel::
  serializers (::xml_schema::string_sskel& units)
  {
    this->units_serializer_ = &units;
  }

  inline
  units_boolean_sskel::
  units_boolean_sskel (::xml_schema::boolean_sskel* tiein)
  : ::xml_schema::boolean_sskel (tiein, 0),
    units_boolean_impl_ (0),
    units_serializer_ (0)
  {
  }

  inline
  units_boolean_sskel::
  units_boolean_sskel (units_boolean_sskel* impl, void*)
  : ::xml_schema::boolean_sskel (impl, 0),
    units_boolean_impl_ (impl),
    units_serializer_ (0)
  {
  }

  // fraction_sskel
  //

  inline
  fraction_sskel::
  fraction_sskel (::xml_schema::double_sskel* tiein)
  : ::xml_schema::double_sskel (tiein, 0),
    fraction_impl_ (0)
  {
    this->_max_facet (1.0, true);
    this->_min_facet (.0, true);
  }

  inline
  fraction_sskel::
  fraction_sskel (fraction_sskel* impl, void*)
  : ::xml_schema::double_sskel (impl, 0),
    fraction_impl_ (impl)
  {
    this->_max_facet (1.0, true);
    this->_min_facet (.0, true);
  }

  // units_fraction_sskel
  //

  inline
  units_fraction_sskel::
  units_fraction_sskel (::common::units_decimal_sskel* tiein)
  : ::common::units_decimal_sskel (tiein, 0),
    units_fraction_impl_ (0)
  {
    this->_max_facet (1.0, true);
    this->_min_facet (.0, true);
  }

  inline
  units_fraction_sskel::
  units_fraction_sskel (units_fraction_sskel* impl, void*)
  : ::common::units_decimal_sskel (impl, 0),
    units_fraction_impl_ (impl)
  {
    this->_max_facet (1.0, true);
    this->_min_facet (.0, true);
  }

  // units_string_sskel
  //

  inline
  void units_string_sskel::
  units_serializer (::xml_schema::string_sskel& units)
  {
    this->units_serializer_ = &units;
  }

  inline
  void units_string_sskel::
  measurement_type_serializer (::xml_schema::string_sskel& measurement_type)
  {
    this->measurement_type_serializer_ = &measurement_type;
  }

  inline
  void units_string_sskel::
  uncertainty_serializer (::xml_schema::double_sskel& uncertainty)
  {
    this->uncertainty_serializer_ = &uncertainty;
  }

  inline
  void units_string_sskel::
  negative_uncertainty_serializer (::xml_schema::double_sskel& negative_uncertainty)
  {
    this->negative_uncertainty_serializer_ = &negative_uncertainty;
  }

  inline
  void units_string_sskel::
  positive_uncertainty_serializer (::xml_schema::double_sskel& positive_uncertainty)
  {
    this->positive_uncertainty_serializer_ = &positive_uncertainty;
  }

  inline
  void units_string_sskel::
  uncertainty_percentage_serializer (::xml_schema::double_sskel& uncertainty_percentage)
  {
    this->uncertainty_percentage_serializer_ = &uncertainty_percentage;
  }

  inline
  void units_string_sskel::
  negative_uncertainty_percentage_serializer (::xml_schema::double_sskel& negative_uncertainty_percentage)
  {
    this->negative_uncertainty_percentage_serializer_ = &negative_uncertainty_percentage;
  }

  inline
  void units_string_sskel::
  positive_uncertainty_percentage_serializer (::xml_schema::double_sskel& positive_uncertainty_percentage)
  {
    this->positive_uncertainty_percentage_serializer_ = &positive_uncertainty_percentage;
  }

  inline
  void units_string_sskel::
  median_serializer (::xml_schema::double_sskel& median)
  {
    this->median_serializer_ = &median;
  }

  inline
  void units_string_sskel::
  standard_deviation_serializer (::xml_schema::double_sskel& standard_deviation)
  {
    this->standard_deviation_serializer_ = &standard_deviation;
  }

  inline
  void units_string_sskel::
  interquartile_range_serializer (::common::two_doubles_sskel& interquartile_range)
  {
    this->interquartile_range_serializer_ = &interquartile_range;
  }

  inline
  void units_string_sskel::
  range_serializer (::common::two_doubles_sskel& range)
  {
    this->range_serializer_ = &range;
  }

  inline
  void units_string_sskel::
  min_serializer (::xml_schema::double_sskel& min)
  {
    this->min_serializer_ = &min;
  }

  inline
  void units_string_sskel::
  max_serializer (::xml_schema::double_sskel& max)
  {
    this->max_serializer_ = &max;
  }

  inline
  void units_string_sskel::
  standard_error_serializer (::xml_schema::double_sskel& standard_error)
  {
    this->standard_error_serializer_ = &standard_error;
  }

  inline
  void units_string_sskel::
  standard_error_of_the_mean_serializer (::xml_schema::double_sskel& standard_error_of_the_mean)
  {
    this->standard_error_of_the_mean_serializer_ = &standard_error_of_the_mean;
  }

  inline
  void units_string_sskel::
  number_obs_serializer (::xml_schema::int_sskel& number_obs)
  {
    this->number_obs_serializer_ = &number_obs;
  }

  inline
  void units_string_sskel::
  skewnesss_serializer (::xml_schema::double_sskel& skewnesss)
  {
    this->skewnesss_serializer_ = &skewnesss;
  }

  inline
  void units_string_sskel::
  kurtosis_serializer (::xml_schema::double_sskel& kurtosis)
  {
    this->kurtosis_serializer_ = &kurtosis;
  }

  inline
  void units_string_sskel::
  serializers (::xml_schema::string_sskel& units,
               ::xml_schema::string_sskel& measurement_type,
               ::xml_schema::double_sskel& uncertainty,
               ::xml_schema::double_sskel& negative_uncertainty,
               ::xml_schema::double_sskel& positive_uncertainty,
               ::xml_schema::double_sskel& uncertainty_percentage,
               ::xml_schema::double_sskel& negative_uncertainty_percentage,
               ::xml_schema::double_sskel& positive_uncertainty_percentage,
               ::xml_schema::double_sskel& median,
               ::xml_schema::double_sskel& standard_deviation,
               ::common::two_doubles_sskel& interquartile_range,
               ::common::two_doubles_sskel& range,
               ::xml_schema::double_sskel& min,
               ::xml_schema::double_sskel& max,
               ::xml_schema::double_sskel& standard_error,
               ::xml_schema::double_sskel& standard_error_of_the_mean,
               ::xml_schema::int_sskel& number_obs,
               ::xml_schema::double_sskel& skewnesss,
               ::xml_schema::double_sskel& kurtosis)
  {
    this->units_serializer_ = &units;
    this->measurement_type_serializer_ = &measurement_type;
    this->uncertainty_serializer_ = &uncertainty;
    this->negative_uncertainty_serializer_ = &negative_uncertainty;
    this->positive_uncertainty_serializer_ = &positive_uncertainty;
    this->uncertainty_percentage_serializer_ = &uncertainty_percentage;
    this->negative_uncertainty_percentage_serializer_ = &negative_uncertainty_percentage;
    this->positive_uncertainty_percentage_serializer_ = &positive_uncertainty_percentage;
    this->median_serializer_ = &median;
    this->standard_deviation_serializer_ = &standard_deviation;
    this->interquartile_range_serializer_ = &interquartile_range;
    this->range_serializer_ = &range;
    this->min_serializer_ = &min;
    this->max_serializer_ = &max;
    this->standard_error_serializer_ = &standard_error;
    this->standard_error_of_the_mean_serializer_ = &standard_error_of_the_mean;
    this->number_obs_serializer_ = &number_obs;
    this->skewnesss_serializer_ = &skewnesss;
    this->kurtosis_serializer_ = &kurtosis;
  }

  inline
  units_string_sskel::
  units_string_sskel (::xml_schema::string_sskel* tiein)
  : ::xml_schema::string_sskel (tiein, 0),
    units_string_impl_ (0),
    units_serializer_ (0),
    measurement_type_serializer_ (0),
    uncertainty_serializer_ (0),
    negative_uncertainty_serializer_ (0),
    positive_uncertainty_serializer_ (0),
    uncertainty_percentage_serializer_ (0),
    negative_uncertainty_percentage_serializer_ (0),
    positive_uncertainty_percentage_serializer_ (0),
    median_serializer_ (0),
    standard_deviation_serializer_ (0),
    interquartile_range_serializer_ (0),
    range_serializer_ (0),
    min_serializer_ (0),
    max_serializer_ (0),
    standard_error_serializer_ (0),
    standard_error_of_the_mean_serializer_ (0),
    number_obs_serializer_ (0),
    skewnesss_serializer_ (0),
    kurtosis_serializer_ (0)
  {
  }

  inline
  units_string_sskel::
  units_string_sskel (units_string_sskel* impl, void*)
  : ::xml_schema::string_sskel (impl, 0),
    units_string_impl_ (impl),
    units_serializer_ (0),
    measurement_type_serializer_ (0),
    uncertainty_serializer_ (0),
    negative_uncertainty_serializer_ (0),
    positive_uncertainty_serializer_ (0),
    uncertainty_percentage_serializer_ (0),
    negative_uncertainty_percentage_serializer_ (0),
    positive_uncertainty_percentage_serializer_ (0),
    median_serializer_ (0),
    standard_deviation_serializer_ (0),
    interquartile_range_serializer_ (0),
    range_serializer_ (0),
    min_serializer_ (0),
    max_serializer_ (0),
    standard_error_serializer_ (0),
    standard_error_of_the_mean_serializer_ (0),
    number_obs_serializer_ (0),
    skewnesss_serializer_ (0),
    kurtosis_serializer_ (0)
  {
  }

  // data_storage_formats_sskel
  //

  inline
  data_storage_formats_sskel::
  data_storage_formats_sskel (::xml_schema::string_sskel* tiein)
  : ::xml_schema::string_sskel (tiein, 0),
    data_storage_formats_impl_ (0)
  {
    this->_enumeration_facet (_xsde_data_storage_formats_sskel_enums_, 7UL);
  }

  inline
  data_storage_formats_sskel::
  data_storage_formats_sskel (data_storage_formats_sskel* impl, void*)
  : ::xml_schema::string_sskel (impl, 0),
    data_storage_formats_impl_ (impl)
  {
    this->_enumeration_facet (_xsde_data_storage_formats_sskel_enums_, 7UL);
  }

  // threshold_type_sskel
  //

  inline
  threshold_type_sskel::
  threshold_type_sskel (::xml_schema::string_sskel* tiein)
  : ::xml_schema::string_sskel (tiein, 0),
    threshold_type_impl_ (0)
  {
    this->_enumeration_facet (_xsde_threshold_type_sskel_enums_, 6UL);
  }

  inline
  threshold_type_sskel::
  threshold_type_sskel (threshold_type_sskel* impl, void*)
  : ::xml_schema::string_sskel (impl, 0),
    threshold_type_impl_ (impl)
  {
    this->_enumeration_facet (_xsde_threshold_type_sskel_enums_, 6UL);
  }

  // transition_threshold_sskel
  //

  inline
  void transition_threshold_sskel::
  quantity_serializer (::xml_schema::string_sskel& quantity)
  {
    this->quantity_serializer_ = &quantity;
  }

  inline
  void transition_threshold_sskel::
  type_serializer (::common::threshold_type_sskel& type)
  {
    this->type_serializer_ = &type;
  }

  inline
  void transition_threshold_sskel::
  variable_ID_serializer (::xml_schema::unsigned_long_sskel& variable_ID)
  {
    this->variable_ID_serializer_ = &variable_ID;
  }

  inline
  void transition_threshold_sskel::
  serializers (::xml_schema::string_sskel& units,
               ::xml_schema::string_sskel& measurement_type,
               ::xml_schema::double_sskel& uncertainty,
               ::xml_schema::double_sskel& negative_uncertainty,
               ::xml_schema::double_sskel& positive_uncertainty,
               ::xml_schema::double_sskel& uncertainty_percentage,
               ::xml_schema::double_sskel& negative_uncertainty_percentage,
               ::xml_schema::double_sskel& positive_uncertainty_percentage,
               ::xml_schema::double_sskel& median,
               ::xml_schema::double_sskel& standard_deviation,
               ::common::two_doubles_sskel& interquartile_range,
               ::common::two_doubles_sskel& range,
               ::xml_schema::double_sskel& min,
               ::xml_schema::double_sskel& max,
               ::xml_schema::double_sskel& standard_error,
               ::xml_schema::double_sskel& standard_error_of_the_mean,
               ::xml_schema::int_sskel& number_obs,
               ::xml_schema::double_sskel& skewnesss,
               ::xml_schema::double_sskel& kurtosis,
               ::xml_schema::string_sskel& quantity,
               ::common::threshold_type_sskel& type,
               ::xml_schema::unsigned_long_sskel& variable_ID)
  {
    this->units_serializer_ = &units;
    this->measurement_type_serializer_ = &measurement_type;
    this->uncertainty_serializer_ = &uncertainty;
    this->negative_uncertainty_serializer_ = &negative_uncertainty;
    this->positive_uncertainty_serializer_ = &positive_uncertainty;
    this->uncertainty_percentage_serializer_ = &uncertainty_percentage;
    this->negative_uncertainty_percentage_serializer_ = &negative_uncertainty_percentage;
    this->positive_uncertainty_percentage_serializer_ = &positive_uncertainty_percentage;
    this->median_serializer_ = &median;
    this->standard_deviation_serializer_ = &standard_deviation;
    this->interquartile_range_serializer_ = &interquartile_range;
    this->range_serializer_ = &range;
    this->min_serializer_ = &min;
    this->max_serializer_ = &max;
    this->standard_error_serializer_ = &standard_error;
    this->standard_error_of_the_mean_serializer_ = &standard_error_of_the_mean;
    this->number_obs_serializer_ = &number_obs;
    this->skewnesss_serializer_ = &skewnesss;
    this->kurtosis_serializer_ = &kurtosis;
    this->quantity_serializer_ = &quantity;
    this->type_serializer_ = &type;
    this->variable_ID_serializer_ = &variable_ID;
  }

  inline
  transition_threshold_sskel::
  transition_threshold_sskel (::common::units_decimal_sskel* tiein)
  : ::common::units_decimal_sskel (tiein, 0),
    transition_threshold_impl_ (0),
    quantity_serializer_ (0),
    type_serializer_ (0),
    variable_ID_serializer_ (0)
  {
  }

  inline
  transition_threshold_sskel::
  transition_threshold_sskel (transition_threshold_sskel* impl, void*)
  : ::common::units_decimal_sskel (impl, 0),
    transition_threshold_impl_ (impl),
    quantity_serializer_ (0),
    type_serializer_ (0),
    variable_ID_serializer_ (0)
  {
  }
}

// Begin epilogue.
//
//
// End epilogue.

