<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classcl_1_1_memory" kind="class" language="C++" prot="public">
    <compoundname>cl::Memory</compoundname>
    <basecompoundref refid="classcl_1_1detail_1_1_wrapper" prot="public" virt="non-virtual">cl::detail::Wrapper&lt; cl_mem &gt;</basecompoundref>
    <derivedcompoundref refid="classcl_1_1_buffer" prot="public" virt="non-virtual">cl::Buffer</derivedcompoundref>
    <derivedcompoundref refid="classcl_1_1_image" prot="public" virt="non-virtual">cl::Image</derivedcompoundref>
    <includes refid="cl_8hpp" local="no">cl.hpp</includes>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcl_1_1_memory_1a9926612772ae6e016f1118ef4148da22" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cl::Memory::Memory</definition>
        <argsstring>()</argsstring>
        <name>Memory</name>
        <qualifiedname>cl::Memory::Memory</qualifiedname>
        <briefdescription>
<para>Default constructor - initializes to NULL. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2740" column="3" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2740" bodyend="2740"/>
      </memberdef>
      <memberdef kind="function" id="classcl_1_1_memory_1af53ac1080cb1e14cd079bb38680defbc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__CL_EXPLICIT_CONSTRUCTORS</type>
        <definition>__CL_EXPLICIT_CONSTRUCTORS cl::Memory::Memory</definition>
        <argsstring>(const cl_mem &amp;memory)</argsstring>
        <name>Memory</name>
        <qualifiedname>cl::Memory::Memory</qualifiedname>
        <param>
          <type>const cl_mem &amp;</type>
          <declname>memory</declname>
        </param>
        <briefdescription>
<para>Constructor from cl_mem - takes ownership. </para>
        </briefdescription>
        <detaileddescription>
<para>This effectively transfers ownership of a refcount on the cl_mem into the new <ref refid="classcl_1_1_memory" kindref="compound">Memory</ref> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2747" column="30" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2747" bodyend="2748"/>
      </memberdef>
      <memberdef kind="function" id="classcl_1_1_memory_1aa8815cba4b7ef0dd5317e60fe9ff719b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref> &amp;</type>
        <definition>Memory &amp; cl::Memory::operator=</definition>
        <argsstring>(const cl_mem &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>cl::Memory::operator=</qualifiedname>
        <param>
          <type>const cl_mem &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assignment operator from cl_mem - takes ownership. </para>
        </briefdescription>
        <detaileddescription>
<para>This effectively transfers ownership of a refcount on the rhs and calls clReleaseMemObject() on the value previously held by this instance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2755" column="10" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2755" bodyend="2758"/>
      </memberdef>
      <memberdef kind="function" id="classcl_1_1_memory_1a23691d3d5e70f47538f1cde3741b0367" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cl::Memory::Memory</definition>
        <argsstring>(const Memory &amp;mem)</argsstring>
        <name>Memory</name>
        <qualifiedname>cl::Memory::Memory</qualifiedname>
        <param>
          <type>const <ref refid="classcl_1_1_memory" kindref="compound">Memory</ref> &amp;</type>
          <declname>mem</declname>
        </param>
        <briefdescription>
<para>Copy constructor to forward copy to the superclass correctly. Required for MSVC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2763" column="3" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2763" bodyend="2763"/>
      </memberdef>
      <memberdef kind="function" id="classcl_1_1_memory_1a03b06142c52b67a38d70231009e54612" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref> &amp;</type>
        <definition>Memory &amp; cl::Memory::operator=</definition>
        <argsstring>(const Memory &amp;mem)</argsstring>
        <name>operator=</name>
        <qualifiedname>cl::Memory::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classcl_1_1_memory" kindref="compound">Memory</ref> &amp;</type>
          <declname>mem</declname>
        </param>
        <briefdescription>
<para>Copy assignment to forward copy to the superclass correctly. Required for MSVC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2768" column="10" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2768" bodyend="2771"/>
      </memberdef>
      <memberdef kind="function" id="classcl_1_1_memory_1ab86d24b2a4f9a7090148fb8e77d73135" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>cl_int</type>
        <definition>cl_int cl::Memory::getInfo</definition>
        <argsstring>(cl_mem_info name, T *param) const</argsstring>
        <name>getInfo</name>
        <qualifiedname>cl::Memory::getInfo</qualifiedname>
        <param>
          <type>cl_mem_info</type>
          <declname>name</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Wrapper for clGetMemObjectInfo(). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2790" column="22" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2790" bodyend="2794"/>
      </memberdef>
      <memberdef kind="function" id="classcl_1_1_memory_1a8795d4f88a9f16cc4b4a0af07cf4d335" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>cl_int</type>
            <declname>name</declname>
            <defname>name</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits</ref>&lt; detail::cl_mem_info, name &gt;::param_type</type>
        <definition>detail::param_traits&lt; detail::cl_mem_info, name &gt;::param_type cl::Memory::getInfo</definition>
        <argsstring>(cl_int *err=NULL) const</argsstring>
        <name>getInfo</name>
        <qualifiedname>cl::Memory::getInfo</qualifiedname>
        <param>
          <type>cl_int *</type>
          <declname>err</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Wrapper for clGetMemObjectInfo() that returns by value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2799" column="3" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2799" bodyend="2806"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class interface for cl_mem. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>Copies of these objects are shallow, meaning that the copy will refer to the same underlying cl_mem as the original. For details, see clRetainMemObject() and clReleaseMemObject().</para>
</simplesect>
<simplesect kind="see"><para>cl_mem </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>cl::detail::Wrapper&lt; cl_mem &gt;</label>
        <link refid="classcl_1_1detail_1_1_wrapper"/>
      </node>
      <node id="3">
        <label>cl::Buffer</label>
        <link refid="classcl_1_1_buffer"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>cl::BufferGL</label>
        <link refid="classcl_1_1_buffer_g_l"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="7">
        <label>cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED</label>
        <link refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d"/>
        <childnode refid="6" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>cl::Image</label>
        <link refid="classcl_1_1_image"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>cl::Image2D</label>
        <link refid="classcl_1_1_image2_d"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="8">
        <label>cl::Image3D</label>
        <link refid="classcl_1_1_image3_d"/>
        <childnode refid="5" relation="public-inheritance">
        </childnode>
      </node>
      <node id="9">
        <label>cl::Image3DGL</label>
        <link refid="classcl_1_1_image3_d_g_l"/>
        <childnode refid="8" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>cl::Memory</label>
        <link refid="classcl_1_1_memory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>cl::detail::Wrapper&lt; cl_mem &gt;</label>
        <link refid="classcl_1_1detail_1_1_wrapper"/>
      </node>
      <node id="1">
        <label>cl::Memory</label>
        <link refid="classcl_1_1_memory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2737" column="1" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2737" bodyend="2829"/>
    <listofallmembers>
      <member refid="classcl_1_1detail_1_1_wrapper_1a83841267bac5ad4411ec8935f78315d8" prot="public" virt="non-virtual"><scope>cl::Memory</scope><name>cl_type</name></member>
      <member refid="classcl_1_1_memory_1ab86d24b2a4f9a7090148fb8e77d73135" prot="public" virt="non-virtual"><scope>cl::Memory</scope><name>getInfo</name></member>
      <member refid="classcl_1_1_memory_1a8795d4f88a9f16cc4b4a0af07cf4d335" prot="public" virt="non-virtual"><scope>cl::Memory</scope><name>getInfo</name></member>
      <member refid="classcl_1_1_memory_1a9926612772ae6e016f1118ef4148da22" prot="public" virt="non-virtual"><scope>cl::Memory</scope><name>Memory</name></member>
      <member refid="classcl_1_1_memory_1af53ac1080cb1e14cd079bb38680defbc" prot="public" virt="non-virtual"><scope>cl::Memory</scope><name>Memory</name></member>
      <member refid="classcl_1_1_memory_1a23691d3d5e70f47538f1cde3741b0367" prot="public" virt="non-virtual"><scope>cl::Memory</scope><name>Memory</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1a1292547dd0c591aa972e25b793481583" prot="protected" virt="non-virtual"><scope>cl::Memory</scope><name>object_</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1a83936d9a0be85837d0d2603bce850b31" prot="public" virt="non-virtual"><scope>cl::Memory</scope><name>operator()</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1a30993cd6ba246771306e4164ce2202eb" prot="public" virt="non-virtual"><scope>cl::Memory</scope><name>operator()</name></member>
      <member refid="classcl_1_1_memory_1aa8815cba4b7ef0dd5317e60fe9ff719b" prot="public" virt="non-virtual"><scope>cl::Memory</scope><name>operator=</name></member>
      <member refid="classcl_1_1_memory_1a03b06142c52b67a38d70231009e54612" prot="public" virt="non-virtual"><scope>cl::Memory</scope><name>operator=</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1a49b3fcc3a16d0e2ad3295b3e38fb1bf8" prot="public" virt="non-virtual" ambiguityscope="Wrapper&lt; cl_mem &gt;::"><scope>cl::Memory</scope><name>operator=</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1a207374e201c6c33c01bdc7ee09e92d76" prot="protected" virt="non-virtual"><scope>cl::Memory</scope><name>release</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1adfdff8a6c98ca62fedc6a9ffced47a06" prot="protected" virt="non-virtual"><scope>cl::Memory</scope><name>retain</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1aa1b916a75114fe3217018378d5f1eb71" prot="public" virt="non-virtual"><scope>cl::Memory</scope><name>Wrapper</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1a514167f4ed7af4cc0ff0002bf082798f" prot="public" virt="non-virtual"><scope>cl::Memory</scope><name>Wrapper</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1af91bafdf8593c34e0d0722cdd93010be" prot="public" virt="non-virtual"><scope>cl::Memory</scope><name>Wrapper</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1aa254b6401dc19abcc7c21d2a664cadf9" prot="public" virt="non-virtual"><scope>cl::Memory</scope><name>~Wrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
