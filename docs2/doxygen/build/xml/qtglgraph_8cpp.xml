<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="qtglgraph_8cpp" kind="file" language="C++">
    <compoundname>qtglgraph.cpp</compoundname>
    <includes local="no">fstream</includes>
    <includes local="no">iostream</includes>
    <includes refid="parameter_8hpp" local="yes">parameter.hpp</includes>
    <includes refid="qtglgraph_8hpp" local="yes">qtglgraph.hpp</includes>
    <incdepgraph>
      <node id="15">
        <label>graph.hpp</label>
        <link refid="graph_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/graphics/qtglgraph.cpp</label>
        <link refid="qtglgraph_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="10">
        <label>qtglgraph.hpp</label>
        <link refid="qtglgraph_8hpp_source"/>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>parameter.hpp</label>
        <link refid="parameter_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>parameters.hpp</label>
        <link refid="parameters_8hpp_source"/>
      </node>
      <node id="11">
        <label>QOpenGLBuffer</label>
      </node>
      <node id="12">
        <label>QOpenGLShaderProgram</label>
      </node>
      <node id="13">
        <label>QOpenGLVertexArrayObject</label>
      </node>
      <node id="14">
        <label>QtOpenGL</label>
      </node>
      <node id="2">
        <label>fstream</label>
      </node>
      <node id="3">
        <label>iostream</label>
      </node>
      <node id="5">
        <label>ostream</label>
      </node>
      <node id="9">
        <label>parameter.tpp</label>
      </node>
      <node id="6">
        <label>string</label>
      </node>
      <node id="7">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">Copyright<sp/>1996-2006<sp/>Roeland<sp/>Merks</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Tissue<sp/>Simulation<sp/>Toolkit.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">Tissue<sp/>Simulation<sp/>Toolkit<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute</highlight></codeline>
<codeline lineno="8"><highlight class="comment">it<sp/>and/or<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="9"><highlight class="comment">License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="10"><highlight class="comment">version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">Tissue<sp/>Simulation<sp/>Toolkit<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will</highlight></codeline>
<codeline lineno="13"><highlight class="comment">be<sp/>useful,<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied</highlight></codeline>
<codeline lineno="14"><highlight class="comment">warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">See<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment">along<sp/>with<sp/>Tissue<sp/>Simulation<sp/>Toolkit;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free</highlight></codeline>
<codeline lineno="19"><highlight class="comment">Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>St,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA</highlight></codeline>
<codeline lineno="20"><highlight class="comment">02110-1301<sp/>USA</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;fstream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;parameter.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qtglgraph.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal">QtGLGraphics::QtGLGraphics(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xfield,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yfield,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*movie_file)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/>setSurfaceType(QWindow::OpenGLSurface);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/>create();</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/>QSurfaceFormat<sp/>format;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/>format.setSamples(16);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/>setFormat(format);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/>width<sp/>=<sp/>xfield;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/>height<sp/>=<sp/>yfield;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>init_size_x<sp/>=<sp/>xfield;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/>init_size_y<sp/>=<sp/>yfield;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(movie_file)<sp/>{</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Movie<sp/>writing<sp/>is<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><ref refid="structtimer" kindref="compound">timer</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QTimer(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>connect(<ref refid="structtimer" kindref="compound">timer</ref>,<sp/>SIGNAL(timeout()),<sp/>SLOT(TimeStepWrap()));</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/>initialize();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/>resize(xfield,<sp/>yfield);</highlight></codeline>
<codeline lineno="48"><highlight class="normal">}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::initialize()<sp/>{</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/>m_context<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QOpenGLContext(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/>m_context-&gt;setFormat(requestedFormat());</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/>m_context-&gt;create();</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/>m_context-&gt;makeCurrent(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/>initializeOpenGLFunctions();</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/>gl_extra<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QOpenGLExtraFunctions(m_context);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/>glClearColor(1,<sp/>1,<sp/>1,<sp/>1);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>shadercode<sp/>=<sp/>SetupShaders();</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(shadercode)<sp/>{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>to<sp/>compile<sp/>shaders.&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Failed<sp/>at<sp/>number:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>shadercode<sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>glEnable(GL_COLOR_MATERIAL);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>glEnable(GL_BLEND);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>glBlendFunc(GL_SRC_ALPHA,<sp/>GL_ONE_MINUS_SRC_ALPHA);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>SetupBuffers();</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>ReadColorTable();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><ref refid="structtimer" kindref="compound">timer</ref>-&gt;start();</highlight></codeline>
<codeline lineno="74"><highlight class="normal">}</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::SetupBuffers()<sp/>{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>vertexarray.create();</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>vertexarray.bind();</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/>glGenBuffers(1,<sp/>&amp;vertexbuffer);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/>glEnableVertexAttribArray(posAttrib);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>vertexbuffer);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/>glVertexAttribPointer(posAttrib,<sp/>3,<sp/>GL_FLOAT,<sp/>GL_FALSE,<sp/>0,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)0);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>glGenBuffers(1,<sp/>&amp;colbuffer);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>colbuffer);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/>glEnableVertexAttribArray(colAttrib);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>glVertexAttribPointer(colAttrib,<sp/>4,<sp/>GL_FLOAT,<sp/>GL_FALSE,<sp/>0,<sp/>0);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/>glGenBuffers(1,<sp/>&amp;floatbuffer);</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/>glGenTextures(1,<sp/>&amp;floattexture);</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>glGenBuffers(1,<sp/>&amp;intbuffer);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>glGenTextures(1,<sp/>&amp;inttexture);</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/>glGenBuffers(1,<sp/>&amp;coltablebuffer);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_UNIFORM_BUFFER,<sp/>coltablebuffer);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/>gl_extra-&gt;glBindBufferBase(GL_UNIFORM_BUFFER,<sp/>colTableAttrib,<sp/>coltablebuffer);</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::Draw()<sp/>{</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rect_pos<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>DrawRects();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/>rect_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>rect_col_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(point_pos<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>DrawPoints();</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/>point_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(line_pos<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>DrawLines();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>line_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/>line_col_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::DrawRects()<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>squares_program.bind();</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/>glUniform3fv(uni_size,<sp/>1,<sp/>uniform_size);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>vertexbuffer);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structrect" kindref="compound">rect</ref>)<sp/>*<sp/>rect_pos,<sp/>rects,</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>colbuffer);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcolor" kindref="compound">color</ref>)<sp/>*<sp/>rect_col_pos,<sp/>rect_cols,</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/>glDrawArrays(GL_POINTS,<sp/>0,<sp/>rect_col_pos);</highlight></codeline>
<codeline lineno="125"><highlight class="normal">}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::DrawLines()<sp/>{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/>basic_program.bind();</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/>glUniform3fv(uni_size,<sp/>1,<sp/>uniform_size);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>glLineWidth(mag<sp/>/<sp/>1.5);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>vertexbuffer);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structline" kindref="compound">line</ref>)<sp/>*<sp/>line_pos,<sp/>lines,</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>colbuffer);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcolor" kindref="compound">color</ref>)<sp/>*<sp/>line_col_pos,<sp/>line_cols,</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/>glDrawArrays(GL_LINES,<sp/>0,<sp/>line_pos<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="138"><highlight class="normal">}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::DrawPoints()<sp/>{</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>basic_program.bind();</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/>glPointSize(mag);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/>glUniform3fv(uni_size,<sp/>1,<sp/>uniform_size);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>vertexbuffer);</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structpoint" kindref="compound">point</ref>)<sp/>*<sp/>point_pos,<sp/>points,</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>colbuffer);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcolor" kindref="compound">color</ref>)<sp/>*<sp/>point_pos,<sp/>point_cols,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/>glDrawArrays(GL_POINTS,<sp/>0,<sp/>point_pos);</highlight></codeline>
<codeline lineno="151"><highlight class="normal">}</highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::DensityPlot(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ysize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r,</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>g,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>single_rect[]<sp/>=<sp/>{-1,<sp/>1,<sp/><sp/>z,<sp/>1,<sp/>1,<sp/>z,<sp/>-1,<sp/>-1,<sp/>z,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1,<sp/>-1,<sp/>z,<sp/>1,<sp/>1,<sp/>z,<sp/>1,<sp/><sp/>-1,<sp/>z};</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cols[]<sp/>=<sp/>{r,<sp/>g,<sp/>b,<sp/>1,<sp/>r,<sp/>g,<sp/>b,<sp/>1,<sp/>r,<sp/>g,<sp/>b,<sp/>1,</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r,<sp/>g,<sp/>b,<sp/>1,<sp/>r,<sp/>g,<sp/>b,<sp/>1,<sp/>r,<sp/>g,<sp/>b,<sp/>1};</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>densityplot_program.bind();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>glUniform2fv(windowSizeAttrib,<sp/>1,<sp/>window_size);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>glUniform3fv(uni_size,<sp/>1,<sp/>uniform_size);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_TEXTURE_BUFFER,<sp/>floatbuffer);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/>glBufferData(GL_TEXTURE_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>*<sp/>xsize<sp/>*<sp/>ysize,<sp/>data,</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/>glActiveTexture(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>glBindTexture(GL_TEXTURE_BUFFER,<sp/>floattexture);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>gl_extra-&gt;glTexBuffer(GL_TEXTURE_BUFFER,<sp/>GL_R32F,<sp/>floatbuffer);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/>glUniform1i(floatDataAttrib,<sp/>0);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>vertexbuffer);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(single_rect),<sp/>single_rect,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>colbuffer);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cols),<sp/>cols,<sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>glDrawArrays(GL_TRIANGLES,<sp/>0,<sp/>6);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::intPlot(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ysize)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>single_rect[]<sp/>=<sp/>{-1,<sp/>1,<sp/><sp/>z,<sp/>1,<sp/>1,<sp/>z,<sp/>-1,<sp/>-1,<sp/>z,</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1,<sp/>-1,<sp/>z,<sp/>1,<sp/>1,<sp/>z,<sp/>1,<sp/><sp/>-1,<sp/>z};</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cols[]<sp/>=<sp/>{1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1,<sp/>1};</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/>intplot_program.bind();</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>glUniform2fv(windowSizeAttrib,<sp/>1,<sp/>window_size);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/>glUniform3fv(uni_size,<sp/>1,<sp/>uniform_size);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_TEXTURE_BUFFER,<sp/>intbuffer);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/>glBufferData(GL_TEXTURE_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>*<sp/>xsize<sp/>*<sp/>ysize,<sp/>data,</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/>glActiveTexture(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/>glBindTexture(GL_TEXTURE_BUFFER,<sp/>inttexture);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/>gl_extra-&gt;glTexBuffer(GL_TEXTURE_BUFFER,<sp/>GL_R32I,<sp/>intbuffer);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/>glUniform1i(intDataAttrib,<sp/>0);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>vertexbuffer);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(single_rect),<sp/>single_rect,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>colbuffer);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cols),<sp/>cols,<sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>glDrawArrays(GL_TRIANGLES,<sp/>0,<sp/>6);</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::cpmLinePlot(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ysize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r,</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>g,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>single_rect[]<sp/>=<sp/>{-1,<sp/>1,<sp/><sp/>z,<sp/>1,<sp/>1,<sp/>z,<sp/>-1,<sp/>-1,<sp/>z,</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1,<sp/>-1,<sp/>z,<sp/>1,<sp/>1,<sp/>z,<sp/>1,<sp/><sp/>-1,<sp/>z};</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cols[]<sp/>=<sp/>{r,<sp/>g,<sp/>b,<sp/>1,<sp/>r,<sp/>g,<sp/>b,<sp/>1,<sp/>r,<sp/>g,<sp/>b,<sp/>1,</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r,<sp/>g,<sp/>b,<sp/>1,<sp/>r,<sp/>g,<sp/>b,<sp/>1,<sp/>r,<sp/>g,<sp/>b,<sp/>1};</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/>cpmlineplot_program.bind();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/>glUniform1f(lineWidthAttrib,<sp/>0.3);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/>glUniform2fv(windowSizeAttrib,<sp/>1,<sp/>window_size);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/>glUniform3fv(uni_size,<sp/>1,<sp/>uniform_size);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_TEXTURE_BUFFER,<sp/>intbuffer);</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/>glBufferData(GL_TEXTURE_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>*<sp/>xsize<sp/>*<sp/>ysize,<sp/>data,</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/>glActiveTexture(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/>glBindTexture(GL_TEXTURE_BUFFER,<sp/>inttexture);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/>gl_extra-&gt;glTexBuffer(GL_TEXTURE_BUFFER,<sp/>GL_R32I,<sp/>intbuffer);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>glUniform1i(intDataAttrib,<sp/>0);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>vertexbuffer);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(single_rect),<sp/>single_rect,</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>colbuffer);</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cols),<sp/>cols,<sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/>glDrawArrays(GL_TRIANGLES,<sp/>0,<sp/>6);</highlight></codeline>
<codeline lineno="232"><highlight class="normal">}</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::contourPlot(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xsize,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ysize,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>r,</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>g,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b)<sp/>{</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>single_rect[]<sp/>=<sp/>{-1,<sp/>1,<sp/><sp/>z,<sp/>1,<sp/>1,<sp/>z,<sp/>-1,<sp/>-1,<sp/>z,</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1,<sp/>-1,<sp/>z,<sp/>1,<sp/>1,<sp/>z,<sp/>1,<sp/><sp/>-1,<sp/>z};</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cols[]<sp/>=<sp/>{r,<sp/>g,<sp/>b,<sp/>1,<sp/>r,<sp/>g,<sp/>b,<sp/>1,<sp/>r,<sp/>g,<sp/>b,<sp/>1,</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r,<sp/>g,<sp/>b,<sp/>1,<sp/>r,<sp/>g,<sp/>b,<sp/>1,<sp/>r,<sp/>g,<sp/>b,<sp/>1};</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/>contourplot_program.bind();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/>glUniform2fv(windowSizeAttrib,<sp/>1,<sp/>window_size);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/>glUniform3fv(uni_size,<sp/>1,<sp/>uniform_size);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/>glUniform1f(lineWidthAttrib,<sp/>0.2);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_TEXTURE_BUFFER,<sp/>floatbuffer);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/>glBufferData(GL_TEXTURE_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal">)<sp/>*<sp/>xsize<sp/>*<sp/>ysize,<sp/>data,</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/>glActiveTexture(GL_TEXTURE0);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/>glBindTexture(GL_TEXTURE_BUFFER,<sp/>floattexture);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/>gl_extra-&gt;glTexBuffer(GL_TEXTURE_BUFFER,<sp/>GL_R32F,<sp/>floatbuffer);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/>glUniform1i(floatDataAttrib,<sp/>0);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>vertexbuffer);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(single_rect),<sp/>single_rect,</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_ARRAY_BUFFER,<sp/>colbuffer);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/>glBufferData(GL_ARRAY_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cols),<sp/>cols,<sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/>glDrawArrays(GL_TRIANGLES,<sp/>0,<sp/>6);</highlight></codeline>
<codeline lineno="260"><highlight class="normal">}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_qt_g_l_graphics_1a634af99f8c65537a97493d0b5495cc67" kindref="member">QtGLGraphics::Point</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structcolor" kindref="compound">color</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/>points[point_pos].x<sp/>=<sp/>(float)x;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>points[point_pos].y<sp/>=<sp/>(float)y;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/>points[point_pos].z<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>point_cols[point_pos]<sp/>=<sp/>colors[<ref refid="structcolor" kindref="compound">color</ref>];</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/>point_pos++;</highlight></codeline>
<codeline lineno="268"><highlight class="normal">}</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::PointAlpha(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/>points[point_pos].x<sp/>=<sp/>x;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/>points[point_pos].y<sp/>=<sp/>y;</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/>points[point_pos].y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/>point_cols[point_pos]<sp/>=<sp/>colors[0];</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/>point_cols[point_pos].a<sp/>=<sp/>alpha;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>point_pos++;</highlight></codeline>
<codeline lineno="278"><highlight class="normal">}</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::Rectangle(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structcolor" kindref="compound">color</ref>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y)<sp/>{</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/>rects[rect_pos].p1.x<sp/>=<sp/>(float)x;</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/>rects[rect_pos].p1.y<sp/>=<sp/>(float)y;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/>rects[rect_pos].p1.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/>rect_pos++;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="structcolor" kindref="compound">color</ref><sp/>&gt;<sp/>col_num)</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcolor" kindref="compound">color</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/>rect_cols[rect_col_pos]<sp/>=<sp/>colors[<ref refid="structcolor" kindref="compound">color</ref>];</highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/>rect_col_pos++;</highlight></codeline>
<codeline lineno="290"><highlight class="normal">}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_qt_g_l_graphics_1a6581cba03bea25de3ae429942a9a9e11" kindref="member">QtGLGraphics::BeginScene</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/>rect_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/>line_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/>point_pos<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="296"><highlight class="normal">}</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_qt_g_l_graphics_1a4bae426be8f2e93575c1ad5d1c98e358" kindref="member">QtGLGraphics::EndScene</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/>Draw();</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/>m_context-&gt;swapBuffers(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="301"><highlight class="normal">}</highlight></codeline>
<codeline lineno="302"><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_qt_g_l_graphics_1a387013bef8531cd1e5fb803ac380be6f" kindref="member">QtGLGraphics::Line</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structcolor" kindref="compound">color</ref>)<sp/>{</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>lines[line_pos].p1.x<sp/>=<sp/>x1;</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/>lines[line_pos].p1.y<sp/>=<sp/>y1;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/>lines[line_pos].p1.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/>lines[line_pos].p2.x<sp/>=<sp/>x2;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/>lines[line_pos].p2.y<sp/>=<sp/>y2;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/>lines[line_pos].p2.z<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/>line_pos++;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/>line_cols[line_col_pos]<sp/>=<sp/>colors[<ref refid="structcolor" kindref="compound">color</ref>];</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/>line_col_pos++;</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/>line_cols[line_col_pos]<sp/>=<sp/>colors[<ref refid="structcolor" kindref="compound">color</ref>];</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/>line_col_pos++;</highlight></codeline>
<codeline lineno="317"><highlight class="normal">}</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::ReadColorTable()<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_parameter" kindref="compound">Parameter</ref><sp/>par;</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/>FILE<sp/>*fpc;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fpc<sp/>=<sp/>fopen(par.colortable,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[2000];</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>panic<sp/>in<sp/>GLGraphics::ReadColorTable\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(message,<sp/></highlight><highlight class="stringliteral">&quot;GLGraphics::ReadColorTable:<sp/>Colormap<sp/>&apos;%s&apos;<sp/>not<sp/>found.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par.colortable);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(message);</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r,<sp/>g,<sp/>b,<sp/>a;</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>EOF;</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/>col_num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fscanf(fpc,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;i)<sp/>!=<sp/>EOF<sp/>||<sp/>res<sp/>==<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>fscanf(fpc,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>&amp;r,<sp/>&amp;g,<sp/>&amp;b,<sp/>&amp;a);</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[i].r<sp/>=<sp/>(float)r<sp/>/<sp/>255.0f;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[i].g<sp/>=<sp/>(float)g<sp/>/<sp/>255.0f;</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[i].b<sp/>=<sp/>(float)b<sp/>/<sp/>255.0f;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/>colors[i].a<sp/>=<sp/>(float)a<sp/>/<sp/>255.0f;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/>col_num++;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/>fclose(fpc);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/>glBindBuffer(GL_UNIFORM_BUFFER,<sp/>coltablebuffer);</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/>glBufferData(GL_UNIFORM_BUFFER,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(colors),<sp/>colors,<sp/>GL_DYNAMIC_DRAW);</highlight></codeline>
<codeline lineno="346"><highlight class="normal">}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::Arrow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colour)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Arrows<sp/>not<sp/>implemented&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::Resize(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>w,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_parameter" kindref="compound">Parameter</ref><sp/>par;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(w<sp/>&gt;<sp/>h)<sp/>{</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>mag<sp/>=<sp/>(double)h<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)init_size_y;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/>mag<sp/>=<sp/>(double)w<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)init_size_x;</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>par.sizex<sp/>*<sp/>par.sizey;</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rects<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>rects;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>rect_cols;</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>lines;</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>line_cols;</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>points;</highlight></codeline>
<codeline lineno="367"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>point_cols;</highlight></codeline>
<codeline lineno="368"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/>rects<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structrect" kindref="compound">rect</ref>[size<sp/>*<sp/>2];</highlight></codeline>
<codeline lineno="371"><highlight class="normal"><sp/><sp/>rect_cols<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structcolor" kindref="compound">color</ref>[size<sp/>*<sp/>4];</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/>lines<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structline" kindref="compound">line</ref>[size<sp/>*<sp/>4];</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/>line_cols<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structcolor" kindref="compound">color</ref>[size<sp/>*<sp/>8];</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/>points<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structpoint" kindref="compound">point</ref>[size<sp/>*<sp/>10];</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/>point_cols<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structcolor" kindref="compound">color</ref>[size<sp/>*<sp/>10];</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/>uniform_size[0]<sp/>=<sp/>par.sizex;</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/>uniform_size[1]<sp/>=<sp/>par.sizey;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/>uniform_size[2]<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/>window_size[0]<sp/>=<sp/>init_size_x<sp/>*<sp/>mag;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/>window_size[1]<sp/>=<sp/>init_size_y<sp/>*<sp/>mag;</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/>glViewport(0,<sp/>0,<sp/>init_size_x<sp/>*<sp/>mag,<sp/>init_size_y<sp/>*<sp/>mag);</highlight></codeline>
<codeline lineno="384"><highlight class="normal">}</highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::ClearImage()<sp/>{<sp/>glClear(GL_COLOR_BUFFER_BIT);<sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::TimeStepWrap(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_parameter" kindref="compound">Parameter</ref><sp/>par;</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><ref refid="class_qt_g_l_graphics_1a958737d6039175ab8933628f9ffa177f" kindref="member">TimeStep</ref>();</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!paused)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/>t++;</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/>par.mcs)<sp/>{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="397"><highlight class="normal">}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_qt_g_l_graphics_1a618f79d7a58d03541117e4f1e2b10728" kindref="member">QtGLGraphics::GetXYCoo</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*X,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*Y)<sp/>{</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/>*X<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/>*Y<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="403"><highlight class="normal">}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>QtGLGraphics::SetupShaders()<sp/>{</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/>QOpenGLShader<sp/>basic_vert_shader(QOpenGLShader::Vertex);</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!basic_vert_shader.compileSourceFile(</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;../src/graphics/shaders/basic.vert&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/>QOpenGLShader<sp/>scaled_vert_shader(QOpenGLShader::Vertex);</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!scaled_vert_shader.compileSourceFile(</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;../src/graphics/shaders/scaled.vert&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/>QOpenGLShader<sp/>geom_shader(QOpenGLShader::Geometry);</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!geom_shader.compileSourceFile(</highlight><highlight class="stringliteral">&quot;../src/graphics/shaders/squares.geom&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/>QOpenGLShader<sp/>frag_shader(QOpenGLShader::Fragment);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!frag_shader.compileSourceFile(</highlight><highlight class="stringliteral">&quot;../src/graphics/shaders/basic.frag&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>4;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/>QOpenGLShader<sp/>densityplot_shader(QOpenGLShader::Fragment);</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!densityplot_shader.compileSourceFile(</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;../src/graphics/shaders/densityplot.frag&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>5;</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/>QOpenGLShader<sp/>intplot_shader(QOpenGLShader::Fragment);</highlight></codeline>
<codeline lineno="430"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!intplot_shader.compileSourceFile(</highlight><highlight class="stringliteral">&quot;../src/graphics/shaders/intplot.frag&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>6;</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/>QOpenGLShader<sp/>cpm_lineplot_shader(QOpenGLShader::Fragment);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cpm_lineplot_shader.compileSourceFile(</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;../src/graphics/shaders/cpmlineplot.frag&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>7;</highlight></codeline>
<codeline lineno="437"><highlight class="normal"></highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/>QOpenGLShader<sp/>contourplot_shader(QOpenGLShader::Fragment);</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!contourplot_shader.compileSourceFile(</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;../src/graphics/shaders/contourplot.frag&quot;</highlight><highlight class="normal">))</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>8;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/>basic_program.addShader(&amp;scaled_vert_shader);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/>basic_program.addShader(&amp;frag_shader);</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!basic_program.link())</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>9;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/>squares_program.addShader(&amp;scaled_vert_shader);</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/>squares_program.addShader(&amp;geom_shader);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/>squares_program.addShader(&amp;frag_shader);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!squares_program.link())</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>10;</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/>densityplot_program.addShader(&amp;basic_vert_shader);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/>densityplot_program.addShader(&amp;densityplot_shader);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!densityplot_program.link())</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>11;</highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/>intplot_program.addShader(&amp;basic_vert_shader);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/>intplot_program.addShader(&amp;intplot_shader);</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!intplot_program.link())</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>12;</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/>cpmlineplot_program.addShader(&amp;basic_vert_shader);</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/>cpmlineplot_program.addShader(&amp;cpm_lineplot_shader);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cpmlineplot_program.link())</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>13;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/>contourplot_program.addShader(&amp;basic_vert_shader);</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/>contourplot_program.addShader(&amp;contourplot_shader);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cpmlineplot_program.link())</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>14;</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="474"><highlight class="normal">}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGLGraphics::resizeEvent(QResizeEvent<sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/>qreal<sp/>new_width<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;size().width();</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>qreal<sp/>new_height<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;size().height();</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/>qreal<sp/>ratio<sp/>=<sp/>devicePixelRatio();</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/>Resize(new_width<sp/>*<sp/>ratio,<sp/>new_height<sp/>*<sp/>ratio);</highlight></codeline>
<codeline lineno="481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="482"><highlight class="normal"></highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_qt_g_l_graphics_1a094b0644d9978ef55f8c3d72ad203b6a" kindref="member">QtGLGraphics::Write</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quality)<sp/>{</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Image<sp/>writing<sp/>not<sp/>implemented!&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>std::endl;</highlight></codeline>
<codeline lineno="485"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/graphics/qtglgraph.cpp"/>
  </compounddef>
</doxygen>
