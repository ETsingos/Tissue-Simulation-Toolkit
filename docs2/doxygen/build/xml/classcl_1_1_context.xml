<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classcl_1_1_context" kind="class" language="C++" prot="public">
    <compoundname>cl::Context</compoundname>
    <basecompoundref refid="classcl_1_1detail_1_1_wrapper" prot="public" virt="non-virtual">cl::detail::Wrapper&lt; cl_context &gt;</basecompoundref>
    <includes refid="cl_8hpp" local="no">cl.hpp</includes>
    <sectiondef kind="private-static-attrib">
      <memberdef kind="variable" id="classcl_1_1_context_1afa4b07bfc74faecc954cd10c0a50ce9a" prot="private" static="yes" mutable="no">
        <type>volatile int</type>
        <definition>volatile int cl::Context::default_initialized_</definition>
        <argsstring></argsstring>
        <name>default_initialized_</name>
        <qualifiedname>cl::Context::default_initialized_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2250" column="23" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2250" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcl_1_1_context_1acd7825ba1aafa58338263d61ac11feae" prot="private" static="yes" mutable="no">
        <type><ref refid="classcl_1_1_context" kindref="compound">Context</ref></type>
        <definition>Context cl::Context::default_</definition>
        <argsstring></argsstring>
        <name>default_</name>
        <qualifiedname>cl::Context::default_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2252" column="18" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2252" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classcl_1_1_context_1a820ad6811c1c3c04d007c37c86bffcb6" prot="private" static="yes" mutable="no">
        <type>volatile cl_int</type>
        <definition>volatile cl_int cl::Context::default_error_</definition>
        <argsstring></argsstring>
        <name>default_error_</name>
        <qualifiedname>cl::Context::default_error_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2253" column="26" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2253" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classcl_1_1_context_1a1a8dcea1218d900b914d8fd86d67e336" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cl::Context::Context</definition>
        <argsstring>(const VECTOR_CLASS&lt; Device &gt; &amp;devices, cl_context_properties *properties=NULL, void(CL_CALLBACK *notifyFptr)(const char *, const void *, ::size_t, void *)=NULL, void *data=NULL, cl_int *err=NULL)</argsstring>
        <name>Context</name>
        <qualifiedname>cl::Context::Context</qualifiedname>
        <param>
          <type>const VECTOR_CLASS&lt; <ref refid="classcl_1_1_device" kindref="compound">Device</ref> &gt; &amp;</type>
          <declname>devices</declname>
        </param>
        <param>
          <type>cl_context_properties *</type>
          <declname>properties</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>void(CL_CALLBACK *notifyFptr)(const char *, const void *, ::size_t, void *)</type>
          <defval>NULL</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>cl_int *</type>
          <declname>err</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Constructs a context including a list of specified devices. </para>
        </briefdescription>
        <detaileddescription>
<para>Wraps clCreateContext(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2260" column="3" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2260" bodyend="2281"/>
      </memberdef>
      <memberdef kind="function" id="classcl_1_1_context_1aeedf0e52b8a09f230294f9c5a73b7f87" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cl::Context::Context</definition>
        <argsstring>(const Device &amp;device, cl_context_properties *properties=NULL, void(CL_CALLBACK *notifyFptr)(const char *, const void *, ::size_t, void *)=NULL, void *data=NULL, cl_int *err=NULL)</argsstring>
        <name>Context</name>
        <qualifiedname>cl::Context::Context</qualifiedname>
        <param>
          <type>const <ref refid="classcl_1_1_device" kindref="compound">Device</ref> &amp;</type>
          <declname>device</declname>
        </param>
        <param>
          <type>cl_context_properties *</type>
          <declname>properties</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>void(CL_CALLBACK *notifyFptr)(const char *, const void *, ::size_t, void *)</type>
          <defval>NULL</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>cl_int *</type>
          <declname>err</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2283" column="3" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2283" bodyend="2298"/>
      </memberdef>
      <memberdef kind="function" id="classcl_1_1_context_1a674f554c347eac35295908b529aaa382" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cl::Context::Context</definition>
        <argsstring>(cl_device_type type, cl_context_properties *properties=NULL, void(CL_CALLBACK *notifyFptr)(const char *, const void *, ::size_t, void *)=NULL, void *data=NULL, cl_int *err=NULL)</argsstring>
        <name>Context</name>
        <qualifiedname>cl::Context::Context</qualifiedname>
        <param>
          <type>cl_device_type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>cl_context_properties *</type>
          <declname>properties</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>void(CL_CALLBACK *notifyFptr)(const char *, const void *, ::size_t, void *)</type>
          <defval>NULL</defval>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>cl_int *</type>
          <declname>err</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Constructs a context including all or a subset of devices of a specified type. </para>
        </briefdescription>
        <detaileddescription>
<para>Wraps clCreateContextFromType(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2305" column="3" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2305" bodyend="2379"/>
      </memberdef>
      <memberdef kind="function" id="classcl_1_1_context_1ae0a598440f95bc8457433a088cef17a1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cl::Context::Context</definition>
        <argsstring>(const Context &amp;ctx)</argsstring>
        <name>Context</name>
        <qualifiedname>cl::Context::Context</qualifiedname>
        <param>
          <type>const <ref refid="classcl_1_1_context" kindref="compound">Context</ref> &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Copy constructor to forward copy to the superclass correctly. Required for MSVC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2384" column="3" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2384" bodyend="2384"/>
      </memberdef>
      <memberdef kind="function" id="classcl_1_1_context_1ae82122ba42017504ed23c4bb8f4471cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcl_1_1_context" kindref="compound">Context</ref> &amp;</type>
        <definition>Context &amp; cl::Context::operator=</definition>
        <argsstring>(const Context &amp;ctx)</argsstring>
        <name>operator=</name>
        <qualifiedname>cl::Context::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classcl_1_1_context" kindref="compound">Context</ref> &amp;</type>
          <declname>ctx</declname>
        </param>
        <briefdescription>
<para>Copy assignment to forward copy to the superclass correctly. Required for MSVC. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2389" column="11" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2389" bodyend="2392"/>
      </memberdef>
      <memberdef kind="function" id="classcl_1_1_context_1a8f7e1c72445ca6e249bc7a6c9278984d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>cl::Context::Context</definition>
        <argsstring>()</argsstring>
        <name>Context</name>
        <qualifiedname>cl::Context::Context</qualifiedname>
        <briefdescription>
<para>Default constructor - initializes to NULL. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2457" column="3" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2457" bodyend="2457"/>
      </memberdef>
      <memberdef kind="function" id="classcl_1_1_context_1addb62b5b7e7cfa1eafd86257603df7a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>__CL_EXPLICIT_CONSTRUCTORS</type>
        <definition>__CL_EXPLICIT_CONSTRUCTORS cl::Context::Context</definition>
        <argsstring>(const cl_context &amp;context)</argsstring>
        <name>Context</name>
        <qualifiedname>cl::Context::Context</qualifiedname>
        <param>
          <type>const cl_context &amp;</type>
          <declname>context</declname>
        </param>
        <briefdescription>
<para>Constructor from cl_context - takes ownership. </para>
        </briefdescription>
        <detaileddescription>
<para>This effectively transfers ownership of a refcount on the cl_context into the new <ref refid="classcl_1_1_context" kindref="compound">Context</ref> object. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2464" column="30" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2464" bodyend="2465"/>
      </memberdef>
      <memberdef kind="function" id="classcl_1_1_context_1a03a8dbda2ff24417f199618fc3a90568" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcl_1_1_context" kindref="compound">Context</ref> &amp;</type>
        <definition>Context &amp; cl::Context::operator=</definition>
        <argsstring>(const cl_context &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>cl::Context::operator=</qualifiedname>
        <param>
          <type>const cl_context &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Assignment operator from cl_context - takes ownership. </para>
        </briefdescription>
        <detaileddescription>
<para>This effectively transfers ownership of a refcount on the rhs and calls clReleaseContext() on the value previously held by this instance. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2472" column="11" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2472" bodyend="2475"/>
      </memberdef>
      <memberdef kind="function" id="classcl_1_1_context_1a979d15f9228089af2a657a523b1186e8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>cl_int</type>
        <definition>cl_int cl::Context::getInfo</definition>
        <argsstring>(cl_context_info name, T *param) const</argsstring>
        <name>getInfo</name>
        <qualifiedname>cl::Context::getInfo</qualifiedname>
        <param>
          <type>cl_context_info</type>
          <declname>name</declname>
        </param>
        <param>
          <type>T *</type>
          <declname>param</declname>
        </param>
        <briefdescription>
<para>Wrapper for clGetContextInfo(). </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2478" column="22" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2478" bodyend="2482"/>
      </memberdef>
      <memberdef kind="function" id="classcl_1_1_context_1a4f82642c74714a1686888bab77f69493" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>cl_int</type>
            <declname>name</declname>
            <defname>name</defname>
          </param>
        </templateparamlist>
        <type><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits</ref>&lt; detail::cl_context_info, name &gt;::param_type</type>
        <definition>detail::param_traits&lt; detail::cl_context_info, name &gt;::param_type cl::Context::getInfo</definition>
        <argsstring>(cl_int *err=NULL) const</argsstring>
        <name>getInfo</name>
        <qualifiedname>cl::Context::getInfo</qualifiedname>
        <param>
          <type>cl_int *</type>
          <declname>err</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Wrapper for clGetContextInfo() that returns by value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2487" column="3" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2487" bodyend="2495"/>
      </memberdef>
      <memberdef kind="function" id="classcl_1_1_context_1a0211b172b0d981cdb55e554574377b37" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>cl_int</type>
        <definition>cl_int cl::Context::getSupportedImageFormats</definition>
        <argsstring>(cl_mem_flags flags, cl_mem_object_type type, VECTOR_CLASS&lt; ImageFormat &gt; *formats) const</argsstring>
        <name>getSupportedImageFormats</name>
        <qualifiedname>cl::Context::getSupportedImageFormats</qualifiedname>
        <param>
          <type>cl_mem_flags</type>
          <declname>flags</declname>
        </param>
        <param>
          <type>cl_mem_object_type</type>
          <declname>type</declname>
        </param>
        <param>
          <type>VECTOR_CLASS&lt; <ref refid="structcl_1_1_image_format" kindref="compound">ImageFormat</ref> &gt; *</type>
          <declname>formats</declname>
        </param>
        <briefdescription>
<para>Gets a list of supported image formats. </para>
        </briefdescription>
        <detaileddescription>
<para>Wraps clGetSupportedImageFormats(). </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2501" column="10" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2501" bodyend="2529"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classcl_1_1_context_1ad180f6f7d8b5a95710ab72f96162b051" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classcl_1_1_context" kindref="compound">Context</ref></type>
        <definition>static Context cl::Context::getDefault</definition>
        <argsstring>(cl_int *err=NULL)</argsstring>
        <name>getDefault</name>
        <qualifiedname>cl::Context::getDefault</qualifiedname>
        <param>
          <type>cl_int *</type>
          <declname>err</declname>
          <defval>NULL</defval>
        </param>
        <briefdescription>
<para>Returns a singleton context including all devices of CL_DEVICE_TYPE_DEFAULT. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>All calls to this function return the same cl_context as the first. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2415" column="18" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2415" bodyend="2454"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Class interface for cl_context. </para>
    </briefdescription>
    <detaileddescription>
<para>Deprecated APIs for 1.2</para>
<para><simplesect kind="note"><para>Copies of these objects are shallow, meaning that the copy will refer to the same underlying cl_context as the original. For details, see clRetainContext() and clReleaseContext().</para>
</simplesect>
<simplesect kind="see"><para>cl_context </para>
</simplesect>
</para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>cl::detail::Wrapper&lt; cl_context &gt;</label>
        <link refid="classcl_1_1detail_1_1_wrapper"/>
      </node>
      <node id="1">
        <label>cl::Context</label>
        <link refid="classcl_1_1_context"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>cl::detail::Wrapper&lt; cl_context &gt;</label>
        <link refid="classcl_1_1detail_1_1_wrapper"/>
      </node>
      <node id="1">
        <label>cl::Context</label>
        <link refid="classcl_1_1_context"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="2245" column="1" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="2245" bodyend="2530"/>
    <listofallmembers>
      <member refid="classcl_1_1detail_1_1_wrapper_1a83841267bac5ad4411ec8935f78315d8" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>cl_type</name></member>
      <member refid="classcl_1_1_context_1a1a8dcea1218d900b914d8fd86d67e336" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>Context</name></member>
      <member refid="classcl_1_1_context_1aeedf0e52b8a09f230294f9c5a73b7f87" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>Context</name></member>
      <member refid="classcl_1_1_context_1a674f554c347eac35295908b529aaa382" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>Context</name></member>
      <member refid="classcl_1_1_context_1ae0a598440f95bc8457433a088cef17a1" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>Context</name></member>
      <member refid="classcl_1_1_context_1a8f7e1c72445ca6e249bc7a6c9278984d" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>Context</name></member>
      <member refid="classcl_1_1_context_1addb62b5b7e7cfa1eafd86257603df7a8" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>Context</name></member>
      <member refid="classcl_1_1_context_1acd7825ba1aafa58338263d61ac11feae" prot="private" virt="non-virtual"><scope>cl::Context</scope><name>default_</name></member>
      <member refid="classcl_1_1_context_1a820ad6811c1c3c04d007c37c86bffcb6" prot="private" virt="non-virtual"><scope>cl::Context</scope><name>default_error_</name></member>
      <member refid="classcl_1_1_context_1afa4b07bfc74faecc954cd10c0a50ce9a" prot="private" virt="non-virtual"><scope>cl::Context</scope><name>default_initialized_</name></member>
      <member refid="classcl_1_1_context_1ad180f6f7d8b5a95710ab72f96162b051" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>getDefault</name></member>
      <member refid="classcl_1_1_context_1a979d15f9228089af2a657a523b1186e8" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>getInfo</name></member>
      <member refid="classcl_1_1_context_1a4f82642c74714a1686888bab77f69493" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>getInfo</name></member>
      <member refid="classcl_1_1_context_1a0211b172b0d981cdb55e554574377b37" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>getSupportedImageFormats</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1a1292547dd0c591aa972e25b793481583" prot="protected" virt="non-virtual"><scope>cl::Context</scope><name>object_</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1a83936d9a0be85837d0d2603bce850b31" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>operator()</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1a30993cd6ba246771306e4164ce2202eb" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>operator()</name></member>
      <member refid="classcl_1_1_context_1ae82122ba42017504ed23c4bb8f4471cb" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>operator=</name></member>
      <member refid="classcl_1_1_context_1a03a8dbda2ff24417f199618fc3a90568" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>operator=</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1a49b3fcc3a16d0e2ad3295b3e38fb1bf8" prot="public" virt="non-virtual" ambiguityscope="Wrapper&lt; cl_context &gt;::"><scope>cl::Context</scope><name>operator=</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1a207374e201c6c33c01bdc7ee09e92d76" prot="protected" virt="non-virtual"><scope>cl::Context</scope><name>release</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1adfdff8a6c98ca62fedc6a9ffced47a06" prot="protected" virt="non-virtual"><scope>cl::Context</scope><name>retain</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1aa1b916a75114fe3217018378d5f1eb71" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>Wrapper</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1a514167f4ed7af4cc0ff0002bf082798f" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>Wrapper</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1af91bafdf8593c34e0d0722cdd93010be" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>Wrapper</name></member>
      <member refid="classcl_1_1detail_1_1_wrapper_1aa254b6401dc19abcc7c21d2a664cadf9" prot="public" virt="non-virtual"><scope>cl::Context</scope><name>~Wrapper</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
