<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="cl_8hpp" kind="file" language="C++">
    <compoundname>cl.hpp</compoundname>
    <includes local="no">CL/opencl.h</includes>
    <includes local="no">iterator</includes>
    <includes local="no">limits</includes>
    <includes local="no">utility</includes>
    <includes local="no">vector</includes>
    <includes local="no">string</includes>
    <includes local="no">cstring</includes>
    <includedby refid="cl__manager_8hpp" local="yes">/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl_manager.hpp</includedby>
    <incdepgraph>
      <node id="1">
        <label>/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp</label>
        <link refid="cl_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>CL/opencl.h</label>
      </node>
      <node id="8">
        <label>cstring</label>
      </node>
      <node id="3">
        <label>iterator</label>
      </node>
      <node id="4">
        <label>limits</label>
      </node>
      <node id="7">
        <label>string</label>
      </node>
      <node id="5">
        <label>utility</label>
      </node>
      <node id="6">
        <label>vector</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="4">
        <label>/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/cellular_potts/ca.hpp</label>
        <link refid="ca_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/cellular_potts/dish.hpp</label>
        <link refid="dish_8hpp_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp</label>
        <link refid="cl_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl_manager.hpp</label>
        <link refid="cl__manager_8hpp_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/graphics/x11graph.hpp</label>
        <link refid="x11graph_8hpp_source"/>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/plotting/plotter.hpp</label>
        <link refid="plotter_8hpp_source"/>
      </node>
      <node id="3">
        <label>/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/reaction_diffusion/pde.hpp</label>
        <link refid="pde_8hpp_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp</label>
        <link refid="inputoutput_8hpp_source"/>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classcl_1_1size__t" prot="public">cl::size_t</innerclass>
    <innerclass refid="structcl_1_1detail_1_1param__traits" prot="public">cl::detail::param_traits</innerclass>
    <innerclass refid="structcl_1_1detail_1_1_get_info_functor0" prot="public">cl::detail::GetInfoFunctor0</innerclass>
    <innerclass refid="structcl_1_1detail_1_1_get_info_functor1" prot="public">cl::detail::GetInfoFunctor1</innerclass>
    <innerclass refid="structcl_1_1detail_1_1_reference_handler" prot="public">cl::detail::ReferenceHandler</innerclass>
    <innerclass refid="structcl_1_1detail_1_1_reference_handler_3_01cl__device__id_01_4" prot="public">cl::detail::ReferenceHandler&lt; cl_device_id &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1_reference_handler_3_01cl__platform__id_01_4" prot="public">cl::detail::ReferenceHandler&lt; cl_platform_id &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1_reference_handler_3_01cl__context_01_4" prot="public">cl::detail::ReferenceHandler&lt; cl_context &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1_reference_handler_3_01cl__command__queue_01_4" prot="public">cl::detail::ReferenceHandler&lt; cl_command_queue &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1_reference_handler_3_01cl__mem_01_4" prot="public">cl::detail::ReferenceHandler&lt; cl_mem &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1_reference_handler_3_01cl__sampler_01_4" prot="public">cl::detail::ReferenceHandler&lt; cl_sampler &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1_reference_handler_3_01cl__program_01_4" prot="public">cl::detail::ReferenceHandler&lt; cl_program &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1_reference_handler_3_01cl__kernel_01_4" prot="public">cl::detail::ReferenceHandler&lt; cl_kernel &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1_reference_handler_3_01cl__event_01_4" prot="public">cl::detail::ReferenceHandler&lt; cl_event &gt;</innerclass>
    <innerclass refid="classcl_1_1detail_1_1_wrapper" prot="public">cl::detail::Wrapper</innerclass>
    <innerclass refid="classcl_1_1detail_1_1_wrapper_3_01cl__device__id_01_4" prot="public">cl::detail::Wrapper&lt; cl_device_id &gt;</innerclass>
    <innerclass refid="structcl_1_1_image_format" prot="public">cl::ImageFormat</innerclass>
    <innerclass refid="classcl_1_1_device" prot="public">cl::Device</innerclass>
    <innerclass refid="classcl_1_1_platform" prot="public">cl::Platform</innerclass>
    <innerclass refid="classcl_1_1_context" prot="public">cl::Context</innerclass>
    <innerclass refid="classcl_1_1_event" prot="public">cl::Event</innerclass>
    <innerclass refid="classcl_1_1_memory" prot="public">cl::Memory</innerclass>
    <innerclass refid="classcl_1_1_buffer" prot="public">cl::Buffer</innerclass>
    <innerclass refid="classcl_1_1_buffer_g_l" prot="public">cl::BufferGL</innerclass>
    <innerclass refid="classcl_1_1_image" prot="public">cl::Image</innerclass>
    <innerclass refid="classcl_1_1_image2_d" prot="public">cl::Image2D</innerclass>
    <innerclass refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d" prot="public">cl::CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED</innerclass>
    <innerclass refid="classcl_1_1_image3_d" prot="public">cl::Image3D</innerclass>
    <innerclass refid="classcl_1_1_image3_d_g_l" prot="public">cl::Image3DGL</innerclass>
    <innerclass refid="classcl_1_1_buffer_render_g_l" prot="public">cl::BufferRenderGL</innerclass>
    <innerclass refid="classcl_1_1_sampler" prot="public">cl::Sampler</innerclass>
    <innerclass refid="classcl_1_1_n_d_range" prot="public">cl::NDRange</innerclass>
    <innerclass refid="structcl_1_1_local_space_arg" prot="public">cl::LocalSpaceArg</innerclass>
    <innerclass refid="structcl_1_1detail_1_1_kernel_argument_handler" prot="public">cl::detail::KernelArgumentHandler</innerclass>
    <innerclass refid="structcl_1_1detail_1_1_kernel_argument_handler_3_01_local_space_arg_01_4" prot="public">cl::detail::KernelArgumentHandler&lt; LocalSpaceArg &gt;</innerclass>
    <innerclass refid="classcl_1_1_kernel" prot="public">cl::Kernel</innerclass>
    <innerclass refid="classcl_1_1_program" prot="public">cl::Program</innerclass>
    <innerclass refid="classcl_1_1_command_queue" prot="public">cl::CommandQueue</innerclass>
    <innerclass refid="structcl_1_1_enqueue_args" prot="public">cl::EnqueueArgs</innerclass>
    <innerclass refid="classcl_1_1detail_1_1_null_type" prot="public">cl::detail::NullType</innerclass>
    <innerclass refid="structcl_1_1detail_1_1_set_arg" prot="public">cl::detail::SetArg</innerclass>
    <innerclass refid="structcl_1_1detail_1_1_set_arg_3_01index_00_01_null_type_01_4" prot="public">cl::detail::SetArg&lt; index, NullType &gt;</innerclass>
    <innerclass refid="classcl_1_1detail_1_1_kernel_functor_global" prot="public">cl::detail::KernelFunctorGlobal</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation__" prot="public">cl::detail::functionImplementation_</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c65074b0edbb49358e494dfca85f0c4d" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_016dc3ed96ba5604ff44fcbf4b70904a7" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_09ad22bbf5ec3ff70ca85c82a81e894f3" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0e1f9ed5f4bce0fed2eecd96819eff69e" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c47d12039c820db328a1eb63adda7dc4" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0e699f6bc32f983b3dbb8601694ad8716" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0668421b95c44ac124458f5794d45ce5e" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c335c66f80959dbf15472be3368b9f32" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_007aded1c077ceb6e7341ec85b07f2202" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_06ff88417591e76ae209bc743223d075b" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_00bc8656c3a21dfb23f2db05466d0084e" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_02e0397b86d637b2eb2a2a27639d3bd7d" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c5bdccff2376c4e65dbf601be0a7d291" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0b692e5b42534b75f77dc62bd45d4471c" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0119b80031f65e66cb6a7049f63e61995" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0347a34949d711676b9580bc54b90fb9e" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_06b4e7d4700ed92d76c6033b21bb53426" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_07da793da861de6efda0c5ef013668aba" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0693a344374e1cc729d7d642c217c4797" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0952ecc33088879a029d823fdb28962a5" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_001b475499b44e3884ba4869520ff4a4f" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_049502b85b2c12b1b9e46020af86a2a36" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, T9, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0fe84ead02d0bcd4c779244e8a11c91be" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, T8, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_058a052ff7523a323b0c36bc04be41ac1" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, T7, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_04e32c1313cc6d5853648e79e341a9b95" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, T6, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_07150edefd2e3c81ea19f3a59d5afeda0" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, T5, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_02e2d91f43b17caee4c85e0cfe480cf6b" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, T4, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_null_tye7e91080ec5381eb86b6dad1933db8ee" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, T3, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_null_type_00_01_3c1dd53f417d820e8e7f79e0e6e43940" prot="public">cl::detail::functionImplementation_&lt; T0, T1, T2, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_null_type_00_01_null_type976790afb6cd43a46b477dbaa6c37690" prot="public">cl::detail::functionImplementation_&lt; T0, T1, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_null_type_00_01_null_type_00_01_nuef9440cf872cfa49206345aec55f09ad" prot="public">cl::detail::functionImplementation_&lt; T0, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType, NullType &gt;</innerclass>
    <innerclass refid="structcl_1_1make__kernel" prot="public">cl::make_kernel</innerclass>
    <innernamespace refid="namespacecl">cl</innernamespace>
    <innernamespace refid="namespacecl_1_1detail">cl::detail</innernamespace>
    <sectiondef kind="define">
      <memberdef kind="define" id="cl_8hpp_1a9a444a6626b732628bf232475b91452c" prot="public" static="no">
        <name>CL_HPP_NOEXCEPT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="183" column="10" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cl_8hpp_1a891b548a150521bcb596c565c617977d" prot="public" static="no">
        <name>__CL_EXPLICIT_CONSTRUCTORS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="192" column="9" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="192" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cl_8hpp_1a728359ddaf60ae8d916bab10bf7ae7e7" prot="public" static="no">
        <name>CL_EXT_PREFIX__VERSION_1_1_DEPRECATED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="198" column="9" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="198" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cl_8hpp_1a6efde763d2d8686911e04372386b910a" prot="public" static="no">
        <name>CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="201" column="9" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cl_8hpp_1a193b43da2ce23c54788f9b4d4f0f4740" prot="public" static="no">
        <name>CL_CALLBACK</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="205" column="9" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cl_8hpp_1abf26da0c7abac1bb1f7b1519a663ce90" prot="public" static="no">
        <name>__ERR_STR</name>
        <param><defname>x</defname></param>
        <initializer>NULL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="315" column="10" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="315" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cl_8hpp_1a15193d01246ba1dbf4b93e4066b1b28d" prot="public" static="no">
        <name>VECTOR_CLASS</name>
        <initializer>std::vector</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="621" column="9" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="621" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cl_8hpp_1abd822f3fd76b80e2f0ee89060f45e5f9" prot="public" static="no">
        <name>__DEFAULT_NOT_INITIALIZED</name>
        <initializer>1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="921" column="9" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="921" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cl_8hpp_1abde3e147be4a0272f583a3c0b7e35ee1" prot="public" static="no">
        <name>__DEFAULT_BEING_INITIALIZED</name>
        <initializer>2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="922" column="9" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="922" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cl_8hpp_1a8f41aa0f7398f2f22a4cf5839c09220e" prot="public" static="no">
        <name>__DEFAULT_INITIALIZED</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="923" column="9" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="923" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="cl_8hpp_1ac0e9a5d4b98113796b98ab938aab3b47" prot="public" static="no">
        <name>__PARAM_NAME_INFO_1_0</name>
        <param><defname>F</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="1149" column="9" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="1149" bodyend="1271"/>
      </memberdef>
      <memberdef kind="define" id="cl_8hpp_1a32e1039c50825f8b1a0d2179bab9e5f4" prot="public" static="no">
        <name>__CL_DECLARE_PARAM_TRAITS</name>
        <param><defname>token</defname></param>
        <param><defname>param_name</defname></param>
        <param><defname>T</defname></param>
        <initializer>  struct token;                                                                \
  template &lt;&gt; struct param_traits&lt;detail::token, param_name&gt; {                 \
    enum { value = param_name };                                               \
    typedef T param_type;                                                      \
  };</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" line="1345" column="9" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp" bodystart="1345" bodyend="1350"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>C++ bindings for OpenCL 1.0 (rev 48), OpenCL 1.1 (rev 33) and OpenCL 1.2 (rev 15) </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Benedict R. Gaster, Laurent Morichetti and Lee Howes</para>
</simplesect>
Additions and fixes from: Brian Cole, March 3rd 2010 and April 2012 Matt Gruenke, April 2012. Bruce Merry, February 2013. Tom Deakin and Simon McIntosh-Smith, July 2013</para>
<para><simplesect kind="version"><para>1.2.8 </para>
</simplesect>
<simplesect kind="date"><para>October 2015</para>
</simplesect>
Optional extension support <verbatim>  cl
  cl_ext_device_fission
       #define USE_CL_DEVICE_FISSION
</verbatim> </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*******************************************************************************</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2008-2015<sp/>The<sp/>Khronos<sp/>Group<sp/>Inc.</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Permission<sp/>is<sp/>hereby<sp/>granted,<sp/>free<sp/>of<sp/>charge,<sp/>to<sp/>any<sp/>person<sp/>obtaining<sp/>a</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>copy<sp/>of<sp/>this<sp/>software<sp/>and/or<sp/>associated<sp/>documentation<sp/>files<sp/>(the</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>&quot;Materials&quot;),<sp/>to<sp/>deal<sp/>in<sp/>the<sp/>Materials<sp/>without<sp/>restriction,<sp/>including</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/>without<sp/>limitation<sp/>the<sp/>rights<sp/>to<sp/>use,<sp/>copy,<sp/>modify,<sp/>merge,<sp/>publish,</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/>distribute,<sp/>sublicense,<sp/>and/or<sp/>sell<sp/>copies<sp/>of<sp/>the<sp/>Materials,<sp/>and<sp/>to</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*<sp/>permit<sp/>persons<sp/>to<sp/>whom<sp/>the<sp/>Materials<sp/>are<sp/>furnished<sp/>to<sp/>do<sp/>so,<sp/>subject<sp/>to</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/>the<sp/>following<sp/>conditions:</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/>The<sp/>above<sp/>copyright<sp/>notice<sp/>and<sp/>this<sp/>permission<sp/>notice<sp/>shall<sp/>be<sp/>included</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/>in<sp/>all<sp/>copies<sp/>or<sp/>substantial<sp/>portions<sp/>of<sp/>the<sp/>Materials.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/>THE<sp/>MATERIALS<sp/>ARE<sp/>PROVIDED<sp/>&quot;AS<sp/>IS&quot;,<sp/>WITHOUT<sp/>WARRANTY<sp/>OF<sp/>ANY<sp/>KIND,</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/>EXPRESS<sp/>OR<sp/>IMPLIED,<sp/>INCLUDING<sp/>BUT<sp/>NOT<sp/>LIMITED<sp/>TO<sp/>THE<sp/>WARRANTIES<sp/>OF</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>MERCHANTABILITY,<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE<sp/>AND<sp/>NONINFRINGEMENT.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>IN<sp/>NO<sp/>EVENT<sp/>SHALL<sp/>THE<sp/>AUTHORS<sp/>OR<sp/>COPYRIGHT<sp/>HOLDERS<sp/>BE<sp/>LIABLE<sp/>FOR<sp/>ANY</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>CLAIM,<sp/>DAMAGES<sp/>OR<sp/>OTHER<sp/>LIABILITY,<sp/>WHETHER<sp/>IN<sp/>AN<sp/>ACTION<sp/>OF<sp/>CONTRACT,</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>TORT<sp/>OR<sp/>OTHERWISE,<sp/>ARISING<sp/>FROM,<sp/>OUT<sp/>OF<sp/>OR<sp/>IN<sp/>CONNECTION<sp/>WITH<sp/>THE</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>MATERIALS<sp/>OR<sp/>THE<sp/>USE<sp/>OR<sp/>OTHER<sp/>DEALINGS<sp/>IN<sp/>THE<sp/>MATERIALS.</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>******************************************************************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>CL_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CL_HPP_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;malloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_DX_INTEROP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CL/cl_d3d10.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CL/cl_dx9_media_sharing.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;intrin.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">//</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_CL_DEVICE_FISSION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CL/cl_ext.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__APPLE__)<sp/>||<sp/>defined(__MACOSX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;OpenCL/opencl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;CL/opencl.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!__APPLE__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(_MSC_VER<sp/>&gt;=<sp/>1700)<sp/>||<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CL_HPP_RVALUE_REFERENCES_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(__cplusplus<sp/>&gt;=<sp/>201103L)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CL_HPP_NOEXCEPT<sp/>noexcept</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CL_HPP_NOEXCEPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">//<sp/>To<sp/>avoid<sp/>accidentally<sp/>taking<sp/>ownership<sp/>of<sp/>core<sp/>OpenCL<sp/>types</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="comment">//<sp/>such<sp/>as<sp/>cl_kernel<sp/>constructors<sp/>are<sp/>made<sp/>explicit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="comment">//<sp/>under<sp/>OpenCL<sp/>1.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)<sp/>&amp;&amp;<sp/>!defined(CL_USE_DEPRECATED_OPENCL_1_1_APIS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/>explicit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_USE_DEPRECATED_OPENCL_1_1_APIS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CL_EXPLICIT_CONSTRUCTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_USE_DEPRECATED_OPENCL_1_1_APIS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Define<sp/>deprecated<sp/>prefixes<sp/>and<sp/>suffixes<sp/>to<sp/>ensure<sp/>compilation</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>they<sp/>are<sp/>not<sp/>pre-defined</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(CL_EXT_PREFIX__VERSION_1_1_DEPRECATED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CL_EXT_PREFIX__VERSION_1_1_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>!defined(CL_EXT_PREFIX__VERSION_1_1_DEPRECATED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>!defined(CL_EXT_PREFIX__VERSION_1_1_DEPRECATED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(CL_CALLBACK)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CL_CALLBACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>CL_CALLBACK</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iterator&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;limits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;utility&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__CL_ENABLE_EXCEPTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;exception&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(__CL_ENABLE_EXCEPTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__NO_STD_VECTOR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__NO_STD_STRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__ANDROID__)<sp/>||<sp/>defined(linux)<sp/>||<sp/>defined(__APPLE__)<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="225"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>defined(__MACOSX)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;alloca.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>linux</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacecl" kindref="compound">cl</ref><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Memory;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_USE_DEPRECATED_OPENCL_1_1_APIS)<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(defined(CL_VERSION_1_1)<sp/>&amp;&amp;<sp/>!defined(CL_VERSION_1_2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__INIT_CL_EXT_FCN_PTR(name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="246"><highlight class="preprocessor"><sp/><sp/>if<sp/>(!pfn_##name)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>pfn_##name<sp/>=<sp/>(PFN_##name)clGetExtensionFunctionAddress(#name);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="248"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!pfn_##name)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="249"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__INIT_CL_EXT_FCN_PTR_PLATFORM(platform,<sp/>name)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor"><sp/><sp/>if<sp/>(!pfn_##name)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>pfn_##name<sp/>=<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(PFN_##name)clGetExtensionFunctionAddressForPlatform(platform,<sp/>#name);<sp/>\</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(!pfn_##name)<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="259"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="260"><highlight class="preprocessor"><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Program;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Device;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Context;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CommandQueue;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Memory;</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Buffer;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__CL_ENABLE_EXCEPTIONS)</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Error<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>std::exception<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/>cl_int<sp/>err_;</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errStr_;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/>Error(cl_int<sp/>err,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errStr<sp/>=<sp/>NULL)<sp/>:<sp/>err_(err),<sp/>errStr_(errStr)<sp/>{}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/>~Error()<sp/>throw()<sp/>{}</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*what()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>throw()<sp/>{</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errStr_<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;empty&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>errStr_;</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/>cl_int<sp/>err(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err_;<sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal">};</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ERR_STR(x)<sp/>#x</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ERR_STR(x)<sp/>NULL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>__CL_ENABLE_EXCEPTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__CL_ENABLE_EXCEPTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>errHandler(cl_int<sp/>err,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errStr<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/>Error(err,<sp/>errStr);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>errHandler(cl_int<sp/>err,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*errStr<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/>(void)errStr;<sp/></highlight><highlight class="comment">//<sp/>suppress<sp/>unused<sp/>variable<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="330"><highlight class="normal">}</highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>__CL_ENABLE_EXCEPTIONS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="preprocessor">#if<sp/>!defined(__CL_USER_OVERRIDE_ERROR_STRINGS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_DEVICE_INFO_ERR<sp/>__ERR_STR(clGetDeviceInfo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_PLATFORM_INFO_ERR<sp/>__ERR_STR(clGetPlatformInfo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_DEVICE_IDS_ERR<sp/>__ERR_STR(clGetDeviceIDs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="339"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_PLATFORM_IDS_ERR<sp/>__ERR_STR(clGetPlatformIDs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_CONTEXT_INFO_ERR<sp/>__ERR_STR(clGetContextInfo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_EVENT_INFO_ERR<sp/>__ERR_STR(clGetEventInfo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_EVENT_PROFILE_INFO_ERR<sp/>__ERR_STR(clGetEventProfileInfo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_MEM_OBJECT_INFO_ERR<sp/>__ERR_STR(clGetMemObjectInfo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_IMAGE_INFO_ERR<sp/>__ERR_STR(clGetImageInfo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_SAMPLER_INFO_ERR<sp/>__ERR_STR(clGetSamplerInfo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_KERNEL_INFO_ERR<sp/>__ERR_STR(clGetKernelInfo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_KERNEL_ARG_INFO_ERR<sp/>__ERR_STR(clGetKernelArgInfo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_KERNEL_WORK_GROUP_INFO_ERR<sp/>__ERR_STR(clGetKernelWorkGroupInfo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_PROGRAM_INFO_ERR<sp/>__ERR_STR(clGetProgramInfo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_PROGRAM_BUILD_INFO_ERR<sp/>__ERR_STR(clGetProgramBuildInfo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_COMMAND_QUEUE_INFO_ERR<sp/>__ERR_STR(clGetCommandQueueInfo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_CONTEXT_ERR<sp/>__ERR_STR(clCreateContext)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_CONTEXT_FROM_TYPE_ERR<sp/>__ERR_STR(clCreateContextFromType)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_SUPPORTED_IMAGE_FORMATS_ERR<sp/>__ERR_STR(clGetSupportedImageFormats)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_BUFFER_ERR<sp/>__ERR_STR(clCreateBuffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__COPY_ERR<sp/>__ERR_STR(cl::copy)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_SUBBUFFER_ERR<sp/>__ERR_STR(clCreateSubBuffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_GL_BUFFER_ERR<sp/>__ERR_STR(clCreateFromGLBuffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="363"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_GL_RENDER_BUFFER_ERR<sp/>__ERR_STR(clCreateFromGLBuffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__GET_GL_OBJECT_INFO_ERR<sp/>__ERR_STR(clGetGLObjectInfo)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="366"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_IMAGE_ERR<sp/>__ERR_STR(clCreateImage)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_GL_TEXTURE_ERR<sp/>__ERR_STR(clCreateFromGLTexture)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__IMAGE_DIMENSION_ERR<sp/>__ERR_STR(Incorrect<sp/>image<sp/>dimensions)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="369"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_SAMPLER_ERR<sp/>__ERR_STR(clCreateSampler)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SET_MEM_OBJECT_DESTRUCTOR_CALLBACK_ERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="372"><highlight class="preprocessor"><sp/><sp/>__ERR_STR(clSetMemObjectDestructorCallback)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_USER_EVENT_ERR<sp/>__ERR_STR(clCreateUserEvent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="375"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SET_USER_EVENT_STATUS_ERR<sp/>__ERR_STR(clSetUserEventStatus)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SET_EVENT_CALLBACK_ERR<sp/>__ERR_STR(clSetEventCallback)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__WAIT_FOR_EVENTS_ERR<sp/>__ERR_STR(clWaitForEvents)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="378"><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_KERNEL_ERR<sp/>__ERR_STR(clCreateKernel)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SET_KERNEL_ARGS_ERR<sp/>__ERR_STR(clSetKernelArg)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_PROGRAM_WITH_SOURCE_ERR<sp/>__ERR_STR(clCreateProgramWithSource)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_PROGRAM_WITH_BINARY_ERR<sp/>__ERR_STR(clCreateProgramWithBinary)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_PROGRAM_WITH_BUILT_IN_KERNELS_ERR<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="385"><highlight class="preprocessor"><sp/><sp/>__ERR_STR(clCreateProgramWithBuiltInKernels)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__BUILD_PROGRAM_ERR<sp/>__ERR_STR(clBuildProgram)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__COMPILE_PROGRAM_ERR<sp/>__ERR_STR(clCompileProgram)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__LINK_PROGRAM_ERR<sp/>__ERR_STR(clLinkProgram)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_KERNELS_IN_PROGRAM_ERR<sp/>__ERR_STR(clCreateKernelsInProgram)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_COMMAND_QUEUE_ERR<sp/>__ERR_STR(clCreateCommandQueue)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SET_COMMAND_QUEUE_PROPERTY_ERR<sp/>__ERR_STR(clSetCommandQueueProperty)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_READ_BUFFER_ERR<sp/>__ERR_STR(clEnqueueReadBuffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_READ_BUFFER_RECT_ERR<sp/>__ERR_STR(clEnqueueReadBufferRect)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_WRITE_BUFFER_ERR<sp/>__ERR_STR(clEnqueueWriteBuffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_WRITE_BUFFER_RECT_ERR<sp/>__ERR_STR(clEnqueueWriteBufferRect)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQEUE_COPY_BUFFER_ERR<sp/>__ERR_STR(clEnqueueCopyBuffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQEUE_COPY_BUFFER_RECT_ERR<sp/>__ERR_STR(clEnqueueCopyBufferRect)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_FILL_BUFFER_ERR<sp/>__ERR_STR(clEnqueueFillBuffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_READ_IMAGE_ERR<sp/>__ERR_STR(clEnqueueReadImage)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_WRITE_IMAGE_ERR<sp/>__ERR_STR(clEnqueueWriteImage)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_COPY_IMAGE_ERR<sp/>__ERR_STR(clEnqueueCopyImage)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_FILL_IMAGE_ERR<sp/>__ERR_STR(clEnqueueFillImage)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="407"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_COPY_IMAGE_TO_BUFFER_ERR<sp/>__ERR_STR(clEnqueueCopyImageToBuffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_COPY_BUFFER_TO_IMAGE_ERR<sp/>__ERR_STR(clEnqueueCopyBufferToImage)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_MAP_BUFFER_ERR<sp/>__ERR_STR(clEnqueueMapBuffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_MAP_IMAGE_ERR<sp/>__ERR_STR(clEnqueueMapImage)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_UNMAP_MEM_OBJECT_ERR<sp/>__ERR_STR(clEnqueueUnMapMemObject)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_NDRANGE_KERNEL_ERR<sp/>__ERR_STR(clEnqueueNDRangeKernel)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_TASK_ERR<sp/>__ERR_STR(clEnqueueTask)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="414"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_NATIVE_KERNEL<sp/>__ERR_STR(clEnqueueNativeKernel)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_MIGRATE_MEM_OBJECTS_ERR<sp/>__ERR_STR(clEnqueueMigrateMemObjects)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_ACQUIRE_GL_ERR<sp/>__ERR_STR(clEnqueueAcquireGLObjects)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_RELEASE_GL_ERR<sp/>__ERR_STR(clEnqueueReleaseGLObjects)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__RETAIN_ERR<sp/>__ERR_STR(Retain<sp/>Object)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__RELEASE_ERR<sp/>__ERR_STR(Release<sp/>Object)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__FLUSH_ERR<sp/>__ERR_STR(clFlush)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__FINISH_ERR<sp/>__ERR_STR(clFinish)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__VECTOR_CAPACITY_ERR<sp/>__ERR_STR(Vector<sp/>capacity<sp/>error)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_SUB_DEVICES<sp/>__ERR_STR(clCreateSubDevices)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_SUB_DEVICES<sp/>__ERR_STR(clCreateSubDevicesEXT)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="435"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_USE_DEPRECATED_OPENCL_1_1_APIS)<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="441"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(defined(CL_VERSION_1_1)<sp/>&amp;&amp;<sp/>!defined(CL_VERSION_1_2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="442"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_MARKER_ERR<sp/>__ERR_STR(clEnqueueMarker)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_WAIT_FOR_EVENTS_ERR<sp/>__ERR_STR(clEnqueueWaitForEvents)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_BARRIER_ERR<sp/>__ERR_STR(clEnqueueBarrier)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__UNLOAD_COMPILER_ERR<sp/>__ERR_STR(clUnloadCompiler)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_GL_TEXTURE_2D_ERR<sp/>__ERR_STR(clCreateFromGLTexture2D)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_GL_TEXTURE_3D_ERR<sp/>__ERR_STR(clCreateFromGLTexture3D)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_IMAGE2D_ERR<sp/>__ERR_STR(clCreateImage2D)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CREATE_IMAGE3D_ERR<sp/>__ERR_STR(clCreateImage3D)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>__CL_USER_OVERRIDE_ERROR_STRINGS</highlight></codeline>
<codeline lineno="454"></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_MARKER_WAIT_LIST_ERR<sp/>__ERR_STR(clEnqueueMarkerWithWaitList)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__ENQUEUE_BARRIER_WAIT_LIST_ERR<sp/>__ERR_STR(clEnqueueBarrierWithWaitList)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__USE_DEV_STRING)<sp/>&amp;&amp;<sp/>!defined(__NO_STD_STRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464" refid="namespacecl_1ad3ff55c5fe80ec84842876af323559c7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::string<sp/><ref refid="namespacecl_1ad3ff55c5fe80ec84842876af323559c7" kindref="member">STRING_CLASS</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>!defined(__USE_DEV_STRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CL_EXT_PREFIX__VERSION_1_1_DEPRECATED<sp/>string</highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d" kindref="compound">CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED</ref><sp/>{</highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/>::size_t<sp/>size_;</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str_;</highlight></codeline>
<codeline lineno="480"><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/>string(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>:<sp/>size_(0),<sp/>str_(NULL)<sp/>{}</highlight></codeline>
<codeline lineno="484"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/>string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str,<sp/>::size_t<sp/>size)<sp/>:<sp/>size_(size),<sp/>str_(NULL)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[size_<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(str_,<sp/>str,<sp/>size_<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str_[size_]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/>string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*str)<sp/>:<sp/>size_(0),<sp/>str_(NULL)<sp/>{</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str)<sp/>{</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size_<sp/>=<sp/>::strlen(str);</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[size_<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(str_,<sp/>str,<sp/>(size_<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize(::size_t<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_<sp/>==<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_)<sp/>{</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>str_;</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*newString<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[n<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>copySize<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_<sp/>&lt;<sp/>n)<sp/>{</highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>copySize<sp/>=<sp/>size_;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size_<sp/>=<sp/>n;</highlight></codeline>
<codeline lineno="542"><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_)<sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(newString,<sp/>str_,<sp/>(copySize<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(copySize<sp/>&lt;<sp/>size_)<sp/>{</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(newString<sp/>+<sp/>copySize,<sp/>0,<sp/>size_<sp/>-<sp/>copySize);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newString[size_]<sp/>=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>str_;</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str_<sp/>=<sp/>newString;</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>&amp;operator[](::size_t<sp/>pos)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str_[pos];<sp/>}</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>&amp;operator[](::size_t<sp/>pos)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>str_[pos];<sp/>}</highlight></codeline>
<codeline lineno="559"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>str_;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rhs.size_<sp/>==<sp/>0<sp/>||<sp/>rhs.str_<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>str_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[rhs.size_<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size_<sp/>=<sp/>rhs.size_;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(str_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(str_,<sp/>rhs.str_,<sp/>(size_<sp/>+<sp/>1)<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="590"><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/>string(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;rhs)<sp/>:<sp/>size_(0),<sp/>str_(NULL)<sp/>{<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>=<sp/>rhs;<sp/>}</highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/>~string()<sp/>{</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[]<sp/>str_;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/>str_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/>::size_t<sp/>size(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size_;<sp/>}</highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/>::size_t<sp/>length(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size();<sp/>}</highlight></codeline>
<codeline lineno="611"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*c_str(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(str_)<sp/>?<sp/>str_<sp/>:<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="616"><highlight class="normal">};</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>cl::string<sp/><ref refid="namespacecl_1ad3ff55c5fe80ec84842876af323559c7" kindref="member">STRING_CLASS</ref>;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#elif<sp/>!defined(__USE_DEV_STRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="619"><highlight class="normal"></highlight></codeline>
<codeline lineno="620"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__USE_DEV_VECTOR)<sp/>&amp;&amp;<sp/>!defined(__NO_STD_VECTOR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VECTOR_CLASS<sp/>std::vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>!defined(__USE_DEV_VECTOR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>VECTOR_CLASS<sp/>cl::vector</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__MAX_DEFAULT_VECTOR_SIZE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__MAX_DEFAULT_VECTOR_SIZE<sp/>10</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="627"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N<sp/>=<sp/>__MAX_DEFAULT_VECTOR_SIZE&gt;</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CL_EXT_PREFIX__VERSION_1_1_DEPRECATED<sp/>vector<sp/>{</highlight></codeline>
<codeline lineno="653"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/>T<sp/>data_[N];</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size_;</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/>vector()<sp/>:<sp/>size_(static_cast&lt;unsigned<sp/>int&gt;(0))<sp/>{}</highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/>~vector()<sp/>{<sp/>clear();<sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size_;<sp/>}</highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>clear()<sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!empty())<sp/>{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>pop_back();</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>push_back(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;x)<sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size()<sp/>&lt;<sp/>N)<sp/>{</highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(&amp;data_[size_])<sp/>T(x);</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>size_++;</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(CL_MEM_OBJECT_ALLOCATION_FAILURE,</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VECTOR_CAPACITY_ERR);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>pop_back(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--size_;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_[size_].~T();</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(CL_MEM_OBJECT_ALLOCATION_FAILURE,</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VECTOR_CAPACITY_ERR);</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/>vector(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;T,<sp/>N&gt;<sp/>&amp;vec)<sp/>:<sp/>size_(vec.size_)<sp/>{</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size_<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assign(vec.begin(),<sp/>vec.end());</highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/>vector(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;val<sp/>=<sp/>T())<sp/>:<sp/>size_(0)<sp/>{</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>push_back(val);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/>vector&lt;T,<sp/>N&gt;<sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;T,<sp/>N&gt;<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rhs.size_<sp/>!=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assign(rhs.begin(),<sp/>rhs.end());</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="745"><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(vector&lt;T,<sp/>N&gt;<sp/>&amp;vec)<sp/>{</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size()<sp/>!=<sp/>vec.size())<sp/>{</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">operator</highlight><highlight class="normal">[](i)<sp/>!=<sp/>vec[i])<sp/>{</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>T<sp/>*()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_;<sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_;<sp/>}</highlight></codeline>
<codeline lineno="771"><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>empty(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>size_<sp/>==<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_size(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>N;<sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>capacity()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>N;<sp/>}</highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>resize(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newSize,<sp/>T<sp/>fill<sp/>=<sp/>T())<sp/>{</highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(newSize<sp/>&gt;<sp/>N)<sp/>{</highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(CL_MEM_OBJECT_ALLOCATION_FAILURE,</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__VECTOR_CAPACITY_ERR);</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(size_<sp/>&lt;<sp/>newSize)<sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>(&amp;data_[size_])<sp/>T(fill);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size_++;</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(size_<sp/>&gt;<sp/>newSize)<sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--size_;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data_[size_].~T();</highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="797"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/>T<sp/>&amp;operator[](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[index];<sp/>}</highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;operator[](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[index];<sp/>}</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>I&gt;<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>assign(I<sp/>start,<sp/>I<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/>clear();</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(start<sp/>!=<sp/>end)<sp/>{</highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>push_back(*start);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>start++;</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="830"><highlight class="normal"></highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">iterator<sp/>{</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;T,<sp/>N&gt;<sp/>*vec_;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index_;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"></highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>vector&lt;T,<sp/>N&gt;<sp/>&amp;vec,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>:<sp/>vec_(&amp;vec)<sp/>{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!vec.empty())<sp/>{</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_<sp/>=<sp/>index;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>index_<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="851"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>:<sp/>index_(-1),<sp/>vec_(NULL)<sp/>{}</highlight></codeline>
<codeline lineno="854"><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>iterator<sp/>&amp;rhs)<sp/>:<sp/>vec_(rhs.vec_),<sp/>index_(rhs.index_)<sp/>{}</highlight></codeline>
<codeline lineno="856"><highlight class="normal"></highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/>~iterator(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="858"><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>iterator<sp/>begin(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl::vector&lt;T,<sp/>N&gt;<sp/>&amp;vec)<sp/>{</highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/>i(vec,<sp/>0);</highlight></codeline>
<codeline lineno="861"><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="864"><highlight class="normal"></highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>iterator<sp/>end(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl::vector&lt;T,<sp/>N&gt;<sp/>&amp;vec)<sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/>i(vec,<sp/>vec.size());</highlight></codeline>
<codeline lineno="867"><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator==(iterator<sp/>i)<sp/>{</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>((vec_<sp/>==<sp/>i.vec_)<sp/>&amp;&amp;<sp/>(index_<sp/>==<sp/>i.index_));</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="874"><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>operator!=(iterator<sp/>i)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(!(*</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>==<sp/>i));<sp/>}</highlight></codeline>
<codeline lineno="876"><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/>&amp;operator++()<sp/>{</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++index_;</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/>operator++(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/>retVal(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>++index_;</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="887"><highlight class="normal"></highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/>&amp;operator--()<sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--index_;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="892"><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/>iterator<sp/>operator--(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>iterator<sp/>retVal(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>--index_;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;operator*()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*vec_)[index_];<sp/>}</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="901"><highlight class="normal"></highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/>iterator<sp/>begin(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator::begin(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="903"><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/>iterator<sp/>begin(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator::begin(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/>iterator<sp/>end(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator::end(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="907"><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/>iterator<sp/>end(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>iterator::end(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/>T<sp/>&amp;front(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[0];<sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/>T<sp/>&amp;back(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[size_];<sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;front(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[0];<sp/>}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;back(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[size_<sp/>-<sp/>1];<sp/>}</highlight></codeline>
<codeline lineno="917"><highlight class="normal">}<sp/>CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED;</highlight></codeline>
<codeline lineno="918"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>!defined(__USE_DEV_VECTOR)<sp/>&amp;&amp;<sp/>!defined(__NO_STD_VECTOR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="919"><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__DEFAULT_NOT_INITIALIZED<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__DEFAULT_BEING_INITIALIZED<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__DEFAULT_INITIALIZED<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="926"><highlight class="comment"><sp/>*<sp/>Compare<sp/>and<sp/>exchange<sp/>primitives<sp/>are<sp/>needed<sp/>for<sp/>handling<sp/>of<sp/>defaults</highlight></codeline>
<codeline lineno="927"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compare_exchange(std::atomic&lt;int&gt;<sp/>*dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exchange,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comparand)</highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>compare_exchange(</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*dest,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>exchange,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>comparand)</highlight></codeline>
<codeline lineno="933"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal">{</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/>std::atomic_compare_exchange_strong(dest,<sp/>&amp;comparand,<sp/>exchange);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>comparand;</highlight></codeline>
<codeline lineno="938"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_MSC_VER</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)(_InterlockedCompareExchange((</highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>*)dest,</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)exchange,<sp/>(</highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)comparand));</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>!_MSC_VER<sp/>&amp;&amp;<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(__sync_val_compare_and_swap(dest,<sp/>comparand,<sp/>exchange));</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal">}</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>fence()<sp/>{</highlight></codeline>
<codeline lineno="947"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/>std::atomic_thread_fence(std::memory_order_seq_cst);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>_MSC_VER<sp/></highlight><highlight class="comment">//<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/>_ReadWriteBarrier();</highlight></codeline>
<codeline lineno="951"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>!_MSC_VER<sp/>&amp;&amp;<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/>__sync_synchronize();</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="954"><highlight class="normal">}</highlight></codeline>
<codeline lineno="955"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight></codeline>
<codeline lineno="961" refid="classcl_1_1size__t" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>N&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1size__t" kindref="compound">size_t</ref><sp/>{</highlight></codeline>
<codeline lineno="962"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1size__t_1affceb07342079204f78e01b34fdcdc1f" kindref="member">::size_t</ref><sp/>data_[N];</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="967" refid="classcl_1_1size__t_1affceb07342079204f78e01b34fdcdc1f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1size__t_1affceb07342079204f78e01b34fdcdc1f" kindref="member">size_t</ref>()<sp/>{</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>data_[i]<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1size__t_1affceb07342079204f78e01b34fdcdc1f" kindref="member">::size_t</ref><sp/>&amp;operator[](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[index];<sp/>}</highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/>const<sp/>::size_t<sp/>&amp;operator[](</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_[index];<sp/>}</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="978" refid="classcl_1_1size__t_1ada0a8a69ea7d1629fc9e49357736180f" refkind="member"><highlight class="normal"><sp/><sp/>operator<sp/>::size_t<sp/>*()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_;<sp/>}</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="981" refid="classcl_1_1size__t_1aff1d0fd410ad672591e125d1d414e17d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>const<sp/>::size_t<sp/>*()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>data_;<sp/>}</highlight></codeline>
<codeline lineno="982"><highlight class="normal">};</highlight></codeline>
<codeline lineno="983"><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Generic<sp/>getInfoHelper.<sp/>The<sp/>final<sp/>parameter<sp/>is<sp/>used<sp/>to<sp/>guide<sp/>overload</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="comment">//<sp/>resolution:<sp/>the<sp/>actual<sp/>parameter<sp/>passed<sp/>is<sp/>an<sp/>int,<sp/>which<sp/>makes<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="comment">//<sp/>a<sp/>worse<sp/>conversion<sp/>sequence<sp/>than<sp/>a<sp/>specialization<sp/>that<sp/>declares<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight><highlight class="comment">//<sp/>parameter<sp/>as<sp/>an<sp/>int.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Functor,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>getInfoHelper(Functor<sp/>f,<sp/>cl_uint<sp/>name,<sp/>T<sp/>*param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f(name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T),<sp/>param,<sp/>NULL);</highlight></codeline>
<codeline lineno="993"><highlight class="normal">}</highlight></codeline>
<codeline lineno="994"><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specialized<sp/>getInfoHelper<sp/>for<sp/>VECTOR_CLASS<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="997"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>getInfoHelper(Func<sp/>f,<sp/>cl_uint<sp/>name,<sp/>VECTOR_CLASS&lt;T&gt;<sp/>*param,</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/>::size_t<sp/>required;</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>f(name,<sp/>0,<sp/>NULL,<sp/>&amp;required);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/>T<sp/>*value<sp/>=<sp/>(T<sp/>*)alloca(required);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>f(name,<sp/>required,<sp/>value,<sp/>NULL);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"></highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/>param-&gt;assign(&amp;value[0],<sp/>&amp;value[required<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T)]);</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="1013"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Specialization<sp/>for<sp/>reference-counted<sp/>types.<sp/>This<sp/>depends<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="1016"><highlight class="comment"><sp/>*<sp/>existence<sp/>of<sp/>Wrapper&lt;T&gt;::cl_type,<sp/>and<sp/>none<sp/>of<sp/>the<sp/>other<sp/>types<sp/>having<sp/>the</highlight></codeline>
<codeline lineno="1017"><highlight class="comment"><sp/>*<sp/>cl_type<sp/>member.<sp/>Note<sp/>that<sp/>simplify<sp/>specifying<sp/>the<sp/>parameter<sp/>as<sp/>Wrapper&lt;T&gt;</highlight></codeline>
<codeline lineno="1018"><highlight class="comment"><sp/>*<sp/>does<sp/>not<sp/>work,<sp/>because<sp/>when<sp/>using<sp/>a<sp/>derived<sp/>type<sp/>(e.g.<sp/>Context)<sp/>the<sp/>generic</highlight></codeline>
<codeline lineno="1019"><highlight class="comment"><sp/>*<sp/>template<sp/>will<sp/>provide<sp/>a<sp/>better<sp/>match.</highlight></codeline>
<codeline lineno="1020"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1022"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>getInfoHelper(Func<sp/>f,<sp/>cl_uint<sp/>name,<sp/>VECTOR_CLASS&lt;T&gt;<sp/>*param,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::cl_type<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/>::size_t<sp/>required;</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>f(name,<sp/>0,<sp/>NULL,<sp/>&amp;required);</highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::cl_type<sp/>*value<sp/>=<sp/>(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::cl_type<sp/>*)alloca(required);</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>f(name,<sp/>required,<sp/>value,<sp/>NULL);</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"></highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/>::size_t<sp/>elements<sp/>=<sp/>required<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::cl_type);</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/>param-&gt;assign(&amp;value[0],<sp/>&amp;value[elements]);</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>elements;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value[i]<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>(*param)[i].retain();</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specialized<sp/>for<sp/>getInfo&lt;CL_PROGRAM_BINARIES&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func&gt;</highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>getInfoHelper(Func<sp/>f,<sp/>cl_uint<sp/>name,<sp/>VECTOR_CLASS&lt;char<sp/>*&gt;<sp/>*param,</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>f(name,<sp/>param-&gt;size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*),<sp/>&amp;(*param)[0],<sp/>NULL);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specialized<sp/>GetInfoHelper<sp/>for<sp/>STRING_CLASS<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func&gt;</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>getInfoHelper(Func<sp/>f,<sp/>cl_uint<sp/>name,<sp/><ref refid="namespacecl_1ad3ff55c5fe80ec84842876af323559c7" kindref="member">STRING_CLASS</ref><sp/>*param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__NO_STD_VECTOR)<sp/>||<sp/>defined(__NO_STD_STRING)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/>::size_t<sp/>required;</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>f(name,<sp/>0,<sp/>NULL,<sp/>&amp;required);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"></highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)alloca(required);</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>f(name,<sp/>required,<sp/>value,<sp/>NULL);</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/>*param<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/>::size_t<sp/>required;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>f(name,<sp/>0,<sp/>NULL,<sp/>&amp;required);</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>std::string<sp/>has<sp/>a<sp/>constant<sp/>data<sp/>member</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>char<sp/>vector<sp/>does<sp/>not</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/>VECTOR_CLASS&lt;char&gt;<sp/>value(required);</highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>f(name,<sp/>required,<sp/>value.data(),<sp/>NULL);</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(param)<sp/>{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/>param-&gt;assign(value.begin(),<sp/>value.end());</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Specialized<sp/>GetInfoHelper<sp/>for<sp/>cl::size_t<sp/>params</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func,<sp/>::</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>N&gt;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>getInfoHelper(Func<sp/>f,<sp/>cl_uint<sp/>name,<sp/>size_t&lt;N&gt;<sp/>*param,<sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"><sp/><sp/>::size_t<sp/>required;</highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>f(name,<sp/>0,<sp/>NULL,<sp/>&amp;required);</highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/>::size_t<sp/>*value<sp/>=<sp/>(::size_t<sp/>*)alloca(required);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/>err<sp/>=<sp/>f(name,<sp/>required,<sp/>value,<sp/>NULL);</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>N;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/>(*param)[i]<sp/>=<sp/>value[i];</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"></highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ReferenceHandler;</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Specialization<sp/>for<sp/>reference-counted<sp/>types.<sp/>This<sp/>depends<sp/>on<sp/>the</highlight></codeline>
<codeline lineno="1126"><highlight class="comment"><sp/>*<sp/>existence<sp/>of<sp/>Wrapper&lt;T&gt;::cl_type,<sp/>and<sp/>none<sp/>of<sp/>the<sp/>other<sp/>types<sp/>having<sp/>the</highlight></codeline>
<codeline lineno="1127"><highlight class="comment"><sp/>*<sp/>cl_type<sp/>member.<sp/>Note<sp/>that<sp/>simplify<sp/>specifying<sp/>the<sp/>parameter<sp/>as<sp/>Wrapper&lt;T&gt;</highlight></codeline>
<codeline lineno="1128"><highlight class="comment"><sp/>*<sp/>does<sp/>not<sp/>work,<sp/>because<sp/>when<sp/>using<sp/>a<sp/>derived<sp/>type<sp/>(e.g.<sp/>Context)<sp/>the<sp/>generic</highlight></codeline>
<codeline lineno="1129"><highlight class="comment"><sp/>*<sp/>template<sp/>will<sp/>provide<sp/>a<sp/>better<sp/>match.</highlight></codeline>
<codeline lineno="1130"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>getInfoHelper(Func<sp/>f,<sp/>cl_uint<sp/>name,<sp/>T<sp/>*param,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::cl_type<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T::cl_type<sp/>value;</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>f(name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(value),<sp/>&amp;value,<sp/>NULL);</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/>*param<sp/>=<sp/>value;</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(value<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>param-&gt;retain();</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="1147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PARAM_NAME_INFO_1_0(F)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1150"><highlight class="preprocessor"><sp/><sp/>F(cl_platform_info,<sp/>CL_PLATFORM_PROFILE,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1151"><highlight class="preprocessor"><sp/><sp/>F(cl_platform_info,<sp/>CL_PLATFORM_VERSION,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1152"><highlight class="preprocessor"><sp/><sp/>F(cl_platform_info,<sp/>CL_PLATFORM_NAME,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1153"><highlight class="preprocessor"><sp/><sp/>F(cl_platform_info,<sp/>CL_PLATFORM_VENDOR,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1154"><highlight class="preprocessor"><sp/><sp/>F(cl_platform_info,<sp/>CL_PLATFORM_EXTENSIONS,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1155"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1156"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_TYPE,<sp/>cl_device_type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1157"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_VENDOR_ID,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1158"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_MAX_COMPUTE_UNITS,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1159"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_MAX_WORK_ITEM_DIMENSIONS,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1160"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_MAX_WORK_GROUP_SIZE,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1161"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_MAX_WORK_ITEM_SIZES,<sp/>VECTOR_CLASS&lt;::size_t&gt;)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1162"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PREFERRED_VECTOR_WIDTH_CHAR,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1163"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PREFERRED_VECTOR_WIDTH_SHORT,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1164"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PREFERRED_VECTOR_WIDTH_INT,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1165"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PREFERRED_VECTOR_WIDTH_LONG,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1166"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PREFERRED_VECTOR_WIDTH_FLOAT,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1167"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PREFERRED_VECTOR_WIDTH_DOUBLE,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1168"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_MAX_CLOCK_FREQUENCY,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1169"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_ADDRESS_BITS,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1170"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_MAX_READ_IMAGE_ARGS,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1171"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_MAX_WRITE_IMAGE_ARGS,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1172"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_MAX_MEM_ALLOC_SIZE,<sp/>cl_ulong)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1173"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_IMAGE2D_MAX_WIDTH,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1174"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_IMAGE2D_MAX_HEIGHT,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1175"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_IMAGE3D_MAX_WIDTH,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1176"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_IMAGE3D_MAX_HEIGHT,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1177"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_IMAGE3D_MAX_DEPTH,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1178"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_IMAGE_SUPPORT,<sp/>cl_bool)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1179"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_MAX_PARAMETER_SIZE,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1180"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_MAX_SAMPLERS,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1181"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_MEM_BASE_ADDR_ALIGN,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1182"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_MIN_DATA_TYPE_ALIGN_SIZE,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1183"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_SINGLE_FP_CONFIG,<sp/>cl_device_fp_config)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1184"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_GLOBAL_MEM_CACHE_TYPE,<sp/>cl_device_mem_cache_type)<sp/>\</highlight></codeline>
<codeline lineno="1185"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_GLOBAL_MEM_CACHELINE_SIZE,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1186"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_GLOBAL_MEM_CACHE_SIZE,<sp/>cl_ulong)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1187"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_GLOBAL_MEM_SIZE,<sp/>cl_ulong)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1188"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_MAX_CONSTANT_BUFFER_SIZE,<sp/>cl_ulong)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1189"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_MAX_CONSTANT_ARGS,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1190"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_LOCAL_MEM_TYPE,<sp/>cl_device_local_mem_type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1191"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_LOCAL_MEM_SIZE,<sp/>cl_ulong)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1192"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_ERROR_CORRECTION_SUPPORT,<sp/>cl_bool)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1193"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PROFILING_TIMER_RESOLUTION,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1194"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_ENDIAN_LITTLE,<sp/>cl_bool)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1195"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_AVAILABLE,<sp/>cl_bool)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1196"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_COMPILER_AVAILABLE,<sp/>cl_bool)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1197"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_EXECUTION_CAPABILITIES,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1198"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>cl_device_exec_capabilities)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1199"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_QUEUE_PROPERTIES,<sp/>cl_command_queue_properties)<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1200"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PLATFORM,<sp/>cl_platform_id)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1201"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_NAME,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1202"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_VENDOR,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1203"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DRIVER_VERSION,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1204"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PROFILE,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1205"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_VERSION,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1206"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_EXTENSIONS,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1207"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1208"><highlight class="preprocessor"><sp/><sp/>F(cl_context_info,<sp/>CL_CONTEXT_REFERENCE_COUNT,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1209"><highlight class="preprocessor"><sp/><sp/>F(cl_context_info,<sp/>CL_CONTEXT_DEVICES,<sp/>VECTOR_CLASS&lt;Device&gt;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1210"><highlight class="preprocessor"><sp/><sp/>F(cl_context_info,<sp/>CL_CONTEXT_PROPERTIES,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1211"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>VECTOR_CLASS&lt;cl_context_properties&gt;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1212"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1213"><highlight class="preprocessor"><sp/><sp/>F(cl_event_info,<sp/>CL_EVENT_COMMAND_QUEUE,<sp/>cl::CommandQueue)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1214"><highlight class="preprocessor"><sp/><sp/>F(cl_event_info,<sp/>CL_EVENT_COMMAND_TYPE,<sp/>cl_command_type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1215"><highlight class="preprocessor"><sp/><sp/>F(cl_event_info,<sp/>CL_EVENT_REFERENCE_COUNT,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1216"><highlight class="preprocessor"><sp/><sp/>F(cl_event_info,<sp/>CL_EVENT_COMMAND_EXECUTION_STATUS,<sp/>cl_int)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1217"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1218"><highlight class="preprocessor"><sp/><sp/>F(cl_profiling_info,<sp/>CL_PROFILING_COMMAND_QUEUED,<sp/>cl_ulong)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1219"><highlight class="preprocessor"><sp/><sp/>F(cl_profiling_info,<sp/>CL_PROFILING_COMMAND_SUBMIT,<sp/>cl_ulong)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1220"><highlight class="preprocessor"><sp/><sp/>F(cl_profiling_info,<sp/>CL_PROFILING_COMMAND_START,<sp/>cl_ulong)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1221"><highlight class="preprocessor"><sp/><sp/>F(cl_profiling_info,<sp/>CL_PROFILING_COMMAND_END,<sp/>cl_ulong)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1222"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1223"><highlight class="preprocessor"><sp/><sp/>F(cl_mem_info,<sp/>CL_MEM_TYPE,<sp/>cl_mem_object_type)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1224"><highlight class="preprocessor"><sp/><sp/>F(cl_mem_info,<sp/>CL_MEM_FLAGS,<sp/>cl_mem_flags)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1225"><highlight class="preprocessor"><sp/><sp/>F(cl_mem_info,<sp/>CL_MEM_SIZE,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1226"><highlight class="preprocessor"><sp/><sp/>F(cl_mem_info,<sp/>CL_MEM_HOST_PTR,<sp/>void<sp/>*)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1227"><highlight class="preprocessor"><sp/><sp/>F(cl_mem_info,<sp/>CL_MEM_MAP_COUNT,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1228"><highlight class="preprocessor"><sp/><sp/>F(cl_mem_info,<sp/>CL_MEM_REFERENCE_COUNT,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1229"><highlight class="preprocessor"><sp/><sp/>F(cl_mem_info,<sp/>CL_MEM_CONTEXT,<sp/>cl::Context)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1231"><highlight class="preprocessor"><sp/><sp/>F(cl_image_info,<sp/>CL_IMAGE_FORMAT,<sp/>cl_image_format)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1232"><highlight class="preprocessor"><sp/><sp/>F(cl_image_info,<sp/>CL_IMAGE_ELEMENT_SIZE,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1233"><highlight class="preprocessor"><sp/><sp/>F(cl_image_info,<sp/>CL_IMAGE_ROW_PITCH,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1234"><highlight class="preprocessor"><sp/><sp/>F(cl_image_info,<sp/>CL_IMAGE_SLICE_PITCH,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1235"><highlight class="preprocessor"><sp/><sp/>F(cl_image_info,<sp/>CL_IMAGE_WIDTH,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1236"><highlight class="preprocessor"><sp/><sp/>F(cl_image_info,<sp/>CL_IMAGE_HEIGHT,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1237"><highlight class="preprocessor"><sp/><sp/>F(cl_image_info,<sp/>CL_IMAGE_DEPTH,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1238"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1239"><highlight class="preprocessor"><sp/><sp/>F(cl_sampler_info,<sp/>CL_SAMPLER_REFERENCE_COUNT,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1240"><highlight class="preprocessor"><sp/><sp/>F(cl_sampler_info,<sp/>CL_SAMPLER_CONTEXT,<sp/>cl::Context)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1241"><highlight class="preprocessor"><sp/><sp/>F(cl_sampler_info,<sp/>CL_SAMPLER_NORMALIZED_COORDS,<sp/>cl_bool)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1242"><highlight class="preprocessor"><sp/><sp/>F(cl_sampler_info,<sp/>CL_SAMPLER_ADDRESSING_MODE,<sp/>cl_addressing_mode)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1243"><highlight class="preprocessor"><sp/><sp/>F(cl_sampler_info,<sp/>CL_SAMPLER_FILTER_MODE,<sp/>cl_filter_mode)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1244"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1245"><highlight class="preprocessor"><sp/><sp/>F(cl_program_info,<sp/>CL_PROGRAM_REFERENCE_COUNT,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1246"><highlight class="preprocessor"><sp/><sp/>F(cl_program_info,<sp/>CL_PROGRAM_CONTEXT,<sp/>cl::Context)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1247"><highlight class="preprocessor"><sp/><sp/>F(cl_program_info,<sp/>CL_PROGRAM_NUM_DEVICES,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1248"><highlight class="preprocessor"><sp/><sp/>F(cl_program_info,<sp/>CL_PROGRAM_DEVICES,<sp/>VECTOR_CLASS&lt;Device&gt;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1249"><highlight class="preprocessor"><sp/><sp/>F(cl_program_info,<sp/>CL_PROGRAM_SOURCE,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1250"><highlight class="preprocessor"><sp/><sp/>F(cl_program_info,<sp/>CL_PROGRAM_BINARY_SIZES,<sp/>VECTOR_CLASS&lt;::size_t&gt;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1251"><highlight class="preprocessor"><sp/><sp/>F(cl_program_info,<sp/>CL_PROGRAM_BINARIES,<sp/>VECTOR_CLASS&lt;char<sp/>*&gt;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1252"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1253"><highlight class="preprocessor"><sp/><sp/>F(cl_program_build_info,<sp/>CL_PROGRAM_BUILD_STATUS,<sp/>cl_build_status)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1254"><highlight class="preprocessor"><sp/><sp/>F(cl_program_build_info,<sp/>CL_PROGRAM_BUILD_OPTIONS,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1255"><highlight class="preprocessor"><sp/><sp/>F(cl_program_build_info,<sp/>CL_PROGRAM_BUILD_LOG,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1256"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1257"><highlight class="preprocessor"><sp/><sp/>F(cl_kernel_info,<sp/>CL_KERNEL_FUNCTION_NAME,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1258"><highlight class="preprocessor"><sp/><sp/>F(cl_kernel_info,<sp/>CL_KERNEL_NUM_ARGS,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1259"><highlight class="preprocessor"><sp/><sp/>F(cl_kernel_info,<sp/>CL_KERNEL_REFERENCE_COUNT,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1260"><highlight class="preprocessor"><sp/><sp/>F(cl_kernel_info,<sp/>CL_KERNEL_CONTEXT,<sp/>cl::Context)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1261"><highlight class="preprocessor"><sp/><sp/>F(cl_kernel_info,<sp/>CL_KERNEL_PROGRAM,<sp/>cl::Program)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1262"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1263"><highlight class="preprocessor"><sp/><sp/>F(cl_kernel_work_group_info,<sp/>CL_KERNEL_WORK_GROUP_SIZE,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1264"><highlight class="preprocessor"><sp/><sp/>F(cl_kernel_work_group_info,<sp/>CL_KERNEL_COMPILE_WORK_GROUP_SIZE,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1265"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>cl::size_t&lt;3&gt;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1266"><highlight class="preprocessor"><sp/><sp/>F(cl_kernel_work_group_info,<sp/>CL_KERNEL_LOCAL_MEM_SIZE,<sp/>cl_ulong)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1267"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1268"><highlight class="preprocessor"><sp/><sp/>F(cl_command_queue_info,<sp/>CL_QUEUE_CONTEXT,<sp/>cl::Context)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1269"><highlight class="preprocessor"><sp/><sp/>F(cl_command_queue_info,<sp/>CL_QUEUE_DEVICE,<sp/>cl::Device)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1270"><highlight class="preprocessor"><sp/><sp/>F(cl_command_queue_info,<sp/>CL_QUEUE_REFERENCE_COUNT,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1271"><highlight class="preprocessor"><sp/><sp/>F(cl_command_queue_info,<sp/>CL_QUEUE_PROPERTIES,<sp/>cl_command_queue_properties)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1272"><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PARAM_NAME_INFO_1_1(F)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1275"><highlight class="preprocessor"><sp/><sp/>F(cl_context_info,<sp/>CL_CONTEXT_NUM_DEVICES,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1276"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PREFERRED_VECTOR_WIDTH_HALF,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1277"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_NATIVE_VECTOR_WIDTH_CHAR,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1278"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_NATIVE_VECTOR_WIDTH_SHORT,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1279"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_NATIVE_VECTOR_WIDTH_INT,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1280"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_NATIVE_VECTOR_WIDTH_LONG,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1281"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_NATIVE_VECTOR_WIDTH_FLOAT,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1282"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_NATIVE_VECTOR_WIDTH_DOUBLE,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1283"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_NATIVE_VECTOR_WIDTH_HALF,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1284"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_DOUBLE_FP_CONFIG,<sp/>cl_device_fp_config)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1285"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_HALF_FP_CONFIG,<sp/>cl_device_fp_config)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1286"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_HOST_UNIFIED_MEMORY,<sp/>cl_bool)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1287"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_OPENCL_C_VERSION,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1288"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1289"><highlight class="preprocessor"><sp/><sp/>F(cl_mem_info,<sp/>CL_MEM_ASSOCIATED_MEMOBJECT,<sp/>cl::Memory)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1290"><highlight class="preprocessor"><sp/><sp/>F(cl_mem_info,<sp/>CL_MEM_OFFSET,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1291"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1292"><highlight class="preprocessor"><sp/><sp/>F(cl_kernel_work_group_info,<sp/>CL_KERNEL_PREFERRED_WORK_GROUP_SIZE_MULTIPLE,<sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1293"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1294"><highlight class="preprocessor"><sp/><sp/>F(cl_kernel_work_group_info,<sp/>CL_KERNEL_PRIVATE_MEM_SIZE,<sp/>cl_ulong)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1295"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1296"><highlight class="preprocessor"><sp/><sp/>F(cl_event_info,<sp/>CL_EVENT_CONTEXT,<sp/>cl::Context)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>CL_VERSION_1_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PARAM_NAME_INFO_1_2(F)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1301"><highlight class="preprocessor"><sp/><sp/>F(cl_image_info,<sp/>CL_IMAGE_BUFFER,<sp/>cl::Buffer)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1302"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1303"><highlight class="preprocessor"><sp/><sp/>F(cl_program_info,<sp/>CL_PROGRAM_NUM_KERNELS,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1304"><highlight class="preprocessor"><sp/><sp/>F(cl_program_info,<sp/>CL_PROGRAM_KERNEL_NAMES,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1305"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1306"><highlight class="preprocessor"><sp/><sp/>F(cl_program_build_info,<sp/>CL_PROGRAM_BINARY_TYPE,<sp/>cl_program_binary_type)<sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1307"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1308"><highlight class="preprocessor"><sp/><sp/>F(cl_kernel_info,<sp/>CL_KERNEL_ATTRIBUTES,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1309"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1310"><highlight class="preprocessor"><sp/><sp/>F(cl_kernel_arg_info,<sp/>CL_KERNEL_ARG_ADDRESS_QUALIFIER,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1311"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>cl_kernel_arg_address_qualifier)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1312"><highlight class="preprocessor"><sp/><sp/>F(cl_kernel_arg_info,<sp/>CL_KERNEL_ARG_ACCESS_QUALIFIER,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1313"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>cl_kernel_arg_access_qualifier)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1314"><highlight class="preprocessor"><sp/><sp/>F(cl_kernel_arg_info,<sp/>CL_KERNEL_ARG_TYPE_NAME,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1315"><highlight class="preprocessor"><sp/><sp/>F(cl_kernel_arg_info,<sp/>CL_KERNEL_ARG_NAME,<sp/>STRING_CLASS)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1316"><highlight class="preprocessor"><sp/><sp/>F(cl_kernel_arg_info,<sp/>CL_KERNEL_ARG_TYPE_QUALIFIER,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1317"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>cl_kernel_arg_type_qualifier)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1318"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1319"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PARENT_DEVICE,<sp/>cl_device_id)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1320"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PARTITION_PROPERTIES,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1321"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>VECTOR_CLASS&lt;cl_device_partition_property&gt;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1322"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PARTITION_TYPE,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1323"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>VECTOR_CLASS&lt;cl_device_partition_property&gt;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1324"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_REFERENCE_COUNT,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1325"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PREFERRED_INTEROP_USER_SYNC,<sp/>::size_t)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1326"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PARTITION_AFFINITY_DOMAIN,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1327"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>cl_device_affinity_domain)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1328"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_BUILT_IN_KERNELS,<sp/>STRING_CLASS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_CL_DEVICE_FISSION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__PARAM_NAME_DEVICE_FISSION(F)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1333"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PARENT_DEVICE_EXT,<sp/>cl_device_id)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1334"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PARTITION_TYPES_EXT,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1335"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>VECTOR_CLASS&lt;cl_device_partition_property_ext&gt;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1336"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_AFFINITY_DOMAINS_EXT,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1337"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>VECTOR_CLASS&lt;cl_device_partition_property_ext&gt;)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1338"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_REFERENCE_COUNT_EXT,<sp/>cl_uint)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1339"><highlight class="preprocessor"><sp/><sp/>F(cl_device_info,<sp/>CL_DEVICE_PARTITION_STYLE_EXT,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1340"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>VECTOR_CLASS&lt;cl_device_partition_property_ext&gt;)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>USE_CL_DEVICE_FISSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"></highlight></codeline>
<codeline lineno="1343" refid="structcl_1_1detail_1_1param__traits" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>enum_type,<sp/>cl_</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Name&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">param_traits</ref><sp/>{};</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__CL_DECLARE_PARAM_TRAITS(token,<sp/>param_name,<sp/>T)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1346"><highlight class="preprocessor"><sp/><sp/>struct<sp/>token;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1347"><highlight class="preprocessor"><sp/><sp/>template<sp/>&lt;&gt;<sp/>struct<sp/>param_traits&lt;detail::token,<sp/>param_name&gt;<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1348"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>enum<sp/>{<sp/>value<sp/>=<sp/>param_name<sp/>};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1349"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typedef<sp/>T<sp/>param_type;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="1350"><highlight class="preprocessor"><sp/><sp/>};</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal">__PARAM_NAME_INFO_1_0(__CL_DECLARE_PARAM_TRAITS)</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal">__PARAM_NAME_INFO_1_1(__CL_DECLARE_PARAM_TRAITS)</highlight></codeline>
<codeline lineno="1355"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>CL_VERSION_1_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal">__PARAM_NAME_INFO_1_2(__CL_DECLARE_PARAM_TRAITS)</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>CL_VERSION_1_1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_CL_DEVICE_FISSION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal">__PARAM_NAME_DEVICE_FISSION(__CL_DECLARE_PARAM_TRAITS);</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>USE_CL_DEVICE_FISSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_PLATFORM_ICD_SUFFIX_KHR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1365"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_platform_info,<sp/>CL_PLATFORM_ICD_SUFFIX_KHR,</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespacecl_1ad3ff55c5fe80ec84842876af323559c7" kindref="member">STRING_CLASS</ref>)</highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_PROFILING_TIMER_OFFSET_AMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,<sp/>CL_DEVICE_PROFILING_TIMER_OFFSET_AMD,</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_ulong)</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_GLOBAL_FREE_MEMORY_AMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,<sp/>CL_DEVICE_GLOBAL_FREE_MEMORY_AMD,</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VECTOR_CLASS&lt;::size_t&gt;)</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_SIMD_PER_COMPUTE_UNIT_AMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,<sp/>CL_DEVICE_SIMD_PER_COMPUTE_UNIT_AMD,</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_uint)</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_SIMD_WIDTH_AMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,<sp/>CL_DEVICE_SIMD_WIDTH_AMD,<sp/>cl_uint)</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_SIMD_INSTRUCTION_WIDTH_AMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,<sp/>CL_DEVICE_SIMD_INSTRUCTION_WIDTH_AMD,</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_uint)</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_WAVEFRONT_WIDTH_AMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,<sp/>CL_DEVICE_WAVEFRONT_WIDTH_AMD,</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_uint)</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_GLOBAL_MEM_CHANNELS_AMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,<sp/>CL_DEVICE_GLOBAL_MEM_CHANNELS_AMD,</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_uint)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_GLOBAL_MEM_CHANNEL_BANKS_AMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CL_DEVICE_GLOBAL_MEM_CHANNEL_BANKS_AMD,<sp/>cl_uint)</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1401"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_GLOBAL_MEM_CHANNEL_BANK_WIDTH_AMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CL_DEVICE_GLOBAL_MEM_CHANNEL_BANK_WIDTH_AMD,<sp/>cl_uint)</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_LOCAL_MEM_SIZE_PER_COMPUTE_UNIT_AMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CL_DEVICE_LOCAL_MEM_SIZE_PER_COMPUTE_UNIT_AMD,</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_uint)</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_LOCAL_MEM_BANKS_AMD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,<sp/>CL_DEVICE_LOCAL_MEM_BANKS_AMD,</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_uint)</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_COMPUTE_CAPABILITY_MAJOR_NV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,<sp/>CL_DEVICE_COMPUTE_CAPABILITY_MAJOR_NV,</highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_uint)</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_COMPUTE_CAPABILITY_MINOR_NV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,<sp/>CL_DEVICE_COMPUTE_CAPABILITY_MINOR_NV,</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_uint)</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_REGISTERS_PER_BLOCK_NV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,<sp/>CL_DEVICE_REGISTERS_PER_BLOCK_NV,</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_uint)</highlight></codeline>
<codeline lineno="1426"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_WARP_SIZE_NV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,<sp/>CL_DEVICE_WARP_SIZE_NV,<sp/>cl_uint)</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_GPU_OVERLAP_NV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1431"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,<sp/>CL_DEVICE_GPU_OVERLAP_NV,<sp/>cl_bool)</highlight></codeline>
<codeline lineno="1432"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_KERNEL_EXEC_TIMEOUT_NV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,<sp/>CL_DEVICE_KERNEL_EXEC_TIMEOUT_NV,</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_bool)</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_DEVICE_INTEGRATED_MEMORY_NV</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal">__CL_DECLARE_PARAM_TRAITS(cl_device_info,<sp/>CL_DEVICE_INTEGRATED_MEMORY_NV,</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_bool)</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Convenience<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>getInfo(Func<sp/>f,<sp/>cl_uint<sp/>name,<sp/>T<sp/>*param)<sp/>{</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getInfoHelper(f,<sp/>name,<sp/>param,<sp/>0);</highlight></codeline>
<codeline lineno="1447"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight></codeline>
<codeline lineno="1449" refid="structcl_1_1detail_1_1_get_info_functor0" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Arg0&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1_get_info_functor0" kindref="compound">GetInfoFunctor0</ref><sp/>{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/>Func<sp/>f_;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arg0<sp/>&amp;arg0_;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/>cl_int<sp/>operator()(cl_uint<sp/>param,<sp/>::size_t<sp/>size,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value,</highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>*size_ret)<sp/>{</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f_(arg0_,<sp/>param,<sp/>size,<sp/>value,<sp/>size_ret);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1456"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight></codeline>
<codeline lineno="1458" refid="structcl_1_1detail_1_1_get_info_functor1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Arg0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Arg1&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1_get_info_functor1" kindref="compound">GetInfoFunctor1</ref><sp/>{</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/>Func<sp/>f_;</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arg0<sp/>&amp;arg0_;</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arg1<sp/>&amp;arg1_;</highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/>cl_int<sp/>operator()(cl_uint<sp/>param,<sp/>::size_t<sp/>size,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*value,</highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>*size_ret)<sp/>{</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f_(arg0_,<sp/>arg1_,<sp/>param,<sp/>size,<sp/>value,<sp/>size_ret);</highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1466"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Arg0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>getInfo(Func<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arg0<sp/>&amp;arg0,<sp/>cl_uint<sp/>name,<sp/>T<sp/>*param)<sp/>{</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1_get_info_functor0" kindref="compound">GetInfoFunctor0&lt;Func, Arg0&gt;</ref><sp/>f0<sp/>=<sp/>{f,<sp/>arg0};</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getInfoHelper(f0,<sp/>name,<sp/>param,<sp/>0);</highlight></codeline>
<codeline lineno="1472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Arg0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Arg1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="1475"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>getInfo(Func<sp/>f,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arg0<sp/>&amp;arg0,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Arg1<sp/>&amp;arg1,<sp/>cl_uint<sp/>name,</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>*param)<sp/>{</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/>GetInfoFunctor1&lt;Func,<sp/>Arg0,<sp/>Arg1&gt;<sp/>f0<sp/>=<sp/>{f,<sp/>arg0,<sp/>arg1};</highlight></codeline>
<codeline lineno="1478"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getInfoHelper(f0,<sp/>name,<sp/>param,<sp/>0);</highlight></codeline>
<codeline lineno="1479"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight></codeline>
<codeline lineno="1481" refid="structcl_1_1detail_1_1_reference_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1_reference_handler" kindref="compound">ReferenceHandler</ref><sp/>{};</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1_reference_handler" kindref="compound">ReferenceHandler</ref>&lt;cl_device_id&gt;<sp/>{</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>retain(cl_device_id<sp/>device)<sp/>{<sp/>return<sp/>::clRetainDevice(device);<sp/>}</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>release(cl_device_id<sp/>device)<sp/>{</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::clReleaseDevice(device);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1510"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight></codeline>
<codeline lineno="1515" refid="structcl_1_1detail_1_1_reference_handler_3_01cl__device__id_01_4" refkind="compound"><highlight class="normal">template<sp/>&lt;&gt;<sp/>struct<sp/>ReferenceHandler&lt;cl_device_id&gt;<sp/>{</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cl_device_id<sp/>does<sp/>not<sp/>have<sp/>retain().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>retain(cl_device_id)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;<sp/>}</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cl_device_id<sp/>does<sp/>not<sp/>have<sp/>release().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>release(cl_device_id)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;<sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1521"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"></highlight></codeline>
<codeline lineno="1523" refid="structcl_1_1detail_1_1_reference_handler_3_01cl__platform__id_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1_reference_handler" kindref="compound">ReferenceHandler</ref>&lt;cl_platform_id&gt;<sp/>{</highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cl_platform_id<sp/>does<sp/>not<sp/>have<sp/>retain().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>retain(cl_platform_id)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;<sp/>}</highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cl_platform_id<sp/>does<sp/>not<sp/>have<sp/>release().</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>release(cl_platform_id)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;<sp/>}</highlight></codeline>
<codeline lineno="1528"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1529"><highlight class="normal"></highlight></codeline>
<codeline lineno="1530" refid="structcl_1_1detail_1_1_reference_handler_3_01cl__context_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1_reference_handler" kindref="compound">ReferenceHandler</ref>&lt;cl_context&gt;<sp/>{</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>retain(cl_context<sp/>context)<sp/>{</highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::clRetainContext(context);</highlight></codeline>
<codeline lineno="1533"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>release(cl_context<sp/>context)<sp/>{</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::clReleaseContext(context);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1537"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1538"><highlight class="normal"></highlight></codeline>
<codeline lineno="1539" refid="structcl_1_1detail_1_1_reference_handler_3_01cl__command__queue_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1_reference_handler" kindref="compound">ReferenceHandler</ref>&lt;cl_command_queue&gt;<sp/>{</highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>retain(cl_command_queue<sp/>queue)<sp/>{</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::clRetainCommandQueue(queue);</highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>release(cl_command_queue<sp/>queue)<sp/>{</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::clReleaseCommandQueue(queue);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1546"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1547"><highlight class="normal"></highlight></codeline>
<codeline lineno="1548" refid="structcl_1_1detail_1_1_reference_handler_3_01cl__mem_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1_reference_handler" kindref="compound">ReferenceHandler</ref>&lt;cl_mem&gt;<sp/>{</highlight></codeline>
<codeline lineno="1549"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>retain(cl_mem<sp/>memory)<sp/>{<sp/>return<sp/>::clRetainMemObject(memory);<sp/>}</highlight></codeline>
<codeline lineno="1550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>release(cl_mem<sp/>memory)<sp/>{<sp/>return<sp/>::clReleaseMemObject(memory);<sp/>}</highlight></codeline>
<codeline lineno="1551"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"></highlight></codeline>
<codeline lineno="1553" refid="structcl_1_1detail_1_1_reference_handler_3_01cl__sampler_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1_reference_handler" kindref="compound">ReferenceHandler</ref>&lt;cl_sampler&gt;<sp/>{</highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>retain(cl_sampler<sp/>sampler)<sp/>{</highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::clRetainSampler(sampler);</highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>release(cl_sampler<sp/>sampler)<sp/>{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::clReleaseSampler(sampler);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1560"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"></highlight></codeline>
<codeline lineno="1562" refid="structcl_1_1detail_1_1_reference_handler_3_01cl__program_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1_reference_handler" kindref="compound">ReferenceHandler</ref>&lt;cl_program&gt;<sp/>{</highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>retain(cl_program<sp/>program)<sp/>{</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::clRetainProgram(program);</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>release(cl_program<sp/>program)<sp/>{</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>::clReleaseProgram(program);</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1569"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"></highlight></codeline>
<codeline lineno="1571" refid="structcl_1_1detail_1_1_reference_handler_3_01cl__kernel_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1_reference_handler" kindref="compound">ReferenceHandler</ref>&lt;cl_kernel&gt;<sp/>{</highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>retain(cl_kernel<sp/>kernel)<sp/>{<sp/>return<sp/>::clRetainKernel(kernel);<sp/>}</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>release(cl_kernel<sp/>kernel)<sp/>{<sp/>return<sp/>::clReleaseKernel(kernel);<sp/>}</highlight></codeline>
<codeline lineno="1574"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight></codeline>
<codeline lineno="1576" refid="structcl_1_1detail_1_1_reference_handler_3_01cl__event_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1_reference_handler" kindref="compound">ReferenceHandler</ref>&lt;cl_event&gt;<sp/>{</highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>retain(cl_event<sp/>event)<sp/>{<sp/>return<sp/>::clRetainEvent(event);<sp/>}</highlight></codeline>
<codeline lineno="1578"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>release(cl_event<sp/>event)<sp/>{<sp/>return<sp/>::clReleaseEvent(event);<sp/>}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1580"><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extracts<sp/>version<sp/>number<sp/>with<sp/>major<sp/>in<sp/>the<sp/>upper<sp/>16<sp/>bits,<sp/>minor<sp/>in<sp/>the<sp/>lower</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"></highlight><highlight class="comment">//<sp/>16</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_uint<sp/>getVersion(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*versionInfo)<sp/>{</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>highVersion<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>lowVersion<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index<sp/>=<sp/>7;</highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(versionInfo[index]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/><sp/>highVersion<sp/>*=<sp/>10;</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/><sp/>highVersion<sp/>+=<sp/>versionInfo[index]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/><sp/>++index;</highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/>++index;</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(versionInfo[index]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;<sp/>&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>versionInfo[index]<sp/>!=<sp/></highlight><highlight class="charliteral">&apos;\0&apos;</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><sp/>lowVersion<sp/>*=<sp/>10;</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"><sp/><sp/><sp/><sp/>lowVersion<sp/>+=<sp/>versionInfo[index]<sp/>-<sp/></highlight><highlight class="charliteral">&apos;0&apos;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/><sp/>++index;</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(highVersion<sp/>&lt;&lt;<sp/>16)<sp/>|<sp/>lowVersion;</highlight></codeline>
<codeline lineno="1599"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_uint<sp/>getPlatformVersion(cl_platform_id<sp/>platform)<sp/>{</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/>::size_t<sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/>clGetPlatformInfo(platform,<sp/>CL_PLATFORM_VERSION,<sp/>0,<sp/>NULL,<sp/>&amp;size);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*versionInfo<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)alloca(size);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/>clGetPlatformInfo(platform,<sp/>CL_PLATFORM_VERSION,<sp/>size,<sp/>&amp;versionInfo[0],</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;size);</highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getVersion(versionInfo);</highlight></codeline>
<codeline lineno="1608"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1609"><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_uint<sp/>getDevicePlatformVersion(cl_device_id<sp/>device)<sp/>{</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"><sp/><sp/>cl_platform_id<sp/>platform;</highlight></codeline>
<codeline lineno="1612"><highlight class="normal"><sp/><sp/>clGetDeviceInfo(device,<sp/>CL_DEVICE_PLATFORM,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(platform),<sp/>&amp;platform,</highlight></codeline>
<codeline lineno="1613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getPlatformVersion(platform);</highlight></codeline>
<codeline lineno="1615"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1616"><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)<sp/>&amp;&amp;<sp/>defined(CL_USE_DEPRECATED_OPENCL_1_1_APIS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_uint<sp/>getContextPlatformVersion(cl_context<sp/>context)<sp/>{</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>The<sp/>platform<sp/>cannot<sp/>be<sp/>queried<sp/>directly,<sp/>so<sp/>we<sp/>first<sp/>have<sp/>to<sp/>grab<sp/>a</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>device<sp/>and<sp/>obtain<sp/>its<sp/>context</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/>::size_t<sp/>size<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"><sp/><sp/>clGetContextInfo(context,<sp/>CL_CONTEXT_DEVICES,<sp/>0,<sp/>NULL,<sp/>&amp;size);</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/>cl_device_id<sp/>*devices<sp/>=<sp/>(cl_device_id<sp/>*)alloca(size);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/>clGetContextInfo(context,<sp/>CL_CONTEXT_DEVICES,<sp/>size,<sp/>devices,<sp/>NULL);</highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>getDevicePlatformVersion(devices[0]);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)<sp/>&amp;&amp;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>defined(CL_USE_DEPRECATED_OPENCL_1_1_APIS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight></codeline>
<codeline lineno="1632" refid="classcl_1_1detail_1_1_wrapper" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper</ref><sp/>{</highlight></codeline>
<codeline lineno="1633"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>T<sp/>cl_type;</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/>cl_type<sp/>object_;</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight></codeline>
<codeline lineno="1639"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper</ref>()<sp/>:<sp/>object_(NULL)<sp/>{}</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_type<sp/>&amp;obj)<sp/>:<sp/>object_(obj)<sp/>{}</highlight></codeline>
<codeline lineno="1643"><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">~Wrapper</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(object_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>release();</highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper&lt;cl_type&gt;</ref><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>rhs.object_;</highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(object_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(retain(),<sp/>__RETAIN_ERR);</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1656"><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper</ref>(<ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper&lt;cl_type&gt;</ref><sp/>&amp;&amp;rhs)<sp/>CL_HPP_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>rhs.object_;</highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.object_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1662"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper&lt;cl_type&gt;</ref><sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper&lt;cl_type&gt;</ref><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(object_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(release(),<sp/>__RELEASE_ERR);</highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>rhs.object_;</highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(object_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(retain(),<sp/>__RETAIN_ERR);</highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1673"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1676"><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper&lt;cl_type&gt;</ref><sp/>&amp;operator=(<ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper&lt;cl_type&gt;</ref><sp/>&amp;&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(object_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(release(),<sp/>__RELEASE_ERR);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>rhs.object_;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rhs.object_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper&lt;cl_type&gt;</ref><sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_type<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(object_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(release(),<sp/>__RELEASE_ERR);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>rhs;</highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/>cl_type<sp/>operator()()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>object_;<sp/>}</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/>cl_type<sp/>&amp;operator()()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>object_;<sp/>}</highlight></codeline>
<codeline lineno="1701"><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>getInfoHelper(Func,<sp/>cl_uint,<sp/>U<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U::cl_type);</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/>cl_int<sp/>retain()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1_reference_handler" kindref="compound">ReferenceHandler&lt;cl_type&gt;::retain</ref>(object_);<sp/>}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/>cl_int<sp/>release()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1_reference_handler" kindref="compound">ReferenceHandler&lt;cl_type&gt;::release</ref>(object_);<sp/>}</highlight></codeline>
<codeline lineno="1710"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"></highlight></codeline>
<codeline lineno="1712" refid="classcl_1_1detail_1_1_wrapper_3_01cl__device__id_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper</ref>&lt;cl_device_id&gt;<sp/>{</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>cl_device_id<sp/>cl_type;</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/>cl_type<sp/>object_;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>referenceCountable_;</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isReferenceCountable(cl_device_id<sp/>device)<sp/>{</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retVal<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(device<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>version<sp/>=<sp/>getDevicePlatformVersion(device);</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(version<sp/>&gt;<sp/>((1<sp/>&lt;&lt;<sp/>16)<sp/>+<sp/>1))<sp/>{</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retVal<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retVal;</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper</ref>()<sp/>:<sp/>object_(NULL),<sp/>referenceCountable_(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{}</highlight></codeline>
<codeline lineno="1733"><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_type<sp/>&amp;obj)<sp/>:<sp/>object_(obj),<sp/>referenceCountable_(</highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/><sp/>referenceCountable_<sp/>=<sp/>isReferenceCountable(obj);</highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight></codeline>
<codeline lineno="1738"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">~Wrapper</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(object_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>release();</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper&lt;cl_type&gt;</ref><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>rhs.object_;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"><sp/><sp/><sp/><sp/>referenceCountable_<sp/>=<sp/>isReferenceCountable(object_);</highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(object_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(retain(),<sp/>__RETAIN_ERR);</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1751"><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper</ref>(<ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper&lt;cl_type&gt;</ref><sp/>&amp;&amp;rhs)<sp/>CL_HPP_NOEXCEPT<sp/>{</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>rhs.object_;</highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><sp/>referenceCountable_<sp/>=<sp/>rhs.referenceCountable_;</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.object_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"><sp/><sp/><sp/><sp/>rhs.referenceCountable_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1759"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper&lt;cl_type&gt;</ref><sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper&lt;cl_type&gt;</ref><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(object_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(release(),<sp/>__RELEASE_ERR);</highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>rhs.object_;</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>referenceCountable_<sp/>=<sp/>rhs.referenceCountable_;</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(object_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(retain(),<sp/>__RETAIN_ERR);</highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper&lt;cl_type&gt;</ref><sp/>&amp;operator=(<ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper&lt;cl_type&gt;</ref><sp/>&amp;&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(object_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(release(),<sp/>__RELEASE_ERR);</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>rhs.object_;</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>referenceCountable_<sp/>=<sp/>rhs.referenceCountable_;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rhs.object_<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rhs.referenceCountable_<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1788"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">Wrapper&lt;cl_type&gt;</ref><sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_type<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(object_<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(release(),<sp/>__RELEASE_ERR);</highlight></codeline>
<codeline lineno="1793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>rhs;</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/><sp/>referenceCountable_<sp/>=<sp/>isReferenceCountable(object_);</highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/>cl_type<sp/>operator()()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>object_;<sp/>}</highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight></codeline>
<codeline lineno="1801"><highlight class="normal"><sp/><sp/>cl_type<sp/>&amp;operator()()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>object_;<sp/>}</highlight></codeline>
<codeline lineno="1802"><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1804"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>getInfoHelper(Func,<sp/>cl_uint,<sp/>U<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U::cl_type);</highlight></codeline>
<codeline lineno="1807"><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Func,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U&gt;</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>getInfoHelper(Func,<sp/>cl_uint,<sp/>VECTOR_CLASS&lt;U&gt;<sp/>*,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>U::cl_type);</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight></codeline>
<codeline lineno="1812"><highlight class="normal"><sp/><sp/>cl_int<sp/>retain()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(referenceCountable_)<sp/>{</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1_reference_handler" kindref="compound">ReferenceHandler&lt;cl_type&gt;::retain</ref>(object_);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/>cl_int<sp/>release()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(referenceCountable_)<sp/>{</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1_reference_handler" kindref="compound">ReferenceHandler&lt;cl_type&gt;::release</ref>(object_);</highlight></codeline>
<codeline lineno="1823"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="1824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1827"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1828"><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight></codeline>
<codeline lineno="1831"></codeline>
<codeline lineno="1837" refid="structcl_1_1_image_format" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1_image_format" kindref="compound">ImageFormat</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>cl_image_format<sp/>{</highlight></codeline>
<codeline lineno="1839" refid="structcl_1_1_image_format_1adf48b6e9dfdfefb7583e20826c3b4a14" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_image_format_1adf48b6e9dfdfefb7583e20826c3b4a14" kindref="member">ImageFormat</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="1840"><highlight class="normal"></highlight></codeline>
<codeline lineno="1842" refid="structcl_1_1_image_format_1a039deeaa451a52448014794e7dae30ba" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_image_format_1a039deeaa451a52448014794e7dae30ba" kindref="member">ImageFormat</ref>(cl_channel_order<sp/>order,<sp/>cl_channel_type<sp/>type)<sp/>{</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/><sp/>image_channel_order<sp/>=<sp/>order;</highlight></codeline>
<codeline lineno="1844"><highlight class="normal"><sp/><sp/><sp/><sp/>image_channel_data_type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight></codeline>
<codeline lineno="1848" refid="structcl_1_1_image_format_1a74296cd49ed08b0521e8b6b26e51608f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_image_format" kindref="compound">ImageFormat</ref><sp/>&amp;<ref refid="structcl_1_1_image_format_1a74296cd49ed08b0521e8b6b26e51608f" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_image_format" kindref="compound">ImageFormat</ref><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">this</highlight><highlight class="normal"><sp/>!=<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;image_channel_data_type<sp/>=<sp/>rhs.image_channel_data_type;</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;image_channel_order<sp/>=<sp/>rhs.image_channel_order;</highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1855"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight></codeline>
<codeline lineno="1864" refid="classcl_1_1_device" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1_device" kindref="compound">Device</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper</ref>&lt;cl_device_id&gt;<sp/>{</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="1867" refid="classcl_1_1_device_1a6131ff3eb77c31dfba11091a3c0f4235" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_device_1a6131ff3eb77c31dfba11091a3c0f4235" kindref="member">Device</ref>()<sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;()<sp/>{}</highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight></codeline>
<codeline lineno="1873" refid="classcl_1_1_device_1aac39f3ad86d65419fafa1a92690c4547" refkind="member"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/><ref refid="classcl_1_1_device_1aac39f3ad86d65419fafa1a92690c4547" kindref="member">Device</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_device_id<sp/>&amp;device)</highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;(device)<sp/>{}</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_device" kindref="compound">Device</ref><sp/>getDefault(cl_int<sp/>*err<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"></highlight></codeline>
<codeline lineno="1886" refid="classcl_1_1_device_1a24478e608183c70319367afec954e779" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_device" kindref="compound">Device</ref><sp/>&amp;<ref refid="classcl_1_1_device_1a24478e608183c70319367afec954e779" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_device_id<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;::operator=</ref>(rhs);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"></highlight></codeline>
<codeline lineno="1894" refid="classcl_1_1_device_1a8445328fa0af11c93f20615f820b93fc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_device_1a8445328fa0af11c93f20615f820b93fc" kindref="member">Device</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_device" kindref="compound">Device</ref><sp/>&amp;dev)<sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;(dev)<sp/>{}</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight></codeline>
<codeline lineno="1899" refid="classcl_1_1_device_1a1f39426d96c76588310d3edd77fa17e1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_device" kindref="compound">Device</ref><sp/>&amp;<ref refid="classcl_1_1_device_1a1f39426d96c76588310d3edd77fa17e1" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_device" kindref="compound">Device</ref><sp/>&amp;dev)<sp/>{</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;::operator=</ref>(dev);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight></codeline>
<codeline lineno="1904"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_device" kindref="compound">Device</ref>(<ref refid="classcl_1_1_device" kindref="compound">Device</ref><sp/>&amp;&amp;dev)<sp/>CL_HPP_NOEXCEPT</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;</ref>(std::move(dev))<sp/>{}</highlight></codeline>
<codeline lineno="1910"><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/>Device<sp/>&amp;operator=(Device<sp/>&amp;&amp;dev)<sp/>{</highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::Wrapper&lt;cl_type&gt;::operator=(std::move(dev));</highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"></highlight></codeline>
<codeline lineno="1921" refid="classcl_1_1_device_1a575493c25049dae087540ed8a65efd6d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>cl_int<sp/><ref refid="classcl_1_1_device_1a575493c25049dae087540ed8a65efd6d" kindref="member">getInfo</ref>(cl_device_info<sp/>name,<sp/>T<sp/>*param)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::getInfo(&amp;::clGetDeviceInfo,<sp/>object_,<sp/>name,<sp/>param),</highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__GET_DEVICE_INFO_ERR);</highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1926"><highlight class="normal"></highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;cl_</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name&gt;</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits&lt;detail::cl_device_info, name&gt;::param_type</ref></highlight></codeline>
<codeline lineno="1930" refid="classcl_1_1_device_1a80887bb6e52b92225dca31fdad796ffa" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_device_1a80887bb6e52b92225dca31fdad796ffa" kindref="member">getInfo</ref>(cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits&lt;detail::cl_device_info, name&gt;::param_type</ref></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>result<sp/>=<sp/>getInfo(name,<sp/>&amp;param);</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/>cl_int<sp/>createSubDevices(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_device_partition_property<sp/>*properties,</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VECTOR_CLASS&lt;Device&gt;<sp/>*devices)<sp/>{</highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_uint<sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>clCreateSubDevices(object_,<sp/>properties,<sp/>0,<sp/>NULL,<sp/>&amp;n);</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(err,<sp/>__CREATE_SUB_DEVICES);</highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_device_id<sp/>*ids<sp/>=<sp/>(cl_device_id<sp/>*)alloca(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cl_device_id));</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>clCreateSubDevices(object_,<sp/>properties,<sp/>n,<sp/>ids,<sp/>NULL);</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(err,<sp/>__CREATE_SUB_DEVICES);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1958"><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/><sp/>devices-&gt;assign(&amp;ids[0],<sp/>&amp;ids[n]);</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1968"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_CL_DEVICE_FISSION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"><sp/><sp/>cl_int<sp/>createSubDevices(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_device_partition_property_ext<sp/>*properties,</highlight></codeline>
<codeline lineno="1970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VECTOR_CLASS&lt;Device&gt;<sp/>*devices)<sp/>{</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>CL_API_ENTRY<sp/>cl_int(CL_API_CALL<sp/>*<sp/>PFN_clCreateSubDevicesEXT)(</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_device_id<sp/></highlight><highlight class="comment">/*in_device*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_device_partition_property_ext<sp/>*<sp/></highlight><highlight class="comment">/*<sp/>properties<sp/>*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_uint<sp/></highlight><highlight class="comment">/*num_entries*/</highlight><highlight class="normal">,<sp/>cl_device_id<sp/>*<sp/></highlight><highlight class="comment">/*out_devices*/</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_uint<sp/>*<sp/></highlight><highlight class="comment">/*num_devices*/</highlight><highlight class="normal">)<sp/>CL_EXT_SUFFIX__VERSION_1_1;</highlight></codeline>
<codeline lineno="1976"><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PFN_clCreateSubDevicesEXT<sp/>pfn_clCreateSubDevicesEXT<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/><sp/>__INIT_CL_EXT_FCN_PTR(clCreateSubDevicesEXT);</highlight></codeline>
<codeline lineno="1979"><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_uint<sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>pfn_clCreateSubDevicesEXT(object_,<sp/>properties,<sp/>0,<sp/>NULL,<sp/>&amp;n);</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(err,<sp/>__CREATE_SUB_DEVICES);</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1985"><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_device_id<sp/>*ids<sp/>=<sp/>(cl_device_id<sp/>*)alloca(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cl_device_id));</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>pfn_clCreateSubDevicesEXT(object_,<sp/>properties,<sp/>n,<sp/>ids,<sp/>NULL);</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(err,<sp/>__CREATE_SUB_DEVICES);</highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><sp/>devices-&gt;assign(&amp;ids[0],<sp/>&amp;ids[n]);</highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="1995"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(USE_CL_DEVICE_FISSION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal">};</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight></codeline>
<codeline lineno="2006" refid="classcl_1_1_platform" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1_platform" kindref="compound">Platform</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper</ref>&lt;cl_platform_id&gt;<sp/>{</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2009" refid="classcl_1_1_platform_1a616344e02c3723347c752c02b7015212" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_platform_1a616344e02c3723347c752c02b7015212" kindref="member">Platform</ref>()<sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;()<sp/>{}</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight></codeline>
<codeline lineno="2016" refid="classcl_1_1_platform_1a526f9d24eb15ff4531904a68c2fad7b3" refkind="member"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/><ref refid="classcl_1_1_platform_1a526f9d24eb15ff4531904a68c2fad7b3" kindref="member">Platform</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_platform_id<sp/>&amp;platform)</highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;(platform)<sp/>{}</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight></codeline>
<codeline lineno="2024" refid="classcl_1_1_platform_1aeaee2d9f15f2927c4a0467cc734a29a3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_platform" kindref="compound">Platform</ref><sp/>&amp;<ref refid="classcl_1_1_platform_1aeaee2d9f15f2927c4a0467cc734a29a3" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_platform_id<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;::operator=</ref>(rhs);</highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight></codeline>
<codeline lineno="2030" refid="classcl_1_1_platform_1aa58f213a48d2a4b6342a595f2940f852" refkind="member"><highlight class="normal"><sp/><sp/>cl_int<sp/><ref refid="classcl_1_1_platform_1aa58f213a48d2a4b6342a595f2940f852" kindref="member">getInfo</ref>(cl_platform_info<sp/>name,<sp/><ref refid="namespacecl_1ad3ff55c5fe80ec84842876af323559c7" kindref="member">STRING_CLASS</ref><sp/>*param)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::getInfo(&amp;::clGetPlatformInfo,<sp/>object_,<sp/>name,<sp/>param),</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__GET_PLATFORM_INFO_ERR);</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;cl_</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name&gt;</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits&lt;detail::cl_platform_info, name&gt;::param_type</ref></highlight></codeline>
<codeline lineno="2039" refid="classcl_1_1_platform_1a436c09964ac6314a3763f5c15fb92e7d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_platform_1a436c09964ac6314a3763f5c15fb92e7d" kindref="member">getInfo</ref>(cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits&lt;detail::cl_platform_info, name&gt;::param_type</ref></highlight></codeline>
<codeline lineno="2041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param;</highlight></codeline>
<codeline lineno="2042"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>result<sp/>=<sp/>getInfo(name,<sp/>&amp;param);</highlight></codeline>
<codeline lineno="2043"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2048"><highlight class="normal"></highlight></codeline>
<codeline lineno="2053" refid="classcl_1_1_platform_1a8d2e984d5a25e6db87fee4eb358c134e" refkind="member"><highlight class="normal"><sp/><sp/>cl_int<sp/><ref refid="classcl_1_1_platform_1a8d2e984d5a25e6db87fee4eb358c134e" kindref="member">getDevices</ref>(cl_device_type<sp/>type,<sp/>VECTOR_CLASS&lt;Device&gt;<sp/>*devices)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_uint<sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devices<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(CL_INVALID_ARG_VALUE,<sp/>__GET_DEVICE_IDS_ERR);</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>::clGetDeviceIDs(object_,<sp/>type,<sp/>0,<sp/>NULL,<sp/>&amp;n);</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="2060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(err,<sp/>__GET_DEVICE_IDS_ERR);</highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_device_id<sp/>*ids<sp/>=<sp/>(cl_device_id<sp/>*)alloca(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cl_device_id));</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>::clGetDeviceIDs(object_,<sp/>type,<sp/>n,<sp/>ids,<sp/>NULL);</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(err,<sp/>__GET_DEVICE_IDS_ERR);</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2068"><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/><sp/>devices-&gt;assign(&amp;ids[0],<sp/>&amp;ids[n]);</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_DX_INTEROP)</highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/>cl_int<sp/>getDevices(cl_d3d10_device_source_khr<sp/>d3d_device_source,</highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*d3d_object,<sp/>cl_d3d10_device_set_khr<sp/>d3d_device_set,</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VECTOR_CLASS&lt;Device&gt;<sp/>*devices)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>CL_API_ENTRY<sp/>cl_int(CL_API_CALL<sp/>*<sp/>PFN_clGetDeviceIDsFromD3D10KHR)(</highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_platform_id<sp/>platform,<sp/>cl_d3d10_device_source_khr<sp/>d3d_device_source,</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*d3d_object,<sp/>cl_d3d10_device_set_khr<sp/>d3d_device_set,</highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_uint<sp/>num_entries,<sp/>cl_device_id<sp/>*devices,<sp/>cl_uint<sp/>*num_devices);</highlight></codeline>
<codeline lineno="2104"><highlight class="normal"></highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devices<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(CL_INVALID_ARG_VALUE,<sp/>__GET_DEVICE_IDS_ERR);</highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PFN_clGetDeviceIDsFromD3D10KHR<sp/>pfn_clGetDeviceIDsFromD3D10KHR<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/><sp/>__INIT_CL_EXT_FCN_PTR_PLATFORM(object_,<sp/>clGetDeviceIDsFromD3D10KHR);</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"></highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_uint<sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>pfn_clGetDeviceIDsFromD3D10KHR(</highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>d3d_device_source,<sp/>d3d_object,<sp/>d3d_device_set,<sp/>0,<sp/>NULL,<sp/>&amp;n);</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(err,<sp/>__GET_DEVICE_IDS_ERR);</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2118"><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_device_id<sp/>*ids<sp/>=<sp/>(cl_device_id<sp/>*)alloca(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cl_device_id));</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>pfn_clGetDeviceIDsFromD3D10KHR(object_,<sp/>d3d_device_source,<sp/>d3d_object,</highlight></codeline>
<codeline lineno="2121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>d3d_device_set,<sp/>n,<sp/>ids,<sp/>NULL);</highlight></codeline>
<codeline lineno="2122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="2123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(err,<sp/>__GET_DEVICE_IDS_ERR);</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/><sp/>devices-&gt;assign(&amp;ids[0],<sp/>&amp;ids[n]);</highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2130"><highlight class="normal"></highlight></codeline>
<codeline lineno="2135" refid="classcl_1_1_platform_1af411de5b4cb0f553ea1dc2147e58d837" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/><ref refid="classcl_1_1_platform_1af411de5b4cb0f553ea1dc2147e58d837" kindref="member">get</ref>(VECTOR_CLASS&lt;Platform&gt;<sp/>*platforms)<sp/>{</highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_uint<sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2137"><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(platforms<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(CL_INVALID_ARG_VALUE,<sp/>__GET_PLATFORM_IDS_ERR);</highlight></codeline>
<codeline lineno="2140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>::clGetPlatformIDs(0,<sp/>NULL,<sp/>&amp;n);</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(err,<sp/>__GET_PLATFORM_IDS_ERR);</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2146"><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_platform_id<sp/>*ids<sp/>=<sp/>(cl_platform_id<sp/>*)alloca(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cl_platform_id));</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>::clGetPlatformIDs(n,<sp/>ids,<sp/>NULL);</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(err,<sp/>__GET_PLATFORM_IDS_ERR);</highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/>platforms-&gt;assign(&amp;ids[0],<sp/>&amp;ids[n]);</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"></highlight></codeline>
<codeline lineno="2161" refid="classcl_1_1_platform_1a2a60edf4cfdfda695919c2879a9ae64e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/><ref refid="classcl_1_1_platform_1a2a60edf4cfdfda695919c2879a9ae64e" kindref="member">get</ref>(<ref refid="classcl_1_1_platform" kindref="compound">Platform</ref><sp/>*platform)<sp/>{</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_uint<sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(platform<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(CL_INVALID_ARG_VALUE,<sp/>__GET_PLATFORM_IDS_ERR);</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>::clGetPlatformIDs(0,<sp/>NULL,<sp/>&amp;n);</highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(err,<sp/>__GET_PLATFORM_IDS_ERR);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"></highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_platform_id<sp/>*ids<sp/>=<sp/>(cl_platform_id<sp/>*)alloca(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cl_platform_id));</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>::clGetPlatformIDs(n,<sp/>ids,<sp/>NULL);</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(err,<sp/>__GET_PLATFORM_IDS_ERR);</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/><sp/>*platform<sp/>=<sp/>ids[0];</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2187" refid="classcl_1_1_platform_1a87f6baad09c31e9f2bc8755a61439d04" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_platform" kindref="compound">Platform</ref><sp/><ref refid="classcl_1_1_platform_1a87f6baad09c31e9f2bc8755a61439d04" kindref="member">get</ref>(cl_int<sp/>*errResult<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_platform" kindref="compound">Platform</ref><sp/>platform;</highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_uint<sp/>n<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>::clGetPlatformIDs(0,<sp/>NULL,<sp/>&amp;n);</highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(err,<sp/>__GET_PLATFORM_IDS_ERR);</highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errResult<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errResult<sp/>=<sp/>err;</highlight></codeline>
<codeline lineno="2195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_platform" kindref="compound">Platform</ref>();</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_platform_id<sp/>*ids<sp/>=<sp/>(cl_platform_id<sp/>*)alloca(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cl_platform_id));</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>::clGetPlatformIDs(n,<sp/>ids,<sp/>NULL);</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(err,<sp/>__GET_PLATFORM_IDS_ERR);</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(errResult<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*errResult<sp/>=<sp/>err;</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_platform" kindref="compound">Platform</ref>();</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_platform" kindref="compound">Platform</ref>(ids[0]);</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2212"><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_platform" kindref="compound">Platform</ref><sp/>getDefault(cl_int<sp/>*errResult<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>get(errResult);</highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/>cl_int<sp/>unloadCompiler()<sp/>{<sp/>return<sp/>::clUnloadPlatformCompiler(object_);<sp/>}</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2221"><highlight class="normal">};<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>class<sp/>Platform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_USE_DEPRECATED_OPENCL_1_1_APIS)<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="2227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(defined(CL_VERSION_1_1)<sp/>&amp;&amp;<sp/>!defined(CL_VERSION_1_2))</highlight></codeline>
<codeline lineno="2232"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>CL_EXT_PREFIX__VERSION_1_1_DEPRECATED<sp/>cl_int<sp/>UnloadCompiler()</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/>CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED;</highlight></codeline>
<codeline lineno="2234"><highlight class="normal">inline<sp/>cl_int<sp/>UnloadCompiler()<sp/>{<sp/>return<sp/>::clUnloadCompiler();<sp/>}</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2236"><highlight class="normal"></highlight></codeline>
<codeline lineno="2245" refid="classcl_1_1_context" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper</ref>&lt;cl_context&gt;<sp/>{</highlight></codeline>
<codeline lineno="2246"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2247"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::atomic&lt;int&gt;<sp/>default_initialized_;</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>default_initialized_;</highlight></codeline>
<codeline lineno="2251"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>default_;</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>cl_int<sp/>default_error_;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2260" refid="classcl_1_1_context_1a1a8dcea1218d900b914d8fd86d67e336" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_context_1a1a8dcea1218d900b914d8fd86d67e336" kindref="member">Context</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Device&gt;<sp/>&amp;devices,</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_context_properties<sp/>*properties<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(CL_CALLBACK<sp/>*notifyFptr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/>::size_t,</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/>NULL,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/><sp/>::size_t<sp/>numDevices<sp/>=<sp/>devices.size();</highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_device_id<sp/>*deviceIDs<sp/>=</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cl_device_id<sp/>*)alloca(numDevices<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cl_device_id));</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(::size_t<sp/>deviceIndex<sp/>=<sp/>0;<sp/>deviceIndex<sp/>&lt;<sp/>numDevices;<sp/>++deviceIndex)<sp/>{</highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deviceIDs[deviceIndex]<sp/>=<sp/>(devices[deviceIndex])();</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateContext(properties,<sp/>(cl_uint)numDevices,<sp/>deviceIDs,</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyFptr,<sp/>data,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="2276"><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_CONTEXT_ERR);</highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_device" kindref="compound">Device</ref><sp/>&amp;device,<sp/>cl_context_properties<sp/>*properties<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(CL_CALLBACK<sp/>*notifyFptr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/>::size_t,</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/>NULL,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_device_id<sp/>deviceID<sp/>=<sp/>device();</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clCreateContext(properties,<sp/>1,<sp/>&amp;deviceID,<sp/>notifyFptr,<sp/>data,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_CONTEXT_ERR);</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight></codeline>
<codeline lineno="2305" refid="classcl_1_1_context_1a674f554c347eac35295908b529aaa382" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_context_1a674f554c347eac35295908b529aaa382" kindref="member">Context</ref>(cl_device_type<sp/>type,<sp/>cl_context_properties<sp/>*properties<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(CL_CALLBACK<sp/>*notifyFptr)(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/>::size_t,</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/>NULL,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__APPLE__)<sp/>&amp;&amp;<sp/>!defined(__MACOS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_context_properties<sp/>prop[4]<sp/>=<sp/>{CL_CONTEXT_PLATFORM,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(properties<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>a<sp/>valid<sp/>platform<sp/>ID<sp/>as<sp/>we<sp/>cannot<sp/>send<sp/>in<sp/>a<sp/>blank<sp/>one</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>VECTOR_CLASS&lt;Platform&gt;<sp/>platforms;</highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>Platform::get(&amp;platforms);</highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_CONTEXT_FROM_TYPE_ERR);</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Check<sp/>the<sp/>platforms<sp/>we<sp/>found<sp/>for<sp/>a<sp/>device<sp/>of<sp/>our<sp/>specified<sp/>type</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cl_context_properties<sp/>platform_id<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>platforms.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VECTOR_CLASS&lt;Device&gt;<sp/>devices;</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__CL_ENABLE_EXCEPTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">try</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight></codeline>
<codeline lineno="2336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>platforms[i].getDevices(type,<sp/>&amp;devices);</highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(__CL_ENABLE_EXCEPTIONS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">catch</highlight><highlight class="normal"><sp/>(Error)<sp/>{</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Catch<sp/>if<sp/>exceptions<sp/>are<sp/>enabled<sp/>as<sp/>we<sp/>don&apos;t<sp/>want<sp/>to<sp/>exit<sp/>if<sp/>first</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>platform<sp/>has<sp/>no<sp/>devices<sp/>of<sp/>type<sp/>We<sp/>do<sp/>error<sp/>checking<sp/>next<sp/>anyway,<sp/>and</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>can<sp/>throw<sp/>there<sp/>if<sp/>needed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>squash<sp/>CL_SUCCESS<sp/>and<sp/>CL_DEVICE_NOT_FOUND</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS<sp/>&amp;&amp;<sp/>error<sp/>!=<sp/>CL_DEVICE_NOT_FOUND)<sp/>{</highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_CONTEXT_FROM_TYPE_ERR);</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(devices.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>platform_id<sp/>=<sp/>(cl_context_properties)platforms[i]();</highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(platform_id<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(CL_DEVICE_NOT_FOUND,<sp/>__CREATE_CONTEXT_FROM_TYPE_ERR);</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>CL_DEVICE_NOT_FOUND;</highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>prop[1]<sp/>=<sp/>platform_id;</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>properties<sp/>=<sp/>&amp;prop[0];</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=</highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clCreateContextFromType(properties,<sp/>type,<sp/>notifyFptr,<sp/>data,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_CONTEXT_FROM_TYPE_ERR);</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2380"><highlight class="normal"></highlight></codeline>
<codeline lineno="2384" refid="classcl_1_1_context_1ae0a598440f95bc8457433a088cef17a1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_context_1ae0a598440f95bc8457433a088cef17a1" kindref="member">Context</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;ctx)<sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;(ctx)<sp/>{}</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"></highlight></codeline>
<codeline lineno="2389" refid="classcl_1_1_context_1ae82122ba42017504ed23c4bb8f4471cb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;<ref refid="classcl_1_1_context_1ae82122ba42017504ed23c4bb8f4471cb" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;ctx)<sp/>{</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;::operator=</ref>(ctx);</highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2393"><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref>(<ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;&amp;ctx)<sp/>CL_HPP_NOEXCEPT</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;</ref>(std::move(ctx))<sp/>{}</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/>Context<sp/>&amp;operator=(Context<sp/>&amp;&amp;ctx)<sp/>{</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::Wrapper&lt;cl_type&gt;::operator=(std::move(ctx));</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal"></highlight></codeline>
<codeline lineno="2415" refid="classcl_1_1_context_1ad180f6f7d8b5a95710ab72f96162b051" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/><ref refid="classcl_1_1_context_1ad180f6f7d8b5a95710ab72f96162b051" kindref="member">getDefault</ref>(cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state<sp/>=<sp/>detail::compare_exchange(&amp;default_initialized_,</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__DEFAULT_BEING_INITIALIZED,</highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__DEFAULT_NOT_INITIALIZED);</highlight></codeline>
<codeline lineno="2419"><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>&amp;<sp/>__DEFAULT_INITIALIZED)<sp/>{</highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>default_error_;</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_;</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>&amp;<sp/>__DEFAULT_BEING_INITIALIZED)<sp/>{</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>writes<sp/>will<sp/>propagate<sp/>eventually...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(default_initialized_<sp/>!=<sp/>__DEFAULT_INITIALIZED)<sp/>{</highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::fence();</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2432"><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>default_error_;</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_;</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/>default_<sp/>=<sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref>(CL_DEVICE_TYPE_DEFAULT,<sp/>NULL,<sp/>NULL,<sp/>NULL,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::fence();</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"></highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/>default_error_<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>writes<sp/>will<sp/>propagate<sp/>eventually...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2446"><highlight class="normal"><sp/><sp/><sp/><sp/>default_initialized_<sp/>=<sp/>__DEFAULT_INITIALIZED;</highlight></codeline>
<codeline lineno="2447"><highlight class="normal"></highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::fence();</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>default_error_;</highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_;</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight></codeline>
<codeline lineno="2457" refid="classcl_1_1_context_1a8f7e1c72445ca6e249bc7a6c9278984d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_context_1a8f7e1c72445ca6e249bc7a6c9278984d" kindref="member">Context</ref>()<sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;()<sp/>{}</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight></codeline>
<codeline lineno="2464" refid="classcl_1_1_context_1addb62b5b7e7cfa1eafd86257603df7a8" refkind="member"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/><ref refid="classcl_1_1_context_1addb62b5b7e7cfa1eafd86257603df7a8" kindref="member">Context</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_context<sp/>&amp;context)</highlight></codeline>
<codeline lineno="2465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;(context)<sp/>{}</highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight></codeline>
<codeline lineno="2472" refid="classcl_1_1_context_1a03a8dbda2ff24417f199618fc3a90568" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;<ref refid="classcl_1_1_context_1a03a8dbda2ff24417f199618fc3a90568" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_context<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;::operator=</ref>(rhs);</highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"></highlight></codeline>
<codeline lineno="2478" refid="classcl_1_1_context_1a979d15f9228089af2a657a523b1186e8" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>cl_int<sp/><ref refid="classcl_1_1_context_1a979d15f9228089af2a657a523b1186e8" kindref="member">getInfo</ref>(cl_context_info<sp/>name,<sp/>T<sp/>*param)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::getInfo(&amp;::clGetContextInfo,<sp/>object_,<sp/>name,<sp/>param),</highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__GET_CONTEXT_INFO_ERR);</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2483"><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;cl_</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name&gt;</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits&lt;detail::cl_context_info, name&gt;::param_type</ref></highlight></codeline>
<codeline lineno="2487" refid="classcl_1_1_context_1a4f82642c74714a1686888bab77f69493" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_context_1a4f82642c74714a1686888bab77f69493" kindref="member">getInfo</ref>(cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits&lt;detail::cl_context_info, name&gt;::param_type</ref></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param;</highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>result<sp/>=<sp/>getInfo(name,<sp/>&amp;param);</highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2496"><highlight class="normal"></highlight></codeline>
<codeline lineno="2501" refid="classcl_1_1_context_1a0211b172b0d981cdb55e554574377b37" refkind="member"><highlight class="normal"><sp/><sp/>cl_int<sp/><ref refid="classcl_1_1_context_1a0211b172b0d981cdb55e554574377b37" kindref="member">getSupportedImageFormats</ref>(cl_mem_flags<sp/>flags,<sp/>cl_mem_object_type<sp/>type,</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>VECTOR_CLASS&lt;ImageFormat&gt;<sp/>*formats)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_uint<sp/>numEntries;</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"></highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!formats)<sp/>{</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>::clGetSupportedImageFormats(object_,<sp/>flags,<sp/>type,<sp/>0,<sp/>NULL,</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;numEntries);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(err,<sp/>__GET_SUPPORTED_IMAGE_FORMATS_ERR);</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(numEntries<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="structcl_1_1_image_format" kindref="compound">ImageFormat</ref><sp/>*value<sp/>=</highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<ref refid="structcl_1_1_image_format" kindref="compound">ImageFormat</ref><sp/>*)alloca(numEntries<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="structcl_1_1_image_format" kindref="compound">ImageFormat</ref>));</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>err<sp/>=<sp/>::clGetSupportedImageFormats(object_,<sp/>flags,<sp/>type,<sp/>numEntries,</highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cl_image_format<sp/>*)value,<sp/>NULL);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(err,<sp/>__GET_SUPPORTED_IMAGE_FORMATS_ERR);</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>formats-&gt;assign(&amp;value[0],<sp/>&amp;value[numEntries]);</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>formats-&gt;clear();</highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2530"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"></highlight></codeline>
<codeline lineno="2532" refid="classcl_1_1_device_1a0de0c069e06a2cbc5193d15c4f9ed27f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_device" kindref="compound">Device</ref><sp/>Device::getDefault(cl_int<sp/>*err)<sp/>{</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_device" kindref="compound">Device</ref><sp/>device;</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>context<sp/>=<sp/>Context::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_CONTEXT_ERR);</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><sp/>device<sp/>=<sp/>context.<ref refid="classcl_1_1_context_1a979d15f9228089af2a657a523b1186e8" kindref="member">getInfo</ref>&lt;CL_CONTEXT_DEVICES&gt;()[0];</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"></highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>device;</highlight></codeline>
<codeline lineno="2551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2552"><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal">__declspec(selectany)<sp/>std::atomic&lt;int&gt;<sp/>Context::default_initialized_;</highlight></codeline>
<codeline lineno="2556"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal">__declspec(selectany)<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Context::default_initialized_<sp/>=</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/>__DEFAULT_NOT_INITIALIZED;</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal">__declspec(selectany)<sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>Context::default_;</highlight></codeline>
<codeline lineno="2561"><highlight class="normal">__declspec(selectany)<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>cl_int<sp/>Context::default_error_<sp/>=<sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">//<sp/>!_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="normal">__attribute__((weak))<sp/>std::atomic&lt;int&gt;<sp/>Context::default_initialized_;</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal">__attribute__((weak))<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Context::default_initialized_<sp/>=</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/><sp/>__DEFAULT_NOT_INITIALIZED;</highlight></codeline>
<codeline lineno="2568"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal">__attribute__((weak))<sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>Context::default_;</highlight></codeline>
<codeline lineno="2570"><highlight class="normal">__attribute__((weak))<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>cl_int<sp/>Context::default_error_<sp/>=<sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"></highlight></codeline>
<codeline lineno="2581" refid="classcl_1_1_event" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper</ref>&lt;cl_event&gt;<sp/>{</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2584" refid="classcl_1_1_event_1a90e01689f7b394fc003d66c48a7f6f95" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event_1a90e01689f7b394fc003d66c48a7f6f95" kindref="member">Event</ref>()<sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;()<sp/>{}</highlight></codeline>
<codeline lineno="2585"><highlight class="normal"></highlight></codeline>
<codeline lineno="2591" refid="classcl_1_1_event_1ae0f6ce1b52cb9832128fd3e6c1ec9547" refkind="member"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/><ref refid="classcl_1_1_event_1ae0f6ce1b52cb9832128fd3e6c1ec9547" kindref="member">Event</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_event<sp/>&amp;event)</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;(event)<sp/>{}</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight></codeline>
<codeline lineno="2599" refid="classcl_1_1_event_1abb50980a18eae852375f7d328d46d3cd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>&amp;<ref refid="classcl_1_1_event_1abb50980a18eae852375f7d328d46d3cd" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_event<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;::operator=</ref>(rhs);</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"></highlight></codeline>
<codeline lineno="2605" refid="classcl_1_1_event_1a4ad1d3040fcb24188f1ac2cd73591252" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>cl_int<sp/><ref refid="classcl_1_1_event_1a4ad1d3040fcb24188f1ac2cd73591252" kindref="member">getInfo</ref>(cl_event_info<sp/>name,<sp/>T<sp/>*param)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::getInfo(&amp;::clGetEventInfo,<sp/>object_,<sp/>name,<sp/>param),</highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__GET_EVENT_INFO_ERR);</highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;cl_</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name&gt;</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits&lt;detail::cl_event_info, name&gt;::param_type</ref></highlight></codeline>
<codeline lineno="2614" refid="classcl_1_1_event_1a78c94797afab6aa2f21bf3c2a476804d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event_1a78c94797afab6aa2f21bf3c2a476804d" kindref="member">getInfo</ref>(cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits&lt;detail::cl_event_info, name&gt;::param_type</ref></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param;</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>result<sp/>=<sp/>getInfo(name,<sp/>&amp;param);</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="2626" refid="classcl_1_1_event_1a3f5ef317602809c4a99d6f244f758b5f" refkind="member"><highlight class="normal"><sp/><sp/>cl_int<sp/><ref refid="classcl_1_1_event_1a3f5ef317602809c4a99d6f244f758b5f" kindref="member">getProfilingInfo</ref>(cl_profiling_info<sp/>name,<sp/>T<sp/>*param)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::getInfo(&amp;::clGetEventProfilingInfo,<sp/>object_,<sp/>name,<sp/>param),</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__GET_EVENT_PROFILE_INFO_ERR);</highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"></highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;cl_</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name&gt;</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits&lt;detail::cl_profiling_info, name&gt;::param_type</ref></highlight></codeline>
<codeline lineno="2635" refid="classcl_1_1_event_1a8eacc834b594c290ed019b32bdd73938" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event_1a8eacc834b594c290ed019b32bdd73938" kindref="member">getProfilingInfo</ref>(cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits&lt;detail::cl_profiling_info, name&gt;::param_type</ref></highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param;</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>result<sp/>=<sp/>getProfilingInfo(name,<sp/>&amp;param);</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"></highlight></codeline>
<codeline lineno="2649" refid="classcl_1_1_event_1a51f83064c2024df649667071e81fb847" refkind="member"><highlight class="normal"><sp/><sp/>cl_int<sp/><ref refid="classcl_1_1_event_1a51f83064c2024df649667071e81fb847" kindref="member">wait</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(::clWaitForEvents(1,<sp/>&amp;object_),</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__WAIT_FOR_EVENTS_ERR);</highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2653"><highlight class="normal"></highlight></codeline>
<codeline lineno="2654"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_1)</highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/>cl_int<sp/>setCallback(cl_int<sp/>type,</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(CL_CALLBACK<sp/>*pfn_notify)(cl_event,<sp/>cl_int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),</highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clSetEventCallback(object_,<sp/>type,<sp/>pfn_notify,<sp/>user_data),</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__SET_EVENT_CALLBACK_ERR);</highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2667"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"></highlight></codeline>
<codeline lineno="2673" refid="classcl_1_1_event_1ac28c9c7bec902c477913945f7dcecf42" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/><ref refid="classcl_1_1_event_1ac28c9c7bec902c477913945f7dcecf42" kindref="member">waitForEvents</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>&amp;events)<sp/>{</highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clWaitForEvents((cl_uint)events.size(),</highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events.size()<sp/>&gt;<sp/>0)<sp/>?<sp/>(cl_event<sp/>*)&amp;events.front()</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__WAIT_FOR_EVENTS_ERR);</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2680"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight></codeline>
<codeline lineno="2682"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_1)</highlight></codeline>
<codeline lineno="2687"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">UserEvent<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Event<sp/>{</highlight></codeline>
<codeline lineno="2688"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2693"><highlight class="normal"><sp/><sp/>UserEvent(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Context<sp/>&amp;context,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateUserEvent(context(),<sp/>&amp;error);</highlight></codeline>
<codeline lineno="2696"><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_USER_EVENT_ERR);</highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"></highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/>UserEvent()<sp/>:<sp/>Event()<sp/>{}</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/>cl_int<sp/>setStatus(cl_int<sp/>status)<sp/>{</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(::clSetUserEventStatus(object_,<sp/>status),</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__SET_USER_EVENT_STATUS_ERR);</highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2714"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2716"><highlight class="normal"></highlight></codeline>
<codeline lineno="2721"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>cl_int<sp/>WaitForEvents(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>&amp;events)<sp/>{</highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(::clWaitForEvents((cl_uint)events.size(),</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events.front()</highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__WAIT_FOR_EVENTS_ERR);</highlight></codeline>
<codeline lineno="2727"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2728"><highlight class="normal"></highlight></codeline>
<codeline lineno="2737" refid="classcl_1_1_memory" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper</ref>&lt;cl_mem&gt;<sp/>{</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2740" refid="classcl_1_1_memory_1a9926612772ae6e016f1118ef4148da22" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_memory_1a9926612772ae6e016f1118ef4148da22" kindref="member">Memory</ref>()<sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;()<sp/>{}</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"></highlight></codeline>
<codeline lineno="2747" refid="classcl_1_1_memory_1af53ac1080cb1e14cd079bb38680defbc" refkind="member"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/><ref refid="classcl_1_1_memory_1af53ac1080cb1e14cd079bb38680defbc" kindref="member">Memory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;memory)</highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;(memory)<sp/>{}</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"></highlight></codeline>
<codeline lineno="2755" refid="classcl_1_1_memory_1aa8815cba4b7ef0dd5317e60fe9ff719b" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref><sp/>&amp;<ref refid="classcl_1_1_memory_1aa8815cba4b7ef0dd5317e60fe9ff719b" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;::operator=</ref>(rhs);</highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"></highlight></codeline>
<codeline lineno="2763" refid="classcl_1_1_memory_1a23691d3d5e70f47538f1cde3741b0367" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_memory_1a23691d3d5e70f47538f1cde3741b0367" kindref="member">Memory</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref><sp/>&amp;mem)<sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;(mem)<sp/>{}</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"></highlight></codeline>
<codeline lineno="2768" refid="classcl_1_1_memory_1a03b06142c52b67a38d70231009e54612" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref><sp/>&amp;<ref refid="classcl_1_1_memory_1a03b06142c52b67a38d70231009e54612" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref><sp/>&amp;mem)<sp/>{</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;::operator=</ref>(mem);</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2772"><highlight class="normal"></highlight></codeline>
<codeline lineno="2773"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref>(<ref refid="classcl_1_1_memory" kindref="compound">Memory</ref><sp/>&amp;&amp;mem)<sp/>CL_HPP_NOEXCEPT</highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;</ref>(std::move(mem))<sp/>{}</highlight></codeline>
<codeline lineno="2779"><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"><sp/><sp/>Memory<sp/>&amp;operator=(Memory<sp/>&amp;&amp;mem)<sp/>{</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::Wrapper&lt;cl_type&gt;::operator=(std::move(mem));</highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2787"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal"></highlight></codeline>
<codeline lineno="2790" refid="classcl_1_1_memory_1ab86d24b2a4f9a7090148fb8e77d73135" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>cl_int<sp/><ref refid="classcl_1_1_memory_1ab86d24b2a4f9a7090148fb8e77d73135" kindref="member">getInfo</ref>(cl_mem_info<sp/>name,<sp/>T<sp/>*param)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::getInfo(&amp;::clGetMemObjectInfo,<sp/>object_,<sp/>name,<sp/>param),</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__GET_MEM_OBJECT_INFO_ERR);</highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2795"><highlight class="normal"></highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;cl_</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name&gt;</highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits&lt;detail::cl_mem_info, name&gt;::param_type</ref></highlight></codeline>
<codeline lineno="2799" refid="classcl_1_1_memory_1a8795d4f88a9f16cc4b4a0af07cf4d335" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_memory_1a8795d4f88a9f16cc4b4a0af07cf4d335" kindref="member">getInfo</ref>(cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits&lt;detail::cl_mem_info, name&gt;::param_type</ref><sp/>param;</highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>result<sp/>=<sp/>getInfo(name,<sp/>&amp;param);</highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2807"><highlight class="normal"></highlight></codeline>
<codeline lineno="2808"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_1)</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/>cl_int<sp/>setDestructorCallback(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(CL_CALLBACK<sp/>*pfn_notify)(cl_mem,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*user_data<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clSetMemObjectDestructorCallback(object_,<sp/>pfn_notify,<sp/>user_data),</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__SET_MEM_OBJECT_DESTRUCTOR_CALLBACK_ERR);</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal">};</highlight></codeline>
<codeline lineno="2830"><highlight class="normal"></highlight></codeline>
<codeline lineno="2831"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Pre-declare<sp/>copy<sp/>functions</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Buffer;</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IteratorType&gt;</highlight></codeline>
<codeline lineno="2834"><highlight class="normal">cl_int<sp/><ref refid="namespacecl_1a1197a833cdd6664f206b079f2bebd2eb" kindref="member">copy</ref>(IteratorType<sp/>startIterator,<sp/>IteratorType<sp/>endIterator,</highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_buffer" kindref="compound">cl::Buffer</ref><sp/>&amp;buffer);</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IteratorType&gt;</highlight></codeline>
<codeline lineno="2837"><highlight class="normal">cl_int<sp/><ref refid="namespacecl_1a1197a833cdd6664f206b079f2bebd2eb" kindref="member">copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_buffer" kindref="compound">cl::Buffer</ref><sp/>&amp;buffer,<sp/>IteratorType<sp/>startIterator,</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IteratorType<sp/>endIterator);</highlight></codeline>
<codeline lineno="2839"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IteratorType&gt;</highlight></codeline>
<codeline lineno="2840"><highlight class="normal">cl_int<sp/><ref refid="namespacecl_1a1197a833cdd6664f206b079f2bebd2eb" kindref="member">copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CommandQueue<sp/>&amp;queue,<sp/>IteratorType<sp/>startIterator,</highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IteratorType<sp/>endIterator,<sp/><ref refid="classcl_1_1_buffer" kindref="compound">cl::Buffer</ref><sp/>&amp;buffer);</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IteratorType&gt;</highlight></codeline>
<codeline lineno="2843"><highlight class="normal">cl_int<sp/><ref refid="namespacecl_1a1197a833cdd6664f206b079f2bebd2eb" kindref="member">copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>CommandQueue<sp/>&amp;queue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_buffer" kindref="compound">cl::Buffer</ref><sp/>&amp;buffer,</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IteratorType<sp/>startIterator,<sp/>IteratorType<sp/>endIterator);</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"></highlight></codeline>
<codeline lineno="2852" refid="classcl_1_1_buffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1_buffer" kindref="compound">Buffer</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref><sp/>{</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2861" refid="classcl_1_1_buffer_1a8f9d6f5bc452c2171e8eaf6e49617268" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_1a8f9d6f5bc452c2171e8eaf6e49617268" kindref="member">Buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;context,<sp/>cl_mem_flags<sp/>flags,<sp/>::size_t<sp/>size,</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*host_ptr<sp/>=<sp/>NULL,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateBuffer(context(),<sp/>flags,<sp/>size,<sp/>host_ptr,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_BUFFER_ERR);</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2871"><highlight class="normal"></highlight></codeline>
<codeline lineno="2881" refid="classcl_1_1_buffer_1aad541314b64a8ac6e94ca50315d87678" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_1aad541314b64a8ac6e94ca50315d87678" kindref="member">Buffer</ref>(cl_mem_flags<sp/>flags,<sp/>::size_t<sp/>size,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*host_ptr<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="2884"><highlight class="normal"></highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>context<sp/>=<sp/>Context::getDefault(err);</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateBuffer(context(),<sp/>flags,<sp/>size,<sp/>host_ptr,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="2888"><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_BUFFER_ERR);</highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"></highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IteratorType&gt;</highlight></codeline>
<codeline lineno="2901" refid="classcl_1_1_buffer_1aadd3663801107fabb88238565c55ba16" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_1aadd3663801107fabb88238565c55ba16" kindref="member">Buffer</ref>(IteratorType<sp/>startIterator,<sp/>IteratorType<sp/>endIterator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>readOnly,</highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useHostPtr<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::iterator_traits&lt;IteratorType&gt;::value_type<sp/>DataType;</highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="2905"><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_mem_flags<sp/>flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readOnly)<sp/>{</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>CL_MEM_READ_ONLY;</highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>CL_MEM_READ_WRITE;</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useHostPtr)<sp/>{</highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>CL_MEM_USE_HOST_PTR;</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"></highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/><sp/>::size_t<sp/>size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>(endIterator<sp/>-<sp/>startIterator);</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"></highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>context<sp/>=<sp/>Context::getDefault(err);</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useHostPtr)<sp/>{</highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>object_<sp/>=</highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clCreateBuffer(context(),<sp/>flags,<sp/>size,</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">DataType<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;*startIterator),<sp/>&amp;error);</highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateBuffer(context(),<sp/>flags,<sp/>size,<sp/>0,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2927"><highlight class="normal"></highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_BUFFER_ERR);</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"></highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!useHostPtr)<sp/>{</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="namespacecl_1a1197a833cdd6664f206b079f2bebd2eb" kindref="member">cl::copy</ref>(startIterator,<sp/>endIterator,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_BUFFER_ERR);</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"></highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IteratorType&gt;</highlight></codeline>
<codeline lineno="2948" refid="classcl_1_1_buffer_1a96e0d46de95bd3f335c39f5b4f10c640" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_1a96e0d46de95bd3f335c39f5b4f10c640" kindref="member">Buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;context,<sp/>IteratorType<sp/>startIterator,</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IteratorType<sp/>endIterator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>readOnly,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useHostPtr<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_int<sp/>*err<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="2951"><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IteratorType&gt;</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer" kindref="compound">Buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>&amp;queue,<sp/>IteratorType<sp/>startIterator,</highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IteratorType<sp/>endIterator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>readOnly,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useHostPtr<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_int<sp/>*err<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="2961"><highlight class="normal"></highlight></codeline>
<codeline lineno="2963" refid="classcl_1_1_buffer_1a1c82aa24dd8a4d80b698605f60a26d71" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_1a1c82aa24dd8a4d80b698605f60a26d71" kindref="member">Buffer</ref>()<sp/>:<sp/><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="2964"><highlight class="normal"></highlight></codeline>
<codeline lineno="2969" refid="classcl_1_1_buffer_1ac980442b8e673fd6e4895ca7880b6b6b" refkind="member"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/><ref refid="classcl_1_1_buffer_1ac980442b8e673fd6e4895ca7880b6b6b" kindref="member">Buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;buffer)<sp/>:<sp/><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref>(buffer)<sp/>{}</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"></highlight></codeline>
<codeline lineno="2975" refid="classcl_1_1_buffer_1a7b4092e9d1481249a5111c523372bb19" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer" kindref="compound">Buffer</ref><sp/>&amp;<ref refid="classcl_1_1_buffer_1a7b4092e9d1481249a5111c523372bb19" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><sp/>Memory::operator=(rhs);</highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"></highlight></codeline>
<codeline lineno="2983" refid="classcl_1_1_buffer_1a2cfe3144f7d69d4b390edfa934641dcf" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_1a2cfe3144f7d69d4b390edfa934641dcf" kindref="member">Buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_buffer" kindref="compound">Buffer</ref><sp/>&amp;buf)<sp/>:<sp/><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref>(buf)<sp/>{}</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"></highlight></codeline>
<codeline lineno="2988" refid="classcl_1_1_buffer_1aded956cded7526705b2e734b00c8bb0d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer" kindref="compound">Buffer</ref><sp/>&amp;<ref refid="classcl_1_1_buffer_1aded956cded7526705b2e734b00c8bb0d" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_buffer" kindref="compound">Buffer</ref><sp/>&amp;buf)<sp/>{</highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/><sp/>Memory::operator=(buf);</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2991"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="2992"><highlight class="normal"></highlight></codeline>
<codeline lineno="2993"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer" kindref="compound">Buffer</ref>(<ref refid="classcl_1_1_buffer" kindref="compound">Buffer</ref><sp/>&amp;&amp;buf)<sp/>CL_HPP_NOEXCEPT<sp/>:<sp/><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref>(std::move(buf))<sp/>{}</highlight></codeline>
<codeline lineno="2998"><highlight class="normal"></highlight></codeline>
<codeline lineno="3002"><highlight class="normal"><sp/><sp/>Buffer<sp/>&amp;operator=(Buffer<sp/>&amp;&amp;buf)<sp/>{</highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><sp/>Memory::operator=(std::move(buf));</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3007"><highlight class="normal"></highlight></codeline>
<codeline lineno="3008"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_1)</highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/>Buffer<sp/>createSubBuffer(cl_mem_flags<sp/>flags,</highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_buffer_create_type<sp/>buffer_create_type,</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buffer_create_info,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffer<sp/>result;</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"><sp/><sp/><sp/><sp/>result.object_<sp/>=<sp/>::clCreateSubBuffer(object_,<sp/>flags,<sp/>buffer_create_type,</highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_create_info,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"></highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_SUBBUFFER_ERR);</highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3025"><highlight class="normal"></highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3028"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3029"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"></highlight></codeline>
<codeline lineno="3031"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_DX_INTEROP)</highlight></codeline>
<codeline lineno="3040"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">BufferD3D10<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Buffer<sp/>{</highlight></codeline>
<codeline lineno="3041"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>CL_API_ENTRY<sp/>cl_mem(CL_API_CALL<sp/>*PFN_clCreateFromD3D10BufferKHR)(</highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cl_context<sp/>context,<sp/>cl_mem_flags<sp/>flags,<sp/>ID3D10Buffer<sp/>*buffer,</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cl_int<sp/>*errcode_ret);</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"></highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/>BufferD3D10(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Context<sp/>&amp;context,<sp/>cl_mem_flags<sp/>flags,<sp/>ID3D10Buffer<sp/>*bufobj,</highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PFN_clCreateFromD3D10BufferKHR<sp/>pfn_clCreateFromD3D10BufferKHR<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"></highlight></codeline>
<codeline lineno="3055"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;cl_context_properties&gt;<sp/>props<sp/>=</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context.getInfo&lt;CL_CONTEXT_PROPERTIES&gt;();</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_platform<sp/>platform<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="3059"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>props.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(props[i]<sp/>==<sp/>CL_CONTEXT_PLATFORM)<sp/>{</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>platform<sp/>=<sp/>props[i<sp/>+<sp/>1];</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><sp/>__INIT_CL_EXT_FCN_PTR_PLATFORM(platform,<sp/>clCreateFromD3D10BufferKHR);</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3066"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/><sp/>__INIT_CL_EXT_FCN_PTR(clCreateFromD3D10BufferKHR);</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3069"><highlight class="normal"></highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>pfn_clCreateFromD3D10BufferKHR(context(),<sp/>flags,<sp/>bufobj,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="3072"><highlight class="normal"></highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_GL_BUFFER_ERR);</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"></highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/>BufferD3D10()<sp/>:<sp/>Buffer()<sp/>{}</highlight></codeline>
<codeline lineno="3081"><highlight class="normal"></highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/>BufferD3D10(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;buffer)</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Buffer(buffer)<sp/>{}</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"></highlight></codeline>
<codeline lineno="3093"><highlight class="normal"><sp/><sp/>BufferD3D10<sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffer::operator=(rhs);</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3097"><highlight class="normal"></highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/>BufferD3D10(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BufferD3D10<sp/>&amp;buf)<sp/>:<sp/>Buffer(buf)<sp/>{}</highlight></codeline>
<codeline lineno="3102"><highlight class="normal"></highlight></codeline>
<codeline lineno="3106"><highlight class="normal"><sp/><sp/>BufferD3D10<sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>BufferD3D10<sp/>&amp;buf)<sp/>{</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffer::operator=(buf);</highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"></highlight></codeline>
<codeline lineno="3111"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/>BufferD3D10(BufferD3D10<sp/>&amp;&amp;buf)<sp/>CL_HPP_NOEXCEPT<sp/>:<sp/>Buffer(std::move(buf))<sp/>{}</highlight></codeline>
<codeline lineno="3116"><highlight class="normal"></highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/>BufferD3D10<sp/>&amp;operator=(BufferD3D10<sp/>&amp;&amp;buf)<sp/>{</highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffer::operator=(std::move(buf));</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3127"><highlight class="normal"></highlight></codeline>
<codeline lineno="3136" refid="classcl_1_1_buffer_g_l" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1_buffer_g_l" kindref="compound">BufferGL</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_buffer" kindref="compound">Buffer</ref><sp/>{</highlight></codeline>
<codeline lineno="3137"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3143" refid="classcl_1_1_buffer_g_l_1a7ac53f876cfdb10fdd25a40d24b36686" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_g_l_1a7ac53f876cfdb10fdd25a40d24b36686" kindref="member">BufferGL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;context,<sp/>cl_mem_flags<sp/>flags,<sp/>cl_GLuint<sp/>bufobj,</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateFromGLBuffer(context(),<sp/>flags,<sp/>bufobj,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="3147"><highlight class="normal"></highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_GL_BUFFER_ERR);</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="3151"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"></highlight></codeline>
<codeline lineno="3155" refid="classcl_1_1_buffer_g_l_1a77604377be0e356aabfed15f6ea00b31" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_g_l_1a77604377be0e356aabfed15f6ea00b31" kindref="member">BufferGL</ref>()<sp/>:<sp/><ref refid="classcl_1_1_buffer" kindref="compound">Buffer</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="3156"><highlight class="normal"></highlight></codeline>
<codeline lineno="3161" refid="classcl_1_1_buffer_g_l_1aad3d71c4fb9736b4d045c4558da7b1e7" refkind="member"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/><ref refid="classcl_1_1_buffer_g_l_1aad3d71c4fb9736b4d045c4558da7b1e7" kindref="member">BufferGL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;buffer)<sp/>:<sp/><ref refid="classcl_1_1_buffer" kindref="compound">Buffer</ref>(buffer)<sp/>{}</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"></highlight></codeline>
<codeline lineno="3167" refid="classcl_1_1_buffer_g_l_1a38e7ca14a7fe0e29258f9a29c581f747" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_g_l" kindref="compound">BufferGL</ref><sp/>&amp;<ref refid="classcl_1_1_buffer_g_l_1a38e7ca14a7fe0e29258f9a29c581f747" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffer::operator=(rhs);</highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"></highlight></codeline>
<codeline lineno="3175" refid="classcl_1_1_buffer_g_l_1acc718908deb55b07dea09645fe322dbc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_g_l_1acc718908deb55b07dea09645fe322dbc" kindref="member">BufferGL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_buffer_g_l" kindref="compound">BufferGL</ref><sp/>&amp;buf)<sp/>:<sp/><ref refid="classcl_1_1_buffer" kindref="compound">Buffer</ref>(buf)<sp/>{}</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"></highlight></codeline>
<codeline lineno="3180" refid="classcl_1_1_buffer_g_l_1a03b391cc6ea7137bf04d1910ed793909" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_g_l" kindref="compound">BufferGL</ref><sp/>&amp;<ref refid="classcl_1_1_buffer_g_l_1a03b391cc6ea7137bf04d1910ed793909" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_buffer_g_l" kindref="compound">BufferGL</ref><sp/>&amp;buf)<sp/>{</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffer::operator=(buf);</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"></highlight></codeline>
<codeline lineno="3185"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_g_l" kindref="compound">BufferGL</ref>(<ref refid="classcl_1_1_buffer_g_l" kindref="compound">BufferGL</ref><sp/>&amp;&amp;buf)<sp/>CL_HPP_NOEXCEPT<sp/>:<sp/><ref refid="classcl_1_1_buffer" kindref="compound">Buffer</ref>(std::move(buf))<sp/>{}</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"></highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/>BufferGL<sp/>&amp;operator=(BufferGL<sp/>&amp;&amp;buf)<sp/>{</highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/>Buffer::operator=(std::move(buf));</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3199"><highlight class="normal"></highlight></codeline>
<codeline lineno="3201" refid="classcl_1_1_buffer_g_l_1ada9b870e058a54ccaf4789e045d1d570" refkind="member"><highlight class="normal"><sp/><sp/>cl_int<sp/><ref refid="classcl_1_1_buffer_g_l_1ada9b870e058a54ccaf4789e045d1d570" kindref="member">getObjectInfo</ref>(cl_gl_object_type<sp/>*type,<sp/>cl_GLuint<sp/>*gl_object_name)<sp/>{</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clGetGLObjectInfo(object_,<sp/>type,<sp/>gl_object_name),</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__GET_GL_OBJECT_INFO_ERR);</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3206"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"></highlight></codeline>
<codeline lineno="3214" refid="classcl_1_1_image" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1_image" kindref="compound">Image</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref><sp/>{</highlight></codeline>
<codeline lineno="3215"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3217" refid="classcl_1_1_image_1ad9a2f4b6a5ccbb7056613946bc6ee0b7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image_1ad9a2f4b6a5ccbb7056613946bc6ee0b7" kindref="member">Image</ref>()<sp/>:<sp/><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"></highlight></codeline>
<codeline lineno="3223" refid="classcl_1_1_image_1abb03618ce14da81b145b72174315ae69" refkind="member"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/><ref refid="classcl_1_1_image_1abb03618ce14da81b145b72174315ae69" kindref="member">Image</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;image)<sp/>:<sp/><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref>(image)<sp/>{}</highlight></codeline>
<codeline lineno="3224"><highlight class="normal"></highlight></codeline>
<codeline lineno="3229" refid="classcl_1_1_image_1a7eefbcc63b46d4a469afd8822c4204c1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image" kindref="compound">Image</ref><sp/>&amp;<ref refid="classcl_1_1_image_1a7eefbcc63b46d4a469afd8822c4204c1" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><sp/>Memory::operator=(rhs);</highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"></highlight></codeline>
<codeline lineno="3237" refid="classcl_1_1_image_1a263dda8ec8a4a43e98a2dadde1b2ea31" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image_1a263dda8ec8a4a43e98a2dadde1b2ea31" kindref="member">Image</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_image" kindref="compound">Image</ref><sp/>&amp;img)<sp/>:<sp/><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref>(img)<sp/>{}</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"></highlight></codeline>
<codeline lineno="3242" refid="classcl_1_1_image_1a9d06b3b8e6b129eb43f6df48ee73a041" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image" kindref="compound">Image</ref><sp/>&amp;<ref refid="classcl_1_1_image_1a9d06b3b8e6b129eb43f6df48ee73a041" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_image" kindref="compound">Image</ref><sp/>&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/><sp/>Memory::operator=(img);</highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3246"><highlight class="normal"></highlight></codeline>
<codeline lineno="3247"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image" kindref="compound">Image</ref>(<ref refid="classcl_1_1_image" kindref="compound">Image</ref><sp/>&amp;&amp;img)<sp/>CL_HPP_NOEXCEPT<sp/>:<sp/><ref refid="classcl_1_1_memory" kindref="compound">Memory</ref>(std::move(img))<sp/>{}</highlight></codeline>
<codeline lineno="3252"><highlight class="normal"></highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/>Image<sp/>&amp;operator=(Image<sp/>&amp;&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/><sp/>Memory::operator=(std::move(img));</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="3265" refid="classcl_1_1_image_1a7bf98f36e2e0bd8627377cfdfc260259" refkind="member"><highlight class="normal"><sp/><sp/>cl_int<sp/><ref refid="classcl_1_1_image_1a7bf98f36e2e0bd8627377cfdfc260259" kindref="member">getImageInfo</ref>(cl_image_info<sp/>name,<sp/>T<sp/>*param)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::getInfo(&amp;::clGetImageInfo,<sp/>object_,<sp/>name,<sp/>param),</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__GET_IMAGE_INFO_ERR);</highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3270"><highlight class="normal"></highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;cl_</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name&gt;</highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits&lt;detail::cl_image_info, name&gt;::param_type</ref></highlight></codeline>
<codeline lineno="3274" refid="classcl_1_1_image_1a224a182d9b7efcd8257570796b530b2c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image_1a224a182d9b7efcd8257570796b530b2c" kindref="member">getImageInfo</ref>(cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits&lt;detail::cl_image_info, name&gt;::param_type</ref></highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param;</highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>result<sp/>=<sp/>getImageInfo(name,<sp/>&amp;param);</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3283"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3284"><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight></codeline>
<codeline lineno="3292"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Image1D<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Image<sp/>{</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/>Image1D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Context<sp/>&amp;context,<sp/>cl_mem_flags<sp/>flags,<sp/>ImageFormat<sp/>format,</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>width,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*host_ptr<sp/>=<sp/>NULL,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_image_desc<sp/>desc<sp/>=<sp/>{CL_MEM_OBJECT_IMAGE1D,<sp/>width,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0};</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=</highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clCreateImage(context(),<sp/>flags,<sp/>&amp;format,<sp/>&amp;desc,<sp/>host_ptr,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="3304"><highlight class="normal"></highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_IMAGE_ERR);</highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3310"><highlight class="normal"></highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/>Image1D()<sp/>{}</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"></highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/>Image1D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;image1D)<sp/>:<sp/>Image(image1D)<sp/>{}</highlight></codeline>
<codeline lineno="3319"><highlight class="normal"></highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/>Image1D<sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(rhs);</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"></highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/>Image1D(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image1D<sp/>&amp;img)<sp/>:<sp/>Image(img)<sp/>{}</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"></highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/>Image1D<sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image1D<sp/>&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(img);</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/>Image1D(Image1D<sp/>&amp;&amp;img)<sp/>CL_HPP_NOEXCEPT<sp/>:<sp/>Image(std::move(img))<sp/>{}</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"></highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/>Image1D<sp/>&amp;operator=(Image1D<sp/>&amp;&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(std::move(img));</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3356"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Image1DBuffer<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Image<sp/>{</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/>Image1DBuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Context<sp/>&amp;context,<sp/>cl_mem_flags<sp/>flags,<sp/>ImageFormat<sp/>format,</highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>width,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;buffer,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_image_desc<sp/>desc<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CL_MEM_OBJECT_IMAGE1D_BUFFER,<sp/>width,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>0,<sp/>buffer()};</highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateImage(context(),<sp/>flags,<sp/>&amp;format,<sp/>&amp;desc,<sp/>NULL,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_IMAGE_ERR);</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3375"><highlight class="normal"></highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/>Image1DBuffer()<sp/>{}</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"></highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/>Image1DBuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;image1D)</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Image(image1D)<sp/>{}</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/>Image1DBuffer<sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(rhs);</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"></highlight></codeline>
<codeline lineno="3389"><highlight class="normal"><sp/><sp/>Image1DBuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image1DBuffer<sp/>&amp;img)<sp/>:<sp/>Image(img)<sp/>{}</highlight></codeline>
<codeline lineno="3390"><highlight class="normal"></highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/>Image1DBuffer<sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image1DBuffer<sp/>&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(img);</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"></highlight></codeline>
<codeline lineno="3399"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/>Image1DBuffer(Image1DBuffer<sp/>&amp;&amp;img)<sp/>CL_HPP_NOEXCEPT<sp/>:<sp/>Image(std::move(img))<sp/>{}</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"></highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/>Image1DBuffer<sp/>&amp;operator=(Image1DBuffer<sp/>&amp;&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(std::move(img));</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3412"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3413"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3414"><highlight class="normal"></highlight></codeline>
<codeline lineno="3418"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Image1DArray<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Image<sp/>{</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/>Image1DArray(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Context<sp/>&amp;context,<sp/>cl_mem_flags<sp/>flags,<sp/>ImageFormat<sp/>format,</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>arraySize,<sp/>::size_t<sp/>width,<sp/>::size_t<sp/>rowPitch,</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*host_ptr<sp/>=<sp/>NULL,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_image_desc<sp/>desc<sp/>=<sp/>{CL_MEM_OBJECT_IMAGE1D_ARRAY,</highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width,</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>height,<sp/>depth<sp/>(unused)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arraySize,</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rowPitch,</highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0};</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clCreateImage(context(),<sp/>flags,<sp/>&amp;format,<sp/>&amp;desc,<sp/>host_ptr,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"></highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_IMAGE_ERR);</highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3442"><highlight class="normal"></highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/>Image1DArray()<sp/>{}</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"></highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/>Image1DArray(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;imageArray)</highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Image(imageArray)<sp/>{}</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"></highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/>Image1DArray<sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(rhs);</highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"></highlight></codeline>
<codeline lineno="3456"><highlight class="normal"><sp/><sp/>Image1DArray(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image1DArray<sp/>&amp;img)<sp/>:<sp/>Image(img)<sp/>{}</highlight></codeline>
<codeline lineno="3457"><highlight class="normal"></highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/>Image1DArray<sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image1DArray<sp/>&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(img);</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3465"><highlight class="normal"></highlight></codeline>
<codeline lineno="3466"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/>Image1DArray(Image1DArray<sp/>&amp;&amp;img)<sp/>CL_HPP_NOEXCEPT<sp/>:<sp/>Image(std::move(img))<sp/>{}</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"></highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/>Image1DArray<sp/>&amp;operator=(Image1DArray<sp/>&amp;&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(std::move(img));</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3480"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3482"><highlight class="normal"></highlight></codeline>
<codeline lineno="3489" refid="classcl_1_1_image2_d" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1_image2_d" kindref="compound">Image2D</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_image" kindref="compound">Image</ref><sp/>{</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3495" refid="classcl_1_1_image2_d_1a010917974522103765c29ebcb4b40f58" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image2_d_1a010917974522103765c29ebcb4b40f58" kindref="member">Image2D</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;context,<sp/>cl_mem_flags<sp/>flags,<sp/><ref refid="structcl_1_1_image_format" kindref="compound">ImageFormat</ref><sp/>format,</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>width,<sp/>::size_t<sp/>height,<sp/>::size_t<sp/>row_pitch<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*host_ptr<sp/>=<sp/>NULL,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useCreateImage;</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"></highlight></codeline>
<codeline lineno="3501"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)<sp/>&amp;&amp;<sp/>defined(CL_USE_DEPRECATED_OPENCL_1_1_APIS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run-time<sp/>decision<sp/>based<sp/>on<sp/>the<sp/>actual<sp/>platform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3503"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cl_uint<sp/>version<sp/>=<sp/>detail::getContextPlatformVersion(context());</highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>useCreateImage<sp/>=<sp/>(version<sp/>&gt;=<sp/>0x10002);<sp/></highlight><highlight class="comment">//<sp/>OpenCL<sp/>1.2<sp/>or<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/>useCreateImage<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><sp/>useCreateImage<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3511"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3512"><highlight class="normal"></highlight></codeline>
<codeline lineno="3513"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useCreateImage)<sp/>{</highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cl_image_desc<sp/>desc<sp/>=<sp/>{CL_MEM_OBJECT_IMAGE2D,</highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width,</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height,</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>depth,<sp/>array<sp/>size<sp/>(unused)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_pitch,</highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0};</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>object_<sp/>=</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clCreateImage(context(),<sp/>flags,<sp/>&amp;format,<sp/>&amp;desc,<sp/>host_ptr,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="3527"><highlight class="normal"></highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_IMAGE_ERR);</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3533"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(CL_VERSION_1_2)<sp/>||<sp/>defined(CL_USE_DEPRECATED_OPENCL_1_1_APIS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!useCreateImage)<sp/>{</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateImage2D(context(),<sp/>flags,<sp/>&amp;format,<sp/>width,<sp/>height,</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_pitch,<sp/>host_ptr,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"></highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_IMAGE2D_ERR);</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>!defined(CL_VERSION_1_2)<sp/>||</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>defined(CL_USE_DEPRECATED_OPENCL_1_1_APIS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"></highlight></codeline>
<codeline lineno="3549" refid="classcl_1_1_image2_d_1a6ef2c932d8846c4ad7205c5352df687a" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image2_d_1a6ef2c932d8846c4ad7205c5352df687a" kindref="member">Image2D</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"></highlight></codeline>
<codeline lineno="3555" refid="classcl_1_1_image2_d_1a4275ee4a87732d57e03440cc64fccd84" refkind="member"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/><ref refid="classcl_1_1_image2_d_1a4275ee4a87732d57e03440cc64fccd84" kindref="member">Image2D</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;image2D)<sp/>:<sp/><ref refid="classcl_1_1_image" kindref="compound">Image</ref>(image2D)<sp/>{}</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"></highlight></codeline>
<codeline lineno="3561" refid="classcl_1_1_image2_d_1a9e7a068876d97b608706d26d1715226e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image2_d" kindref="compound">Image2D</ref><sp/>&amp;<ref refid="classcl_1_1_image2_d_1a9e7a068876d97b608706d26d1715226e" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(rhs);</highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3565"><highlight class="normal"></highlight></codeline>
<codeline lineno="3569" refid="classcl_1_1_image2_d_1a01f30cbb6b4e74d81de88beb993b3d58" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image2_d_1a01f30cbb6b4e74d81de88beb993b3d58" kindref="member">Image2D</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_image2_d" kindref="compound">Image2D</ref><sp/>&amp;img)<sp/>:<sp/><ref refid="classcl_1_1_image" kindref="compound">Image</ref>(img)<sp/>{}</highlight></codeline>
<codeline lineno="3570"><highlight class="normal"></highlight></codeline>
<codeline lineno="3574" refid="classcl_1_1_image2_d_1a93cec62a902cda998fbf1b47fbc497eb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image2_d" kindref="compound">Image2D</ref><sp/>&amp;<ref refid="classcl_1_1_image2_d_1a93cec62a902cda998fbf1b47fbc497eb" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_image2_d" kindref="compound">Image2D</ref><sp/>&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(img);</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"></highlight></codeline>
<codeline lineno="3579"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image2_d" kindref="compound">Image2D</ref>(<ref refid="classcl_1_1_image2_d" kindref="compound">Image2D</ref><sp/>&amp;&amp;img)<sp/>CL_HPP_NOEXCEPT<sp/>:<sp/><ref refid="classcl_1_1_image" kindref="compound">Image</ref>(std::move(img))<sp/>{}</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"></highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/>Image2D<sp/>&amp;operator=(Image2D<sp/>&amp;&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(std::move(img));</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3593"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(CL_VERSION_1_2)</highlight></codeline>
<codeline lineno="3605" refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CL_EXT_PREFIX__VERSION_1_1_DEPRECATED<sp/>Image2DGL</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d" kindref="compound">CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_image2_d" kindref="compound">Image2D</ref><sp/>{</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3613" refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d_1a4c54434efb39b75640f64591c1537143" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d_1a4c54434efb39b75640f64591c1537143" kindref="member">Image2DGL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;context,<sp/>cl_mem_flags<sp/>flags,<sp/>cl_GLenum<sp/>target,</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_GLint<sp/>miplevel,<sp/>cl_GLuint<sp/>texobj,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateFromGLTexture2D(context(),<sp/>flags,<sp/>target,<sp/>miplevel,</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texobj,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"></highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_GL_TEXTURE_2D_ERR);</highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"></highlight></codeline>
<codeline lineno="3626" refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d_1ae9ca65a79c8c281454fcefce7c6451ab" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d_1ae9ca65a79c8c281454fcefce7c6451ab" kindref="member">Image2DGL</ref>()<sp/>:<sp/><ref refid="classcl_1_1_image2_d" kindref="compound">Image2D</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"></highlight></codeline>
<codeline lineno="3632" refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d_1a77b28ff9f04018404a09f8ef1d615358" refkind="member"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/><ref refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d_1a77b28ff9f04018404a09f8ef1d615358" kindref="member">Image2DGL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;image)<sp/>:<sp/><ref refid="classcl_1_1_image2_d" kindref="compound">Image2D</ref>(image)<sp/>{}</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"></highlight></codeline>
<codeline lineno="3638" refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d_1a248705f17c215ec1e8a736520d631823" refkind="member"><highlight class="normal"><sp/><sp/>Image2DGL<sp/>&amp;<ref refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d_1a248705f17c215ec1e8a736520d631823" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/>Image2D::operator=(rhs);</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"></highlight></codeline>
<codeline lineno="3646" refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d_1a4220a8df3eb9f4c05ec5081ca9650436" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d_1a4220a8df3eb9f4c05ec5081ca9650436" kindref="member">Image2DGL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image2DGL<sp/>&amp;img)<sp/>:<sp/><ref refid="classcl_1_1_image2_d" kindref="compound">Image2D</ref>(img)<sp/>{}</highlight></codeline>
<codeline lineno="3647"><highlight class="normal"></highlight></codeline>
<codeline lineno="3651" refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d_1a8212f7b8bb4a55278344821cd87e3d54" refkind="member"><highlight class="normal"><sp/><sp/>Image2DGL<sp/>&amp;<ref refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d_1a8212f7b8bb4a55278344821cd87e3d54" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image2DGL<sp/>&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"><sp/><sp/><sp/><sp/>Image2D::operator=(img);</highlight></codeline>
<codeline lineno="3653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3654"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3655"><highlight class="normal"></highlight></codeline>
<codeline lineno="3656"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/>Image2DGL(Image2DGL<sp/>&amp;&amp;img)<sp/>CL_HPP_NOEXCEPT<sp/>:<sp/><ref refid="classcl_1_1_image2_d" kindref="compound">Image2D</ref>(std::move(img))<sp/>{}</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"></highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/>Image2DGL<sp/>&amp;operator=(Image2DGL<sp/>&amp;&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/><sp/>Image2D::operator=(std::move(img));</highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3669"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3670"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>!defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3672"><highlight class="normal"></highlight></codeline>
<codeline lineno="3673"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Image2DArray<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Image<sp/>{</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/>Image2DArray(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Context<sp/>&amp;context,<sp/>cl_mem_flags<sp/>flags,<sp/>ImageFormat<sp/>format,</highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>arraySize,<sp/>::size_t<sp/>width,<sp/>::size_t<sp/>height,</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>rowPitch,<sp/>::size_t<sp/>slicePitch,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*host_ptr<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_image_desc<sp/>desc<sp/>=<sp/>{CL_MEM_OBJECT_IMAGE2D_ARRAY,</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width,</highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height,</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>depth<sp/>(unused)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arraySize,</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rowPitch,</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slicePitch,</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0};</highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clCreateImage(context(),<sp/>flags,<sp/>&amp;format,<sp/>&amp;desc,<sp/>host_ptr,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"></highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_IMAGE_ERR);</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"></highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/>Image2DArray()<sp/>{}</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"></highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/>Image2DArray(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;imageArray)</highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Image(imageArray)<sp/>{}</highlight></codeline>
<codeline lineno="3707"><highlight class="normal"></highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/>Image2DArray<sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(rhs);</highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"></highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/>Image2DArray(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image2DArray<sp/>&amp;img)<sp/>:<sp/>Image(img)<sp/>{}</highlight></codeline>
<codeline lineno="3717"><highlight class="normal"></highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/>Image2DArray<sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image2DArray<sp/>&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(img);</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"></highlight></codeline>
<codeline lineno="3726"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/>Image2DArray(Image2DArray<sp/>&amp;&amp;img)<sp/>CL_HPP_NOEXCEPT<sp/>:<sp/>Image(std::move(img))<sp/>{}</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"></highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/>Image2DArray<sp/>&amp;operator=(Image2DArray<sp/>&amp;&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(std::move(img));</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3740"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3741"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3742"><highlight class="normal"></highlight></codeline>
<codeline lineno="3749" refid="classcl_1_1_image3_d" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1_image3_d" kindref="compound">Image3D</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_image" kindref="compound">Image</ref><sp/>{</highlight></codeline>
<codeline lineno="3750"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3755" refid="classcl_1_1_image3_d_1a46cb190a8cf9886055557e3cdaee837f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image3_d_1a46cb190a8cf9886055557e3cdaee837f" kindref="member">Image3D</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;context,<sp/>cl_mem_flags<sp/>flags,<sp/><ref refid="structcl_1_1_image_format" kindref="compound">ImageFormat</ref><sp/>format,</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>width,<sp/>::size_t<sp/>height,<sp/>::size_t<sp/>depth,</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>row_pitch<sp/>=<sp/>0,<sp/>::size_t<sp/>slice_pitch<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*host_ptr<sp/>=<sp/>NULL,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useCreateImage;</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"></highlight></codeline>
<codeline lineno="3762"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)<sp/>&amp;&amp;<sp/>defined(CL_USE_DEPRECATED_OPENCL_1_1_APIS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Run-time<sp/>decision<sp/>based<sp/>on<sp/>the<sp/>actual<sp/>platform</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cl_uint<sp/>version<sp/>=<sp/>detail::getContextPlatformVersion(context());</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>useCreateImage<sp/>=<sp/>(version<sp/>&gt;=<sp/>0x10002);<sp/></highlight><highlight class="comment">//<sp/>OpenCL<sp/>1.2<sp/>or<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/><sp/>useCreateImage<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3771"><highlight class="normal"><sp/><sp/><sp/><sp/>useCreateImage<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3772"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3773"><highlight class="normal"></highlight></codeline>
<codeline lineno="3774"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useCreateImage)<sp/>{</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cl_image_desc<sp/>desc<sp/>=<sp/>{CL_MEM_OBJECT_IMAGE3D,</highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>width,</highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height,</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>depth,</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,<sp/></highlight><highlight class="comment">//<sp/>array<sp/>size<sp/>(unused)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_pitch,</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_pitch,</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0};</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>object_<sp/>=</highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clCreateImage(context(),<sp/>flags,<sp/>&amp;format,<sp/>&amp;desc,<sp/>host_ptr,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"></highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_IMAGE_ERR);</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3794"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3795"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(CL_VERSION_1_2)<sp/>||<sp/>defined(CL_USE_DEPRECATED_OPENCL_1_1_APIS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!useCreateImage)<sp/>{</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>object_<sp/>=</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clCreateImage3D(context(),<sp/>flags,<sp/>&amp;format,<sp/>width,<sp/>height,<sp/>depth,</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_pitch,<sp/>slice_pitch,<sp/>host_ptr,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"></highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_IMAGE3D_ERR);</highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>!defined(CL_VERSION_1_2)<sp/>||</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>defined(CL_USE_DEPRECATED_OPENCL_1_1_APIS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"></highlight></codeline>
<codeline lineno="3811" refid="classcl_1_1_image3_d_1a9243ebeec223f4c6b9681e58b8844214" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image3_d_1a9243ebeec223f4c6b9681e58b8844214" kindref="member">Image3D</ref>()<sp/>:<sp/><ref refid="classcl_1_1_image" kindref="compound">Image</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"></highlight></codeline>
<codeline lineno="3817" refid="classcl_1_1_image3_d_1a5d73fcb28b65ad70fc0a7e8bd070b3bf" refkind="member"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/><ref refid="classcl_1_1_image3_d_1a5d73fcb28b65ad70fc0a7e8bd070b3bf" kindref="member">Image3D</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;image3D)<sp/>:<sp/><ref refid="classcl_1_1_image" kindref="compound">Image</ref>(image3D)<sp/>{}</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"></highlight></codeline>
<codeline lineno="3823" refid="classcl_1_1_image3_d_1a2dde54746a648b4ff62da9b0cdc927dc" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image3_d" kindref="compound">Image3D</ref><sp/>&amp;<ref refid="classcl_1_1_image3_d_1a2dde54746a648b4ff62da9b0cdc927dc" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(rhs);</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3827"><highlight class="normal"></highlight></codeline>
<codeline lineno="3831" refid="classcl_1_1_image3_d_1afbb7d12774e435bc5cb33c13520a2764" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image3_d_1afbb7d12774e435bc5cb33c13520a2764" kindref="member">Image3D</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_image3_d" kindref="compound">Image3D</ref><sp/>&amp;img)<sp/>:<sp/><ref refid="classcl_1_1_image" kindref="compound">Image</ref>(img)<sp/>{}</highlight></codeline>
<codeline lineno="3832"><highlight class="normal"></highlight></codeline>
<codeline lineno="3836" refid="classcl_1_1_image3_d_1a43be15549bfbe6e785eabdf78f548890" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image3_d" kindref="compound">Image3D</ref><sp/>&amp;<ref refid="classcl_1_1_image3_d_1a43be15549bfbe6e785eabdf78f548890" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_image3_d" kindref="compound">Image3D</ref><sp/>&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(img);</highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3840"><highlight class="normal"></highlight></codeline>
<codeline lineno="3841"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image3_d" kindref="compound">Image3D</ref>(<ref refid="classcl_1_1_image3_d" kindref="compound">Image3D</ref><sp/>&amp;&amp;img)<sp/>CL_HPP_NOEXCEPT<sp/>:<sp/><ref refid="classcl_1_1_image" kindref="compound">Image</ref>(std::move(img))<sp/>{}</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"></highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/>Image3D<sp/>&amp;operator=(Image3D<sp/>&amp;&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(std::move(img));</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3855"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"></highlight></codeline>
<codeline lineno="3857"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(CL_VERSION_1_2)</highlight></codeline>
<codeline lineno="3866" refid="classcl_1_1_image3_d_g_l" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1_image3_d_g_l" kindref="compound">Image3DGL</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_image3_d" kindref="compound">Image3D</ref><sp/>{</highlight></codeline>
<codeline lineno="3867"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3873" refid="classcl_1_1_image3_d_g_l_1a887ef5a5f73871e5419d9cd48cb0aae8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image3_d_g_l_1a887ef5a5f73871e5419d9cd48cb0aae8" kindref="member">Image3DGL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;context,<sp/>cl_mem_flags<sp/>flags,<sp/>cl_GLenum<sp/>target,</highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_GLint<sp/>miplevel,<sp/>cl_GLuint<sp/>texobj,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateFromGLTexture3D(context(),<sp/>flags,<sp/>target,<sp/>miplevel,</highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texobj,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_GL_TEXTURE_3D_ERR);</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"></highlight></codeline>
<codeline lineno="3886" refid="classcl_1_1_image3_d_g_l_1a21a8fd551430095711413e831cd42ddd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image3_d_g_l_1a21a8fd551430095711413e831cd42ddd" kindref="member">Image3DGL</ref>()<sp/>:<sp/><ref refid="classcl_1_1_image3_d" kindref="compound">Image3D</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"></highlight></codeline>
<codeline lineno="3892" refid="classcl_1_1_image3_d_g_l_1a98e053311f1a9a53e393522a825e51cc" refkind="member"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/><ref refid="classcl_1_1_image3_d_g_l_1a98e053311f1a9a53e393522a825e51cc" kindref="member">Image3DGL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;image)<sp/>:<sp/><ref refid="classcl_1_1_image3_d" kindref="compound">Image3D</ref>(image)<sp/>{}</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"></highlight></codeline>
<codeline lineno="3898" refid="classcl_1_1_image3_d_g_l_1a61af1009d180963022a7107e1ecaf0c7" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image3_d_g_l" kindref="compound">Image3DGL</ref><sp/>&amp;<ref refid="classcl_1_1_image3_d_g_l_1a61af1009d180963022a7107e1ecaf0c7" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/>Image3D::operator=(rhs);</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"></highlight></codeline>
<codeline lineno="3906" refid="classcl_1_1_image3_d_g_l_1a547ae772ea5529329b278d8d551518f4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image3_d_g_l_1a547ae772ea5529329b278d8d551518f4" kindref="member">Image3DGL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_image3_d_g_l" kindref="compound">Image3DGL</ref><sp/>&amp;img)<sp/>:<sp/><ref refid="classcl_1_1_image3_d" kindref="compound">Image3D</ref>(img)<sp/>{}</highlight></codeline>
<codeline lineno="3907"><highlight class="normal"></highlight></codeline>
<codeline lineno="3911" refid="classcl_1_1_image3_d_g_l_1a039a8f2cab446a5202e6d7081c746033" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image3_d_g_l" kindref="compound">Image3DGL</ref><sp/>&amp;<ref refid="classcl_1_1_image3_d_g_l_1a039a8f2cab446a5202e6d7081c746033" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_image3_d_g_l" kindref="compound">Image3DGL</ref><sp/>&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/><sp/>Image3D::operator=(img);</highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3915"><highlight class="normal"></highlight></codeline>
<codeline lineno="3916"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="3920"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_image3_d_g_l" kindref="compound">Image3DGL</ref>(<ref refid="classcl_1_1_image3_d_g_l" kindref="compound">Image3DGL</ref><sp/>&amp;&amp;img)<sp/>CL_HPP_NOEXCEPT<sp/>:<sp/><ref refid="classcl_1_1_image3_d" kindref="compound">Image3D</ref>(std::move(img))<sp/>{}</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"></highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/>Image3DGL<sp/>&amp;operator=(Image3DGL<sp/>&amp;&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><sp/>Image3D::operator=(std::move(img));</highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3930"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>!defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3932"><highlight class="normal"></highlight></codeline>
<codeline lineno="3933"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ImageGL<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Image<sp/>{</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/>ImageGL(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Context<sp/>&amp;context,<sp/>cl_mem_flags<sp/>flags,<sp/>cl_GLenum<sp/>target,</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_GLint<sp/>miplevel,<sp/>cl_GLuint<sp/>texobj,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateFromGLTexture(context(),<sp/>flags,<sp/>target,<sp/>miplevel,</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>texobj,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"></highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_GL_TEXTURE_ERR);</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3953"><highlight class="normal"></highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/>ImageGL()<sp/>:<sp/>Image()<sp/>{}</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"></highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/>ImageGL(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;image)<sp/>:<sp/>Image(image)<sp/>{}</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"></highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/>ImageGL<sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(rhs);</highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3962"><highlight class="normal"></highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/>ImageGL(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageGL<sp/>&amp;img)<sp/>:<sp/>Image(img)<sp/>{}</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"></highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/>ImageGL<sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>ImageGL<sp/>&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(img);</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"></highlight></codeline>
<codeline lineno="3976"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"><sp/><sp/>ImageGL(ImageGL<sp/>&amp;&amp;img)<sp/>CL_HPP_NOEXCEPT<sp/>:<sp/>Image(std::move(img))<sp/>{}</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"></highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/>ImageGL<sp/>&amp;operator=(ImageGL<sp/>&amp;&amp;img)<sp/>{</highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/><sp/>Image::operator=(std::move(img));</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="3989"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3990"><highlight class="normal">};</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3992"><highlight class="normal"></highlight></codeline>
<codeline lineno="4001" refid="classcl_1_1_buffer_render_g_l" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1_buffer_render_g_l" kindref="compound">BufferRenderGL</ref><sp/>:</highlight></codeline>
<codeline lineno="4002"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>ImageGL</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>Image2DGL</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4007"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4014" refid="classcl_1_1_buffer_render_g_l_1ac2f60478116d35c2a96c522205fcf932" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_render_g_l_1ac2f60478116d35c2a96c522205fcf932" kindref="member">BufferRenderGL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;context,<sp/>cl_mem_flags<sp/>flags,<sp/>cl_GLuint<sp/>bufobj,</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateFromGLRenderbuffer(context(),<sp/>flags,<sp/>bufobj,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="4018"><highlight class="normal"></highlight></codeline>
<codeline lineno="4019"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_GL_RENDER_BUFFER_ERR);</highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"></highlight></codeline>
<codeline lineno="4026"><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_render_g_l" kindref="compound">BufferRenderGL</ref>()<sp/>:<sp/>ImageGL(){};</highlight></codeline>
<codeline lineno="4028"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4029" refid="classcl_1_1_buffer_render_g_l_1a9ae513ba0c6664353c389764c7e1011d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_render_g_l_1a9ae513ba0c6664353c389764c7e1011d" kindref="member">BufferRenderGL</ref>()<sp/>:<sp/>Image2DGL(){};</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4031"><highlight class="normal"></highlight></codeline>
<codeline lineno="4036"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/><ref refid="classcl_1_1_buffer_render_g_l" kindref="compound">BufferRenderGL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;buffer)</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ImageGL(buffer)<sp/>{}</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4040" refid="classcl_1_1_buffer_render_g_l_1a6e389464dd1f004a790563a7822a5b63" refkind="member"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/><ref refid="classcl_1_1_buffer_render_g_l_1a6e389464dd1f004a790563a7822a5b63" kindref="member">BufferRenderGL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;buffer)</highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Image2DGL(buffer)<sp/>{}</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"></highlight></codeline>
<codeline lineno="4048" refid="classcl_1_1_buffer_render_g_l_1aeb0b208f83304c4b375a844c59ad6785" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_render_g_l" kindref="compound">BufferRenderGL</ref><sp/>&amp;<ref refid="classcl_1_1_buffer_render_g_l_1aeb0b208f83304c4b375a844c59ad6785" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="4049"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4050"><highlight class="normal"><sp/><sp/><sp/><sp/>ImageGL::operator=(rhs);</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/><sp/>Image2DGL::operator=(rhs);</highlight></codeline>
<codeline lineno="4053"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4054"><highlight class="normal"></highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"></highlight></codeline>
<codeline lineno="4061"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_render_g_l" kindref="compound">BufferRenderGL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_buffer_render_g_l" kindref="compound">BufferRenderGL</ref><sp/>&amp;buf)<sp/>:<sp/>ImageGL(buf)<sp/>{}</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4064" refid="classcl_1_1_buffer_render_g_l_1a9bbd05ded89c1c3d3c4fd52f0f5922b3" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_render_g_l_1a9bbd05ded89c1c3d3c4fd52f0f5922b3" kindref="member">BufferRenderGL</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_buffer_render_g_l" kindref="compound">BufferRenderGL</ref><sp/>&amp;buf)<sp/>:<sp/>Image2DGL(buf)<sp/>{}</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4066"><highlight class="normal"></highlight></codeline>
<codeline lineno="4070" refid="classcl_1_1_buffer_render_g_l_1ae8a660abc277570d2ff69ffa76d344e1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_render_g_l" kindref="compound">BufferRenderGL</ref><sp/>&amp;<ref refid="classcl_1_1_buffer_render_g_l_1ae8a660abc277570d2ff69ffa76d344e1" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_buffer_render_g_l" kindref="compound">BufferRenderGL</ref><sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/><sp/>ImageGL::operator=(rhs);</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/><sp/>Image2DGL::operator=(rhs);</highlight></codeline>
<codeline lineno="4075"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4078"><highlight class="normal"></highlight></codeline>
<codeline lineno="4079"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="4083"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_buffer_render_g_l" kindref="compound">BufferRenderGL</ref>(<ref refid="classcl_1_1_buffer_render_g_l" kindref="compound">BufferRenderGL</ref><sp/>&amp;&amp;buf)<sp/>CL_HPP_NOEXCEPT</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>ImageGL(std::move(buf))<sp/>{}</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/>BufferRenderGL(BufferRenderGL<sp/>&amp;&amp;buf)<sp/>CL_HPP_NOEXCEPT</highlight></codeline>
<codeline lineno="4088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>Image2DGL(std::move(buf))<sp/>{}</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4090"><highlight class="normal"></highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/>BufferRenderGL<sp/>&amp;operator=(BufferRenderGL<sp/>&amp;&amp;buf)<sp/>{</highlight></codeline>
<codeline lineno="4095"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/><sp/>ImageGL::operator=(std::move(buf));</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/><sp/>Image2DGL::operator=(std::move(buf));</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4100"><highlight class="normal"></highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4104"><highlight class="normal"></highlight></codeline>
<codeline lineno="4106" refid="classcl_1_1_buffer_render_g_l_1a148deb18e39ee7553a96eb8e56557f5f" refkind="member"><highlight class="normal"><sp/><sp/>cl_int<sp/><ref refid="classcl_1_1_buffer_render_g_l_1a148deb18e39ee7553a96eb8e56557f5f" kindref="member">getObjectInfo</ref>(cl_gl_object_type<sp/>*type,<sp/>cl_GLuint<sp/>*gl_object_name)<sp/>{</highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clGetGLObjectInfo(object_,<sp/>type,<sp/>gl_object_name),</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__GET_GL_OBJECT_INFO_ERR);</highlight></codeline>
<codeline lineno="4110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4111"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"></highlight></codeline>
<codeline lineno="4121" refid="classcl_1_1_sampler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1_sampler" kindref="compound">Sampler</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper</ref>&lt;cl_sampler&gt;<sp/>{</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4124" refid="classcl_1_1_sampler_1a1c8395b386e3b1c09dc43f4134909390" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_sampler_1a1c8395b386e3b1c09dc43f4134909390" kindref="member">Sampler</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"></highlight></codeline>
<codeline lineno="4130" refid="classcl_1_1_sampler_1a41d7df0a069717bc570a6ccdab3d3acd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_sampler_1a41d7df0a069717bc570a6ccdab3d3acd" kindref="member">Sampler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;context,<sp/>cl_bool<sp/>normalized_coords,</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_addressing_mode<sp/>addressing_mode,<sp/>cl_filter_mode<sp/>filter_mode,</highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateSampler(context(),<sp/>normalized_coords,<sp/>addressing_mode,</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filter_mode,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"></highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_SAMPLER_ERR);</highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4142"><highlight class="normal"></highlight></codeline>
<codeline lineno="4148" refid="classcl_1_1_sampler_1ac0c5fd852a7f9cc39918c8b67c4e662f" refkind="member"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/><ref refid="classcl_1_1_sampler_1ac0c5fd852a7f9cc39918c8b67c4e662f" kindref="member">Sampler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_sampler<sp/>&amp;sampler)</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;(sampler)<sp/>{}</highlight></codeline>
<codeline lineno="4150"><highlight class="normal"></highlight></codeline>
<codeline lineno="4156" refid="classcl_1_1_sampler_1a4edef47991d28368cb63f57e924d34bd" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_sampler" kindref="compound">Sampler</ref><sp/>&amp;<ref refid="classcl_1_1_sampler_1a4edef47991d28368cb63f57e924d34bd" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_sampler<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;::operator=</ref>(rhs);</highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4160"><highlight class="normal"></highlight></codeline>
<codeline lineno="4164" refid="classcl_1_1_sampler_1a684ea0f7bb85233239ba3a266795c1a4" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_sampler_1a684ea0f7bb85233239ba3a266795c1a4" kindref="member">Sampler</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_sampler" kindref="compound">Sampler</ref><sp/>&amp;sam)<sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;(sam)<sp/>{}</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"></highlight></codeline>
<codeline lineno="4169" refid="classcl_1_1_sampler_1a4c05855fddee1688b229bf333162c794" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_sampler" kindref="compound">Sampler</ref><sp/>&amp;<ref refid="classcl_1_1_sampler_1a4c05855fddee1688b229bf333162c794" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_sampler" kindref="compound">Sampler</ref><sp/>&amp;sam)<sp/>{</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;::operator=</ref>(sam);</highlight></codeline>
<codeline lineno="4171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4172"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"></highlight></codeline>
<codeline lineno="4174"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_sampler" kindref="compound">Sampler</ref>(<ref refid="classcl_1_1_sampler" kindref="compound">Sampler</ref><sp/>&amp;&amp;sam)<sp/>CL_HPP_NOEXCEPT</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;</ref>(std::move(sam))<sp/>{}</highlight></codeline>
<codeline lineno="4180"><highlight class="normal"></highlight></codeline>
<codeline lineno="4184"><highlight class="normal"><sp/><sp/>Sampler<sp/>&amp;operator=(Sampler<sp/>&amp;&amp;sam)<sp/>{</highlight></codeline>
<codeline lineno="4185"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::Wrapper&lt;cl_type&gt;::operator=(std::move(sam));</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4189"><highlight class="normal"></highlight></codeline>
<codeline lineno="4191" refid="classcl_1_1_sampler_1a692268678bf12b7b754009f9ba291fbc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>cl_int<sp/><ref refid="classcl_1_1_sampler_1a692268678bf12b7b754009f9ba291fbc" kindref="member">getInfo</ref>(cl_sampler_info<sp/>name,<sp/>T<sp/>*param)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::getInfo(&amp;::clGetSamplerInfo,<sp/>object_,<sp/>name,<sp/>param),</highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__GET_SAMPLER_INFO_ERR);</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"></highlight></codeline>
<codeline lineno="4198"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;cl_</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name&gt;</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits&lt;detail::cl_sampler_info, name&gt;::param_type</ref></highlight></codeline>
<codeline lineno="4200" refid="classcl_1_1_sampler_1ae98feb073f7295721af31275530fef5f" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_sampler_1ae98feb073f7295721af31275530fef5f" kindref="member">getInfo</ref>(cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1param__traits" kindref="compound">detail::param_traits&lt;detail::cl_sampler_info, name&gt;::param_type</ref></highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param;</highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>result<sp/>=<sp/>getInfo(name,<sp/>&amp;param);</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="4206"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4209"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4210"><highlight class="normal"></highlight></codeline>
<codeline lineno="4211"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Program;</highlight></codeline>
<codeline lineno="4212"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CommandQueue;</highlight></codeline>
<codeline lineno="4213"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">Kernel;</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"></highlight></codeline>
<codeline lineno="4216" refid="classcl_1_1_n_d_range" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>{</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1size__t" kindref="compound">size_t&lt;3&gt;</ref><sp/>sizes_;</highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/>cl_uint<sp/>dimensions_;</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"></highlight></codeline>
<codeline lineno="4221"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4223" refid="classcl_1_1_n_d_range_1ad7121613ed829d6a21f4866e96b84217" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_n_d_range_1ad7121613ed829d6a21f4866e96b84217" kindref="member">NDRange</ref>()<sp/>:<sp/>dimensions_(0)<sp/>{}</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"></highlight></codeline>
<codeline lineno="4226" refid="classcl_1_1_n_d_range_1a5656d3a279360873c5bd77f660ad405d" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_n_d_range_1a5656d3a279360873c5bd77f660ad405d" kindref="member">NDRange</ref>(::size_t<sp/>size0)<sp/>:<sp/>dimensions_(1)<sp/>{<sp/>sizes_[0]<sp/>=<sp/>size0;<sp/>}</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"></highlight></codeline>
<codeline lineno="4229" refid="classcl_1_1_n_d_range_1a528d361e6b179bbbfc67b572864d35d1" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_n_d_range_1a528d361e6b179bbbfc67b572864d35d1" kindref="member">NDRange</ref>(::size_t<sp/>size0,<sp/>::size_t<sp/>size1)<sp/>:<sp/>dimensions_(2)<sp/>{</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><sp/>sizes_[0]<sp/>=<sp/>size0;</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/><sp/>sizes_[1]<sp/>=<sp/>size1;</highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"></highlight></codeline>
<codeline lineno="4235" refid="classcl_1_1_n_d_range_1a71530663f2a3c19d50e226137057896c" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_n_d_range_1a71530663f2a3c19d50e226137057896c" kindref="member">NDRange</ref>(::size_t<sp/>size0,<sp/>::size_t<sp/>size1,<sp/>::size_t<sp/>size2)<sp/>:<sp/>dimensions_(3)<sp/>{</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/>sizes_[0]<sp/>=<sp/>size0;</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/>sizes_[1]<sp/>=<sp/>size1;</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/><sp/>sizes_[2]<sp/>=<sp/>size2;</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"></highlight></codeline>
<codeline lineno="4245" refid="classcl_1_1_n_d_range_1a918a4d77f26bc08caa8f4bb35c2ed467" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>const<sp/>::size_t<sp/>*()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(const<sp/>::size_t<sp/>*)sizes_;<sp/>}</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"></highlight></codeline>
<codeline lineno="4248" refid="classcl_1_1_n_d_range_1ade606e558bfc5745a7718e64f3d40c5f" refkind="member"><highlight class="normal"><sp/><sp/>::size_t<sp/><ref refid="classcl_1_1_n_d_range_1ade606e558bfc5745a7718e64f3d40c5f" kindref="member">dimensions</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>dimensions_;<sp/>}</highlight></codeline>
<codeline lineno="4249"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"></highlight></codeline>
<codeline lineno="4252"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NDRange<sp/>NullRange;</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"></highlight></codeline>
<codeline lineno="4255" refid="structcl_1_1_local_space_arg" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1_local_space_arg" kindref="compound">LocalSpaceArg</ref><sp/>{</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/>::size_t<sp/>size_;</highlight></codeline>
<codeline lineno="4257"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"></highlight></codeline>
<codeline lineno="4259"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"></highlight></codeline>
<codeline lineno="4261" refid="structcl_1_1detail_1_1_kernel_argument_handler" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1_kernel_argument_handler" kindref="compound">KernelArgumentHandler</ref><sp/>{</highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/>static<sp/>::size_t<sp/>size(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(T);<sp/>}</highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>*ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>&amp;value;<sp/>}</highlight></codeline>
<codeline lineno="4264"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"></highlight></codeline>
<codeline lineno="4266" refid="structcl_1_1detail_1_1_kernel_argument_handler_3_01_local_space_arg_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1_kernel_argument_handler" kindref="compound">KernelArgumentHandler</ref>&lt;<ref refid="structcl_1_1_local_space_arg" kindref="compound">LocalSpaceArg</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="4267"><highlight class="normal"><sp/><sp/>static<sp/>::size_t<sp/>size(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_local_space_arg" kindref="compound">LocalSpaceArg</ref><sp/>&amp;value)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>value.size_;<sp/>}</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_local_space_arg" kindref="compound">LocalSpaceArg</ref><sp/>&amp;)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/>}</highlight></codeline>
<codeline lineno="4269"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"></highlight></codeline>
<codeline lineno="4271"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight></codeline>
<codeline lineno="4273"></codeline>
<codeline lineno="4278"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>CL_EXT_PREFIX__VERSION_1_1_DEPRECATED<sp/><ref refid="structcl_1_1_local_space_arg" kindref="compound">LocalSpaceArg</ref></highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><ref refid="namespacecl_1a8c0bd8b2f6874ca5a62e2f25e5116c64" kindref="member">__local</ref>(::size_t<sp/>size)<sp/><ref refid="classcl_1_1_c_l___e_x_t___s_u_f_f_i_x_____v_e_r_s_i_o_n__1__1___d_e_p_r_e_c_a_t_e_d" kindref="compound">CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED</ref>;</highlight></codeline>
<codeline lineno="4280" refid="namespacecl_1a8c0bd8b2f6874ca5a62e2f25e5116c64" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_local_space_arg" kindref="compound">LocalSpaceArg</ref><sp/><ref refid="namespacecl_1a8c0bd8b2f6874ca5a62e2f25e5116c64" kindref="member">__local</ref>(::size_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_local_space_arg" kindref="compound">LocalSpaceArg</ref><sp/>ret<sp/>=<sp/>{size};</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="4283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"></highlight></codeline>
<codeline lineno="4288" refid="namespacecl_1a861d36f255ea512d3aba2c40ce952e44" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_local_space_arg" kindref="compound">LocalSpaceArg</ref><sp/><ref refid="namespacecl_1a861d36f255ea512d3aba2c40ce952e44" kindref="member">Local</ref>(::size_t<sp/>size)<sp/>{</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_local_space_arg" kindref="compound">LocalSpaceArg</ref><sp/>ret<sp/>=<sp/>{size};</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>ret;</highlight></codeline>
<codeline lineno="4291"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"></highlight></codeline>
<codeline lineno="4293"><highlight class="normal"></highlight><highlight class="comment">//<sp/>class<sp/>KernelFunctor;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4294"><highlight class="normal"></highlight></codeline>
<codeline lineno="4303" refid="classcl_1_1_kernel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1_kernel" kindref="compound">Kernel</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper</ref>&lt;cl_kernel&gt;<sp/>{</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_kernel" kindref="compound">Kernel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_program" kindref="compound">Program</ref><sp/>&amp;program,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL);</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"></highlight></codeline>
<codeline lineno="4308" refid="classcl_1_1_kernel_1a69b2fc97f80d90a23927a74395d09ec9" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_kernel_1a69b2fc97f80d90a23927a74395d09ec9" kindref="member">Kernel</ref>()<sp/>{}</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"></highlight></codeline>
<codeline lineno="4315" refid="classcl_1_1_kernel_1aaeecc4a7a7a3bed7f8c7d22563b78384" refkind="member"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/><ref refid="classcl_1_1_kernel_1aaeecc4a7a7a3bed7f8c7d22563b78384" kindref="member">Kernel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_kernel<sp/>&amp;kernel)</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;(kernel)<sp/>{}</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"></highlight></codeline>
<codeline lineno="4323" refid="classcl_1_1_kernel_1ab9fbaa8ff250cc478a84387c017493f0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_kernel" kindref="compound">Kernel</ref><sp/>&amp;<ref refid="classcl_1_1_kernel_1ab9fbaa8ff250cc478a84387c017493f0" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_kernel<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;::operator=</ref>(rhs);</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"></highlight></codeline>
<codeline lineno="4331" refid="classcl_1_1_kernel_1a93b516f37993297101dd9d30a4572b23" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_kernel_1a93b516f37993297101dd9d30a4572b23" kindref="member">Kernel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_kernel" kindref="compound">Kernel</ref><sp/>&amp;kernel)<sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;(kernel)<sp/>{}</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"></highlight></codeline>
<codeline lineno="4336" refid="classcl_1_1_kernel_1a52ba1d47a5dae7b90d57760cac3507d0" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_kernel" kindref="compound">Kernel</ref><sp/>&amp;<ref refid="classcl_1_1_kernel_1a52ba1d47a5dae7b90d57760cac3507d0" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_kernel" kindref="compound">Kernel</ref><sp/>&amp;kernel)<sp/>{</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;::operator=</ref>(kernel);</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"></highlight></codeline>
<codeline lineno="4341"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_kernel" kindref="compound">Kernel</ref>(<ref refid="classcl_1_1_kernel" kindref="compound">Kernel</ref><sp/>&amp;&amp;kernel)<sp/>CL_HPP_NOEXCEPT</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;</ref>(std::move(kernel))<sp/>{}</highlight></codeline>
<codeline lineno="4347"><highlight class="normal"></highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/>Kernel<sp/>&amp;operator=(Kernel<sp/>&amp;&amp;kernel)<sp/>{</highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::Wrapper&lt;cl_type&gt;::operator=(std::move(kernel));</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4356"><highlight class="normal"></highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>cl_int<sp/>getInfo(cl_kernel_info<sp/>name,<sp/>T<sp/>*param)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::getInfo(&amp;::clGetKernelInfo,<sp/>object_,<sp/>name,<sp/>param),</highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__GET_KERNEL_INFO_ERR);</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"></highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;cl_</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name&gt;</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::param_traits&lt;detail::cl_kernel_info,<sp/>name&gt;::param_type</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/>getInfo(cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::param_traits&lt;detail::cl_kernel_info,<sp/>name&gt;::param_type</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param;</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>result<sp/>=<sp/>getInfo(name,<sp/>&amp;param);</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"></highlight></codeline>
<codeline lineno="4375"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/>cl_int<sp/>getArgInfo(cl_uint<sp/>argIndex,<sp/>cl_kernel_arg_info<sp/>name,<sp/>T<sp/>*param)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::getInfo(&amp;::clGetKernelArgInfo,<sp/>object_,<sp/>argIndex,<sp/>name,<sp/>param),</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__GET_KERNEL_ARG_INFO_ERR);</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"></highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;cl_</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name&gt;</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::param_traits&lt;detail::cl_kernel_arg_info,<sp/>name&gt;::param_type</highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/>getArgInfo(cl_uint<sp/>argIndex,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::param_traits&lt;detail::cl_kernel_arg_info,<sp/>name&gt;::param_type</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param;</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>result<sp/>=<sp/>getArgInfo(argIndex,<sp/>name,<sp/>&amp;param);</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4395"><highlight class="normal"></highlight></codeline>
<codeline lineno="4396"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/>cl_int<sp/>getWorkGroupInfo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Device<sp/>&amp;device,<sp/>cl_kernel_work_group_info<sp/>name,</highlight></codeline>
<codeline lineno="4398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>*param)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(detail::getInfo(&amp;::clGetKernelWorkGroupInfo,</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>device(),<sp/>name,<sp/>param),</highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__GET_KERNEL_WORK_GROUP_INFO_ERR);</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4403"><highlight class="normal"></highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;cl_</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name&gt;</highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::param_traits&lt;detail::cl_kernel_work_group_info,</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name&gt;::param_type</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/>getWorkGroupInfo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Device<sp/>&amp;device,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::param_traits&lt;detail::cl_kernel_work_group_info,</highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name&gt;::param_type<sp/>param;</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>result<sp/>=<sp/>getWorkGroupInfo(device,<sp/>name,<sp/>&amp;param);</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"></highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>cl_int<sp/>setArg(cl_uint<sp/>index,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;value)<sp/>{</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clSetKernelArg(object_,<sp/>index,</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::KernelArgumentHandler&lt;T&gt;::size(value),</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::KernelArgumentHandler&lt;T&gt;::ptr(value)),</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__SET_KERNEL_ARGS_ERR);</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"></highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/>cl_int<sp/>setArg(cl_uint<sp/>index,<sp/>::size_t<sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*argPtr)<sp/>{</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(::clSetKernelArg(object_,<sp/>index,<sp/>size,<sp/>argPtr),</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__SET_KERNEL_ARGS_ERR);</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4429"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"></highlight></codeline>
<codeline lineno="4434" refid="classcl_1_1_program" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1_program" kindref="compound">Program</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper</ref>&lt;cl_program&gt;<sp/>{</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;std::pair&lt;const<sp/>void<sp/>*,<sp/>::size_t&gt;&gt;<sp/>Binaries;</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;std::pair&lt;const<sp/>char<sp/>*,<sp/>::size_t&gt;&gt;<sp/>Sources;</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"></highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_program" kindref="compound">Program</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecl_1ad3ff55c5fe80ec84842876af323559c7" kindref="member">STRING_CLASS</ref><sp/>&amp;source,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>build<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"></highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*strings<sp/>=<sp/>source.c_str();</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>::size_t<sp/>length<sp/>=<sp/>source.size();</highlight></codeline>
<codeline lineno="4444"><highlight class="normal"></highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>context<sp/>=<sp/>Context::getDefault(err);</highlight></codeline>
<codeline lineno="4446"><highlight class="normal"></highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateProgramWithSource(context(),<sp/>(cl_uint)1,<sp/>&amp;strings,</highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;length,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"></highlight></codeline>
<codeline lineno="4450"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_PROGRAM_WITH_SOURCE_ERR);</highlight></codeline>
<codeline lineno="4451"><highlight class="normal"></highlight></codeline>
<codeline lineno="4452"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>==<sp/>CL_SUCCESS<sp/>&amp;&amp;<sp/>build)<sp/>{</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"></highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>::clBuildProgram(object_,<sp/>0,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="4455"><highlight class="normal"></highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__BUILD_PROGRAM_ERR);</highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4458"><highlight class="normal"></highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="4461"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4463"><highlight class="normal"></highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_program" kindref="compound">Program</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecl_1ad3ff55c5fe80ec84842876af323559c7" kindref="member">STRING_CLASS</ref><sp/>&amp;source,</highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>build<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"></highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*strings<sp/>=<sp/>source.c_str();</highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>::size_t<sp/>length<sp/>=<sp/>source.size();</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"></highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateProgramWithSource(context(),<sp/>(cl_uint)1,<sp/>&amp;strings,</highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;length,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="4473"><highlight class="normal"></highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_PROGRAM_WITH_SOURCE_ERR);</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"></highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>==<sp/>CL_SUCCESS<sp/>&amp;&amp;<sp/>build)<sp/>{</highlight></codeline>
<codeline lineno="4477"><highlight class="normal"></highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>::clBuildProgram(object_,<sp/>0,<sp/>NULL,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="4479"><highlight class="normal"></highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__BUILD_PROGRAM_ERR);</highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"></highlight></codeline>
<codeline lineno="4483"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="4485"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4487"><highlight class="normal"></highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_program" kindref="compound">Program</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Sources<sp/>&amp;sources,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="4490"><highlight class="normal"></highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>::size_t<sp/>n<sp/>=<sp/>(::size_t)sources.size();</highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/><sp/>::size_t<sp/>*lengths<sp/>=<sp/>(::size_t<sp/>*)alloca(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(::size_t));</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**strings<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)alloca(n<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*));</highlight></codeline>
<codeline lineno="4494"><highlight class="normal"></highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>n;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>strings[i]<sp/>=<sp/>sources[(int)i].first;</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lengths[i]<sp/>=<sp/>sources[(int)i].second;</highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"></highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateProgramWithSource(context(),<sp/>(cl_uint)n,<sp/>strings,</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lengths,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="4502"><highlight class="normal"></highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_PROGRAM_WITH_SOURCE_ERR);</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="4506"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4508"><highlight class="normal"></highlight></codeline>
<codeline lineno="4531" refid="classcl_1_1_program_1a7c0ce0f4d9bf00088aa0db0abdf264d8" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_program_1a7c0ce0f4d9bf00088aa0db0abdf264d8" kindref="member">Program</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Device&gt;<sp/>&amp;devices,</highlight></codeline>
<codeline lineno="4532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Binaries<sp/>&amp;binaries,<sp/>VECTOR_CLASS&lt;cl_int&gt;<sp/>*binaryStatus<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="4533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4534"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"></highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/><sp/>const<sp/>::size_t<sp/>numDevices<sp/>=<sp/>devices.size();</highlight></codeline>
<codeline lineno="4537"><highlight class="normal"></highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Catch<sp/>size<sp/>mismatch<sp/>early<sp/>and<sp/>return</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(binaries.size()<sp/>!=<sp/>numDevices)<sp/>{</highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/>CL_INVALID_VALUE;</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_PROGRAM_WITH_BINARY_ERR);</highlight></codeline>
<codeline lineno="4542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="4544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4547"><highlight class="normal"></highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/><sp/>::size_t<sp/>*lengths<sp/>=<sp/>(::size_t<sp/>*)alloca(numDevices<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(::size_t));</highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**images<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**)alloca(</highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numDevices<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**));</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"></highlight></codeline>
<codeline lineno="4552"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(::size_t<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>numDevices;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="4553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>images[i]<sp/>=<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)binaries[i].first;</highlight></codeline>
<codeline lineno="4554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lengths[i]<sp/>=<sp/>binaries[(int)i].second;</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4556"><highlight class="normal"></highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_device_id<sp/>*deviceIDs<sp/>=</highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cl_device_id<sp/>*)alloca(numDevices<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cl_device_id));</highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(::size_t<sp/>deviceIndex<sp/>=<sp/>0;<sp/>deviceIndex<sp/>&lt;<sp/>numDevices;<sp/>++deviceIndex)<sp/>{</highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deviceIDs[deviceIndex]<sp/>=<sp/>(devices[deviceIndex])();</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4562"><highlight class="normal"></highlight></codeline>
<codeline lineno="4563"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(binaryStatus)<sp/>{</highlight></codeline>
<codeline lineno="4564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>binaryStatus-&gt;resize(numDevices);</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4566"><highlight class="normal"></highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateProgramWithBinary(</highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context(),<sp/>(cl_uint)devices.size(),<sp/>deviceIDs,<sp/>lengths,<sp/>images,</highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(binaryStatus<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>numDevices<sp/>&gt;<sp/>0)<sp/>?<sp/>&amp;binaryStatus-&gt;front()</highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;error);</highlight></codeline>
<codeline lineno="4572"><highlight class="normal"></highlight></codeline>
<codeline lineno="4573"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_PROGRAM_WITH_BINARY_ERR);</highlight></codeline>
<codeline lineno="4574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4578"><highlight class="normal"></highlight></codeline>
<codeline lineno="4579"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight></codeline>
<codeline lineno="4584"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_program" kindref="compound">Program</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Device&gt;<sp/>&amp;devices,</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecl_1ad3ff55c5fe80ec84842876af323559c7" kindref="member">STRING_CLASS</ref><sp/>&amp;kernelNames,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="4587"><highlight class="normal"></highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/><sp/><sp/>::size_t<sp/>numDevices<sp/>=<sp/>devices.size();</highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_device_id<sp/>*deviceIDs<sp/>=</highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cl_device_id<sp/>*)alloca(numDevices<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cl_device_id));</highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(::size_t<sp/>deviceIndex<sp/>=<sp/>0;<sp/>deviceIndex<sp/>&lt;<sp/>numDevices;<sp/>++deviceIndex)<sp/>{</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deviceIDs[deviceIndex]<sp/>=<sp/>(devices[deviceIndex])();</highlight></codeline>
<codeline lineno="4593"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4594"><highlight class="normal"></highlight></codeline>
<codeline lineno="4595"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateProgramWithBuiltInKernels(</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>context(),<sp/>(cl_uint)devices.size(),<sp/>deviceIDs,<sp/>kernelNames.c_str(),</highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;error);</highlight></codeline>
<codeline lineno="4598"><highlight class="normal"></highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_PROGRAM_WITH_BUILT_IN_KERNELS_ERR);</highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4604"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4605"><highlight class="normal"></highlight></codeline>
<codeline lineno="4606"><highlight class="normal"><sp/><sp/>Program()<sp/>{}</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"></highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/>Program(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_program<sp/>&amp;program)</highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;(program)<sp/>{}</highlight></codeline>
<codeline lineno="4610"><highlight class="normal"></highlight></codeline>
<codeline lineno="4611"><highlight class="normal"><sp/><sp/>Program<sp/>&amp;operator=(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_program<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="4612"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::Wrapper&lt;cl_type&gt;::operator=(rhs);</highlight></codeline>
<codeline lineno="4613"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4614"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"></highlight></codeline>
<codeline lineno="4619" refid="classcl_1_1_program_1a0ec5552449e9fefc46e7bcd399d15f51" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_program_1a0ec5552449e9fefc46e7bcd399d15f51" kindref="member">Program</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_program" kindref="compound">Program</ref><sp/>&amp;program)<sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;(program)<sp/>{}</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"></highlight></codeline>
<codeline lineno="4624" refid="classcl_1_1_program_1a7bd4452820d5b500c79aba740574d860" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_program" kindref="compound">Program</ref><sp/>&amp;<ref refid="classcl_1_1_program_1a7bd4452820d5b500c79aba740574d860" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_program" kindref="compound">Program</ref><sp/>&amp;program)<sp/>{</highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;::operator=</ref>(program);</highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4628"><highlight class="normal"></highlight></codeline>
<codeline lineno="4629"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="4633"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_program" kindref="compound">Program</ref>(<ref refid="classcl_1_1_program" kindref="compound">Program</ref><sp/>&amp;&amp;program)<sp/>CL_HPP_NOEXCEPT</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;</ref>(std::move(program))<sp/>{}</highlight></codeline>
<codeline lineno="4635"><highlight class="normal"></highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/>Program<sp/>&amp;operator=(Program<sp/>&amp;&amp;program)<sp/>{</highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::Wrapper&lt;cl_type&gt;::operator=(std::move(program));</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4642"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4643"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4644"><highlight class="normal"></highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/>cl_int<sp/>build(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Device&gt;<sp/>&amp;devices,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*options<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(CL_CALLBACK<sp/>*notifyFptr)(cl_program,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><sp/>::size_t<sp/>numDevices<sp/>=<sp/>devices.size();</highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_device_id<sp/>*deviceIDs<sp/>=</highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(cl_device_id<sp/>*)alloca(numDevices<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cl_device_id));</highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(::size_t<sp/>deviceIndex<sp/>=<sp/>0;<sp/>deviceIndex<sp/>&lt;<sp/>numDevices;<sp/>++deviceIndex)<sp/>{</highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>deviceIDs[deviceIndex]<sp/>=<sp/>(devices[deviceIndex])();</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4654"><highlight class="normal"></highlight></codeline>
<codeline lineno="4655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(::clBuildProgram(object_,<sp/>(cl_uint)devices.size(),</highlight></codeline>
<codeline lineno="4656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deviceIDs,<sp/>options,<sp/>notifyFptr,</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data),</highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__BUILD_PROGRAM_ERR);</highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4660"><highlight class="normal"></highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/>cl_int<sp/>build(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*options<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(CL_CALLBACK<sp/>*notifyFptr)(cl_program,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clBuildProgram(object_,<sp/>0,<sp/>NULL,<sp/>options,<sp/>notifyFptr,<sp/>data),</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__BUILD_PROGRAM_ERR);</highlight></codeline>
<codeline lineno="4667"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4668"><highlight class="normal"></highlight></codeline>
<codeline lineno="4669"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4670"><highlight class="normal"><sp/><sp/>cl_int<sp/>compile(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*options<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(CL_CALLBACK<sp/>*notifyFptr)(cl_program,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(::clCompileProgram(object_,<sp/>0,<sp/>NULL,<sp/>options,<sp/>0,</highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL,<sp/>NULL,<sp/>notifyFptr,<sp/>data),</highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__COMPILE_PROGRAM_ERR);</highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4677"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4678"><highlight class="normal"></highlight></codeline>
<codeline lineno="4679"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;<sp/>cl_int<sp/>getInfo(cl_program_info<sp/>name,<sp/>T<sp/>*param)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4680"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="4681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::getInfo(&amp;::clGetProgramInfo,<sp/>object_,<sp/>name,<sp/>param),</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__GET_PROGRAM_INFO_ERR);</highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4684"><highlight class="normal"></highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;cl_</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name&gt;</highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::param_traits&lt;detail::cl_program_info,<sp/>name&gt;::param_type</highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/>getInfo(cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::param_traits&lt;detail::cl_program_info,<sp/>name&gt;::param_type</highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param;</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>result<sp/>=<sp/>getInfo(name,<sp/>&amp;param);</highlight></codeline>
<codeline lineno="4691"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="4693"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4696"><highlight class="normal"></highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/>cl_int<sp/>getBuildInfo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Device<sp/>&amp;device,<sp/>cl_program_build_info<sp/>name,</highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T<sp/>*param)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(detail::getInfo(&amp;::clGetProgramBuildInfo,<sp/>object_,</highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>device(),<sp/>name,<sp/>param),</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__GET_PROGRAM_BUILD_INFO_ERR);</highlight></codeline>
<codeline lineno="4703"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4704"><highlight class="normal"></highlight></codeline>
<codeline lineno="4705"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;cl_</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name&gt;</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::param_traits&lt;detail::cl_program_build_info,<sp/>name&gt;::param_type</highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/>getBuildInfo(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Device<sp/>&amp;device,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::param_traits&lt;detail::cl_program_build_info,</highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name&gt;::param_type<sp/>param;</highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>result<sp/>=<sp/>getBuildInfo(device,<sp/>name,<sp/>&amp;param);</highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4716"><highlight class="normal"></highlight></codeline>
<codeline lineno="4717"><highlight class="normal"><sp/><sp/>cl_int<sp/>createKernels(VECTOR_CLASS&lt;Kernel&gt;<sp/>*kernels)<sp/>{</highlight></codeline>
<codeline lineno="4718"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_uint<sp/>numKernels;</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>::clCreateKernelsInProgram(object_,<sp/>0,<sp/>NULL,<sp/>&amp;numKernels);</highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(err,<sp/>__CREATE_KERNELS_IN_PROGRAM_ERR);</highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4723"><highlight class="normal"></highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/><sp/><sp/>Kernel<sp/>*value<sp/>=<sp/>(Kernel<sp/>*)alloca(numKernels<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Kernel));</highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/><sp/>err<sp/>=<sp/>::clCreateKernelsInProgram(object_,<sp/>numKernels,<sp/>(cl_kernel<sp/>*)value,</highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NULL);</highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(err,<sp/>__CREATE_KERNELS_IN_PROGRAM_ERR);</highlight></codeline>
<codeline lineno="4729"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4730"><highlight class="normal"></highlight></codeline>
<codeline lineno="4731"><highlight class="normal"><sp/><sp/><sp/><sp/>kernels-&gt;assign(&amp;value[0],<sp/>&amp;value[numKernels]);</highlight></codeline>
<codeline lineno="4732"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="4733"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4734"><highlight class="normal">};</highlight></codeline>
<codeline lineno="4735"><highlight class="normal"></highlight></codeline>
<codeline lineno="4736"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4737"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Program</highlight></codeline>
<codeline lineno="4738"><highlight class="normal">linkProgram(Program<sp/>input1,<sp/>Program<sp/>input2,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*options<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(CL_CALLBACK<sp/>*notifyFptr)(cl_program,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/>NULL,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/>cl_int<sp/>error_local<sp/>=<sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="4742"><highlight class="normal"></highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/>cl_program<sp/>programs[2]<sp/>=<sp/>{input1(),<sp/>input2()};</highlight></codeline>
<codeline lineno="4744"><highlight class="normal"></highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/>Context<sp/>ctx<sp/>=<sp/>input1.getInfo&lt;CL_PROGRAM_CONTEXT&gt;(&amp;error_local);</highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error_local<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error_local,<sp/>__LINK_PROGRAM_ERR);</highlight></codeline>
<codeline lineno="4748"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4749"><highlight class="normal"></highlight></codeline>
<codeline lineno="4750"><highlight class="normal"><sp/><sp/>cl_program<sp/>prog<sp/>=<sp/>::clLinkProgram(ctx(),<sp/>0,<sp/>NULL,<sp/>options,<sp/>2,<sp/>programs,</highlight></codeline>
<codeline lineno="4751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>notifyFptr,<sp/>data,<sp/>&amp;error_local);</highlight></codeline>
<codeline lineno="4752"><highlight class="normal"></highlight></codeline>
<codeline lineno="4753"><highlight class="normal"><sp/><sp/>detail::errHandler(error_local,<sp/>__COMPILE_PROGRAM_ERR);</highlight></codeline>
<codeline lineno="4754"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error_local;</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4757"><highlight class="normal"></highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Program(prog);</highlight></codeline>
<codeline lineno="4759"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4760"><highlight class="normal"></highlight></codeline>
<codeline lineno="4761"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>Program</highlight></codeline>
<codeline lineno="4762"><highlight class="normal">linkProgram(VECTOR_CLASS&lt;Program&gt;<sp/>inputPrograms,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*options<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="4763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(CL_CALLBACK<sp/>*notifyFptr)(cl_program,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="4764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data<sp/>=<sp/>NULL,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4765"><highlight class="normal"><sp/><sp/>cl_int<sp/>error_local<sp/>=<sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="4766"><highlight class="normal"></highlight></codeline>
<codeline lineno="4767"><highlight class="normal"><sp/><sp/>cl_program<sp/>*programs<sp/>=</highlight></codeline>
<codeline lineno="4768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(cl_program<sp/>*)alloca(inputPrograms.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cl_program));</highlight></codeline>
<codeline lineno="4769"><highlight class="normal"></highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(programs<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>inputPrograms.size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>programs[i]<sp/>=<sp/>inputPrograms[i]();</highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4775"><highlight class="normal"></highlight></codeline>
<codeline lineno="4776"><highlight class="normal"><sp/><sp/>Context<sp/>ctx;</highlight></codeline>
<codeline lineno="4777"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputPrograms.size()<sp/>&gt;<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="4778"><highlight class="normal"><sp/><sp/><sp/><sp/>ctx<sp/>=<sp/>inputPrograms[0].getInfo&lt;CL_PROGRAM_CONTEXT&gt;(&amp;error_local);</highlight></codeline>
<codeline lineno="4779"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error_local<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="4780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(error_local,<sp/>__LINK_PROGRAM_ERR);</highlight></codeline>
<codeline lineno="4781"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4782"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4783"><highlight class="normal"><sp/><sp/>cl_program<sp/>prog<sp/>=</highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::clLinkProgram(ctx(),<sp/>0,<sp/>NULL,<sp/>options,<sp/>(cl_uint)inputPrograms.size(),</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>programs,<sp/>notifyFptr,<sp/>data,<sp/>&amp;error_local);</highlight></codeline>
<codeline lineno="4786"><highlight class="normal"></highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/>detail::errHandler(error_local,<sp/>__COMPILE_PROGRAM_ERR);</highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error_local;</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4791"><highlight class="normal"></highlight></codeline>
<codeline lineno="4792"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>Program(prog);</highlight></codeline>
<codeline lineno="4793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4794"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4795"><highlight class="normal"></highlight></codeline>
<codeline lineno="4796"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;&gt;</highlight></codeline>
<codeline lineno="4797"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;char<sp/>*&gt;</highlight></codeline>
<codeline lineno="4798"><highlight class="normal">cl::Program::getInfo&lt;CL_PROGRAM_BINARIES&gt;(cl_int<sp/>*err)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/>VECTOR_CLASS&lt;::size_t&gt;<sp/>sizes<sp/>=<sp/>getInfo&lt;CL_PROGRAM_BINARY_SIZES&gt;();</highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/>VECTOR_CLASS&lt;char<sp/>*&gt;<sp/>binaries;</highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(VECTOR_CLASS&lt;::size_t&gt;::iterator<sp/>s<sp/>=<sp/>sizes.begin();<sp/>s<sp/>!=<sp/>sizes.end();</highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++s)<sp/>{</highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*ptr<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(*s<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="4805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ptr<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[*s];</highlight></codeline>
<codeline lineno="4806"><highlight class="normal"><sp/><sp/><sp/><sp/>binaries.push_back(ptr);</highlight></codeline>
<codeline lineno="4807"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4808"><highlight class="normal"></highlight></codeline>
<codeline lineno="4809"><highlight class="normal"><sp/><sp/>cl_int<sp/>result<sp/>=<sp/>getInfo(CL_PROGRAM_BINARIES,<sp/>&amp;binaries);</highlight></codeline>
<codeline lineno="4810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4811"><highlight class="normal"><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="4812"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4813"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>binaries;</highlight></codeline>
<codeline lineno="4814"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4815"><highlight class="normal"></highlight></codeline>
<codeline lineno="4816"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_kernel_1a69b2fc97f80d90a23927a74395d09ec9" kindref="member">Kernel::Kernel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Program<sp/>&amp;program,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/>cl_int<sp/>*err)<sp/>{</highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="4818"><highlight class="normal"></highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/>object_<sp/>=<sp/>::clCreateKernel(program(),<sp/>name,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_KERNEL_ERR);</highlight></codeline>
<codeline lineno="4821"><highlight class="normal"></highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="4824"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4825"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4826"><highlight class="normal"></highlight></codeline>
<codeline lineno="4830" refid="classcl_1_1_command_queue" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper</ref>&lt;cl_command_queue&gt;<sp/>{</highlight></codeline>
<codeline lineno="4831"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::atomic&lt;int&gt;<sp/>default_initialized_;</highlight></codeline>
<codeline lineno="4834"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>default_initialized_;</highlight></codeline>
<codeline lineno="4836"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>default_;</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>cl_int<sp/>default_error_;</highlight></codeline>
<codeline lineno="4839"><highlight class="normal"></highlight></codeline>
<codeline lineno="4840"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4841"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref>(cl_command_queue_properties<sp/>properties,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4842"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="4843"><highlight class="normal"></highlight></codeline>
<codeline lineno="4844"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>context<sp/>=<sp/><ref refid="classcl_1_1_context_1ad180f6f7d8b5a95710ab72f96162b051" kindref="member">Context::getDefault</ref>(&amp;error);</highlight></codeline>
<codeline lineno="4845"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_CONTEXT_ERR);</highlight></codeline>
<codeline lineno="4846"><highlight class="normal"></highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="4850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4851"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_device" kindref="compound">Device</ref><sp/>device<sp/>=<sp/>context.<ref refid="classcl_1_1_context_1a979d15f9228089af2a657a523b1186e8" kindref="member">getInfo</ref>&lt;CL_CONTEXT_DEVICES&gt;()[0];</highlight></codeline>
<codeline lineno="4853"><highlight class="normal"></highlight></codeline>
<codeline lineno="4854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateCommandQueue(context(),<sp/>device(),<sp/>properties,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="4855"><highlight class="normal"></highlight></codeline>
<codeline lineno="4856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_COMMAND_QUEUE_ERR);</highlight></codeline>
<codeline lineno="4857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="4859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4866" refid="classcl_1_1_command_queue_1adcb116a4e1a53417dad3d3850c33d42f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">explicit</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_command_queue_1adcb116a4e1a53417dad3d3850c33d42f" kindref="member">CommandQueue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;context,</highlight></codeline>
<codeline lineno="4867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_command_queue_properties<sp/>properties<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="4868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4869"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="4870"><highlight class="normal"><sp/><sp/><sp/><sp/>VECTOR_CLASS&lt;cl::Device&gt;<sp/>devices;</highlight></codeline>
<codeline lineno="4871"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/>context.<ref refid="classcl_1_1_context_1a979d15f9228089af2a657a523b1186e8" kindref="member">getInfo</ref>(CL_CONTEXT_DEVICES,<sp/>&amp;devices);</highlight></codeline>
<codeline lineno="4872"><highlight class="normal"></highlight></codeline>
<codeline lineno="4873"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_CONTEXT_ERR);</highlight></codeline>
<codeline lineno="4874"><highlight class="normal"></highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4881"><highlight class="normal"></highlight></codeline>
<codeline lineno="4882"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=</highlight></codeline>
<codeline lineno="4883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clCreateCommandQueue(context(),<sp/>devices[0](),<sp/>properties,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="4884"><highlight class="normal"></highlight></codeline>
<codeline lineno="4885"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_COMMAND_QUEUE_ERR);</highlight></codeline>
<codeline lineno="4886"><highlight class="normal"></highlight></codeline>
<codeline lineno="4887"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="4889"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4890"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4891"><highlight class="normal"></highlight></codeline>
<codeline lineno="4892"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>&amp;context,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_device" kindref="compound">Device</ref><sp/>&amp;device,</highlight></codeline>
<codeline lineno="4893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_command_queue_properties<sp/>properties<sp/>=<sp/>0,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4894"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="4895"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateCommandQueue(context(),<sp/>device(),<sp/>properties,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="4896"><highlight class="normal"></highlight></codeline>
<codeline lineno="4897"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_COMMAND_QUEUE_ERR);</highlight></codeline>
<codeline lineno="4898"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4902"><highlight class="normal"></highlight></codeline>
<codeline lineno="4906" refid="classcl_1_1_command_queue_1ae2ce434c5100e5b467ea8c6561e1f11e" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_command_queue_1ae2ce434c5100e5b467ea8c6561e1f11e" kindref="member">CommandQueue</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>&amp;queue)<sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;(queue)<sp/>{}</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"></highlight></codeline>
<codeline lineno="4911" refid="classcl_1_1_command_queue_1adcc310b23c19aefa6e129ade1cdfbebb" refkind="member"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>&amp;<ref refid="classcl_1_1_command_queue_1adcc310b23c19aefa6e129ade1cdfbebb" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>&amp;queue)<sp/>{</highlight></codeline>
<codeline lineno="4912"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;::operator=</ref>(queue);</highlight></codeline>
<codeline lineno="4913"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4915"><highlight class="normal"></highlight></codeline>
<codeline lineno="4916"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight></codeline>
<codeline lineno="4920"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref>(<ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>&amp;&amp;queue)<sp/>CL_HPP_NOEXCEPT</highlight></codeline>
<codeline lineno="4921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="classcl_1_1detail_1_1_wrapper" kindref="compound">detail::Wrapper&lt;cl_type&gt;</ref>(std::move(queue))<sp/>{}</highlight></codeline>
<codeline lineno="4922"><highlight class="normal"></highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/>CommandQueue<sp/>&amp;<ref refid="classcl_1_1_command_queue_1adcc310b23c19aefa6e129ade1cdfbebb" kindref="member">operator=</ref>(CommandQueue<sp/>&amp;&amp;queue)<sp/>{</highlight></codeline>
<codeline lineno="4927"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::Wrapper&lt;cl_type&gt;::operator=(std::move(queue));</highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4930"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_HPP_RVALUE_REFERENCES_SUPPORTED)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4931"><highlight class="normal"></highlight></codeline>
<codeline lineno="4932"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CommandQueue<sp/>getDefault(cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4933"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>state<sp/>=<sp/>detail::compare_exchange(&amp;default_initialized_,</highlight></codeline>
<codeline lineno="4934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__DEFAULT_BEING_INITIALIZED,</highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__DEFAULT_NOT_INITIALIZED);</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"></highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>&amp;<sp/>__DEFAULT_INITIALIZED)<sp/>{</highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>default_error_;</highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_;</highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4943"><highlight class="normal"></highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state<sp/>&amp;<sp/>__DEFAULT_BEING_INITIALIZED)<sp/>{</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>writes<sp/>will<sp/>propagate<sp/>eventually...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(default_initialized_<sp/>!=<sp/>__DEFAULT_INITIALIZED)<sp/>{</highlight></codeline>
<codeline lineno="4947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::fence();</highlight></codeline>
<codeline lineno="4948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4949"><highlight class="normal"></highlight></codeline>
<codeline lineno="4950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>default_error_;</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_;</highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4955"><highlight class="normal"></highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="4957"><highlight class="normal"></highlight></codeline>
<codeline lineno="4958"><highlight class="normal"><sp/><sp/><sp/><sp/>Context<sp/>context<sp/>=<sp/><ref refid="classcl_1_1_context_1ad180f6f7d8b5a95710ab72f96162b051" kindref="member">Context::getDefault</ref>(&amp;error);</highlight></codeline>
<codeline lineno="4959"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_COMMAND_QUEUE_ERR);</highlight></codeline>
<codeline lineno="4960"><highlight class="normal"></highlight></codeline>
<codeline lineno="4961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="4962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>Device<sp/>device<sp/>=<sp/>context.<ref refid="classcl_1_1_device_1a575493c25049dae087540ed8a65efd6d" kindref="member">getInfo</ref>&lt;CL_CONTEXT_DEVICES&gt;()[0];</highlight></codeline>
<codeline lineno="4967"><highlight class="normal"></highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>default_<sp/>=<sp/>CommandQueue(context,<sp/>device,<sp/>0,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"></highlight></codeline>
<codeline lineno="4970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_COMMAND_QUEUE_ERR);</highlight></codeline>
<codeline lineno="4971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="4973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4974"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4975"><highlight class="normal"></highlight></codeline>
<codeline lineno="4976"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::fence();</highlight></codeline>
<codeline lineno="4977"><highlight class="normal"></highlight></codeline>
<codeline lineno="4978"><highlight class="normal"><sp/><sp/><sp/><sp/>default_error_<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="4979"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Assume<sp/>writes<sp/>will<sp/>propagate<sp/>eventually...</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4980"><highlight class="normal"><sp/><sp/><sp/><sp/>default_initialized_<sp/>=<sp/>__DEFAULT_INITIALIZED;</highlight></codeline>
<codeline lineno="4981"><highlight class="normal"></highlight></codeline>
<codeline lineno="4982"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::fence();</highlight></codeline>
<codeline lineno="4983"><highlight class="normal"></highlight></codeline>
<codeline lineno="4984"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="4985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>default_error_;</highlight></codeline>
<codeline lineno="4986"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4987"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>default_;</highlight></codeline>
<codeline lineno="4988"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4989"><highlight class="normal"></highlight></codeline>
<codeline lineno="4990"><highlight class="normal"><sp/><sp/>CommandQueue()<sp/>{}</highlight></codeline>
<codeline lineno="4991"><highlight class="normal"></highlight></codeline>
<codeline lineno="4992"><highlight class="normal"><sp/><sp/>__CL_EXPLICIT_CONSTRUCTORS<sp/>CommandQueue(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_command_queue<sp/>&amp;commandQueue)</highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>detail::Wrapper&lt;cl_type&gt;(commandQueue)<sp/>{}</highlight></codeline>
<codeline lineno="4994"><highlight class="normal"></highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/>CommandQueue<sp/>&amp;<ref refid="classcl_1_1_command_queue_1adcc310b23c19aefa6e129ade1cdfbebb" kindref="member">operator=</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_command_queue<sp/>&amp;rhs)<sp/>{</highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::Wrapper&lt;cl_type&gt;::operator=(rhs);</highlight></codeline>
<codeline lineno="4997"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4998"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="4999"><highlight class="normal"></highlight></codeline>
<codeline lineno="5000"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T&gt;</highlight></codeline>
<codeline lineno="5001"><highlight class="normal"><sp/><sp/>cl_int<sp/>getInfo(cl_command_queue_info<sp/>name,<sp/>T<sp/>*param)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::getInfo(&amp;::clGetCommandQueueInfo,<sp/>object_,<sp/>name,<sp/>param),</highlight></codeline>
<codeline lineno="5004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__GET_COMMAND_QUEUE_INFO_ERR);</highlight></codeline>
<codeline lineno="5005"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5006"><highlight class="normal"></highlight></codeline>
<codeline lineno="5007"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;cl_</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name&gt;</highlight></codeline>
<codeline lineno="5008"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::param_traits&lt;detail::cl_command_queue_info,<sp/>name&gt;::param_type</highlight></codeline>
<codeline lineno="5009"><highlight class="normal"><sp/><sp/>getInfo(cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5010"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>detail::param_traits&lt;detail::cl_command_queue_info,</highlight></codeline>
<codeline lineno="5011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name&gt;::param_type<sp/>param;</highlight></codeline>
<codeline lineno="5012"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>result<sp/>=<sp/>getInfo(name,<sp/>&amp;param);</highlight></codeline>
<codeline lineno="5013"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>result;</highlight></codeline>
<codeline lineno="5015"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>param;</highlight></codeline>
<codeline lineno="5017"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5018"><highlight class="normal"></highlight></codeline>
<codeline lineno="5019"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueReadBuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;buffer,<sp/>cl_bool<sp/>blocking,</highlight></codeline>
<codeline lineno="5020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>offset,<sp/>::size_t<sp/>size,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,</highlight></codeline>
<codeline lineno="5021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueReadBuffer(object_,<sp/>buffer(),<sp/>blocking,<sp/>offset,<sp/>size,<sp/>ptr,</highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_READ_BUFFER_ERR);</highlight></codeline>
<codeline lineno="5032"><highlight class="normal"></highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"></highlight></codeline>
<codeline lineno="5036"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5037"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5038"><highlight class="normal"></highlight></codeline>
<codeline lineno="5039"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueWriteBuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;buffer,<sp/>cl_bool<sp/>blocking,</highlight></codeline>
<codeline lineno="5040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>offset,<sp/>::size_t<sp/>size,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,</highlight></codeline>
<codeline lineno="5041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5043"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5044"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueWriteBuffer(object_,<sp/>buffer(),<sp/>blocking,<sp/>offset,<sp/>size,<sp/>ptr,</highlight></codeline>
<codeline lineno="5046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5049"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5050"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5051"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_WRITE_BUFFER_ERR);</highlight></codeline>
<codeline lineno="5052"><highlight class="normal"></highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5055"><highlight class="normal"></highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5058"><highlight class="normal"></highlight></codeline>
<codeline lineno="5059"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueCopyBuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;dst,</highlight></codeline>
<codeline lineno="5060"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>src_offset,<sp/>::size_t<sp/>dst_offset,</highlight></codeline>
<codeline lineno="5061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>size,</highlight></codeline>
<codeline lineno="5062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5063"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5064"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5065"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueCopyBuffer(object_,<sp/>src(),<sp/>dst(),<sp/>src_offset,<sp/>dst_offset,</highlight></codeline>
<codeline lineno="5067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size,</highlight></codeline>
<codeline lineno="5068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5071"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQEUE_COPY_BUFFER_ERR);</highlight></codeline>
<codeline lineno="5074"><highlight class="normal"></highlight></codeline>
<codeline lineno="5075"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5077"><highlight class="normal"></highlight></codeline>
<codeline lineno="5078"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5079"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5080"><highlight class="normal"></highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueReadBufferRect(</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;buffer,<sp/>cl_bool<sp/>blocking,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;buffer_offset,</highlight></codeline>
<codeline lineno="5083"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;host_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,</highlight></codeline>
<codeline lineno="5084"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>buffer_row_pitch,<sp/>::size_t<sp/>buffer_slice_pitch,</highlight></codeline>
<codeline lineno="5085"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>host_row_pitch,<sp/>::size_t<sp/>host_slice_pitch,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,<sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueReadBufferRect(</highlight></codeline>
<codeline lineno="5090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>buffer(),<sp/>blocking,<sp/>(const<sp/>::size_t<sp/>*)buffer_offset,</highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>::size_t<sp/>*)host_offset,<sp/>(const<sp/>::size_t<sp/>*)region,</highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_row_pitch,<sp/>buffer_slice_pitch,<sp/>host_row_pitch,</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host_slice_pitch,<sp/>ptr,</highlight></codeline>
<codeline lineno="5094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_READ_BUFFER_RECT_ERR);</highlight></codeline>
<codeline lineno="5100"><highlight class="normal"></highlight></codeline>
<codeline lineno="5101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5103"><highlight class="normal"></highlight></codeline>
<codeline lineno="5104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5105"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5106"><highlight class="normal"></highlight></codeline>
<codeline lineno="5107"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueWriteBufferRect(</highlight></codeline>
<codeline lineno="5108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;buffer,<sp/>cl_bool<sp/>blocking,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;buffer_offset,</highlight></codeline>
<codeline lineno="5109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;host_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,</highlight></codeline>
<codeline lineno="5110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>buffer_row_pitch,<sp/>::size_t<sp/>buffer_slice_pitch,</highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>host_row_pitch,<sp/>::size_t<sp/>host_slice_pitch,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,</highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,<sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueWriteBufferRect(</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>buffer(),<sp/>blocking,<sp/>(const<sp/>::size_t<sp/>*)buffer_offset,</highlight></codeline>
<codeline lineno="5117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>::size_t<sp/>*)host_offset,<sp/>(const<sp/>::size_t<sp/>*)region,</highlight></codeline>
<codeline lineno="5118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer_row_pitch,<sp/>buffer_slice_pitch,<sp/>host_row_pitch,</highlight></codeline>
<codeline lineno="5119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host_slice_pitch,<sp/>ptr,</highlight></codeline>
<codeline lineno="5120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_WRITE_BUFFER_RECT_ERR);</highlight></codeline>
<codeline lineno="5126"><highlight class="normal"></highlight></codeline>
<codeline lineno="5127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5129"><highlight class="normal"></highlight></codeline>
<codeline lineno="5130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5131"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5132"><highlight class="normal"></highlight></codeline>
<codeline lineno="5133"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueCopyBufferRect(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;dst,</highlight></codeline>
<codeline lineno="5134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;src_origin,</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;dst_origin,</highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,<sp/>::size_t<sp/>src_row_pitch,</highlight></codeline>
<codeline lineno="5137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>src_slice_pitch,<sp/>::size_t<sp/>dst_row_pitch,</highlight></codeline>
<codeline lineno="5138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>dst_slice_pitch,</highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5141"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5142"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueCopyBufferRect(</highlight></codeline>
<codeline lineno="5144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>src(),<sp/>dst(),<sp/>(const<sp/>::size_t<sp/>*)src_origin,</highlight></codeline>
<codeline lineno="5145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>::size_t<sp/>*)dst_origin,<sp/>(const<sp/>::size_t<sp/>*)region,</highlight></codeline>
<codeline lineno="5146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src_row_pitch,<sp/>src_slice_pitch,<sp/>dst_row_pitch,<sp/>dst_slice_pitch,</highlight></codeline>
<codeline lineno="5147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQEUE_COPY_BUFFER_RECT_ERR);</highlight></codeline>
<codeline lineno="5153"><highlight class="normal"></highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5156"><highlight class="normal"></highlight></codeline>
<codeline lineno="5157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5158"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5159"><highlight class="normal"></highlight></codeline>
<codeline lineno="5160"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight></codeline>
<codeline lineno="5167"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>PatternType&gt;</highlight></codeline>
<codeline lineno="5168"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueFillBuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;buffer,<sp/>PatternType<sp/>pattern,</highlight></codeline>
<codeline lineno="5169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>offset,<sp/>::size_t<sp/>size,</highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5172"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueFillBuffer(object_,<sp/>buffer(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;pattern),</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PatternType),<sp/>offset,<sp/>size,</highlight></codeline>
<codeline lineno="5176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_FILL_BUFFER_ERR);</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"></highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5185"><highlight class="normal"></highlight></codeline>
<codeline lineno="5186"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5187"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5189"><highlight class="normal"></highlight></codeline>
<codeline lineno="5190"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueReadImage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image<sp/>&amp;image,<sp/>cl_bool<sp/>blocking,</highlight></codeline>
<codeline lineno="5191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;origin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,</highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>row_pitch,<sp/>::size_t<sp/>slice_pitch,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueReadImage(object_,<sp/>image(),<sp/>blocking,</highlight></codeline>
<codeline lineno="5198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>::size_t<sp/>*)origin,<sp/>(const<sp/>::size_t<sp/>*)region,</highlight></codeline>
<codeline lineno="5199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row_pitch,<sp/>slice_pitch,<sp/>ptr,</highlight></codeline>
<codeline lineno="5200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_READ_IMAGE_ERR);</highlight></codeline>
<codeline lineno="5206"><highlight class="normal"></highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5209"><highlight class="normal"></highlight></codeline>
<codeline lineno="5210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5211"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5212"><highlight class="normal"></highlight></codeline>
<codeline lineno="5213"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueWriteImage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image<sp/>&amp;image,<sp/>cl_bool<sp/>blocking,</highlight></codeline>
<codeline lineno="5214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;origin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,</highlight></codeline>
<codeline lineno="5215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>row_pitch,<sp/>::size_t<sp/>slice_pitch,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,</highlight></codeline>
<codeline lineno="5216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5218"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5219"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueWriteImage(</highlight></codeline>
<codeline lineno="5221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>image(),<sp/>blocking,<sp/>(const<sp/>::size_t<sp/>*)origin,</highlight></codeline>
<codeline lineno="5222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>::size_t<sp/>*)region,<sp/>row_pitch,<sp/>slice_pitch,<sp/>ptr,</highlight></codeline>
<codeline lineno="5223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_WRITE_IMAGE_ERR);</highlight></codeline>
<codeline lineno="5229"><highlight class="normal"></highlight></codeline>
<codeline lineno="5230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5232"><highlight class="normal"></highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5235"><highlight class="normal"></highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueCopyImage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image<sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image<sp/>&amp;dst,</highlight></codeline>
<codeline lineno="5237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;src_origin,</highlight></codeline>
<codeline lineno="5238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;dst_origin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,</highlight></codeline>
<codeline lineno="5239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5241"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5242"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueCopyImage(</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>src(),<sp/>dst(),<sp/>(const<sp/>::size_t<sp/>*)src_origin,</highlight></codeline>
<codeline lineno="5245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>::size_t<sp/>*)dst_origin,<sp/>(const<sp/>::size_t<sp/>*)region,</highlight></codeline>
<codeline lineno="5246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_COPY_IMAGE_ERR);</highlight></codeline>
<codeline lineno="5252"><highlight class="normal"></highlight></codeline>
<codeline lineno="5253"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5255"><highlight class="normal"></highlight></codeline>
<codeline lineno="5256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5258"><highlight class="normal"></highlight></codeline>
<codeline lineno="5259"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight></codeline>
<codeline lineno="5267"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueFillImage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image<sp/>&amp;image,<sp/>cl_float4<sp/>fillColor,</highlight></codeline>
<codeline lineno="5268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;origin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,</highlight></codeline>
<codeline lineno="5269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5271"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5272"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueFillImage(object_,<sp/>image(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;fillColor),</highlight></codeline>
<codeline lineno="5274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>::size_t<sp/>*)origin,<sp/>(const<sp/>::size_t<sp/>*)region,</highlight></codeline>
<codeline lineno="5275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_FILL_IMAGE_ERR);</highlight></codeline>
<codeline lineno="5281"><highlight class="normal"></highlight></codeline>
<codeline lineno="5282"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5284"><highlight class="normal"></highlight></codeline>
<codeline lineno="5285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5286"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5287"><highlight class="normal"></highlight></codeline>
<codeline lineno="5295"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueFillImage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image<sp/>&amp;image,<sp/>cl_int4<sp/>fillColor,</highlight></codeline>
<codeline lineno="5296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;origin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,</highlight></codeline>
<codeline lineno="5297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5299"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5300"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueFillImage(object_,<sp/>image(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;fillColor),</highlight></codeline>
<codeline lineno="5302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>::size_t<sp/>*)origin,<sp/>(const<sp/>::size_t<sp/>*)region,</highlight></codeline>
<codeline lineno="5303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_FILL_IMAGE_ERR);</highlight></codeline>
<codeline lineno="5309"><highlight class="normal"></highlight></codeline>
<codeline lineno="5310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5312"><highlight class="normal"></highlight></codeline>
<codeline lineno="5313"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5314"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5315"><highlight class="normal"></highlight></codeline>
<codeline lineno="5323"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueFillImage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image<sp/>&amp;image,<sp/>cl_uint4<sp/>fillColor,</highlight></codeline>
<codeline lineno="5324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;origin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,</highlight></codeline>
<codeline lineno="5325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5327"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5328"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueFillImage(object_,<sp/>image(),<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;fillColor),</highlight></codeline>
<codeline lineno="5330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>::size_t<sp/>*)origin,<sp/>(const<sp/>::size_t<sp/>*)region,</highlight></codeline>
<codeline lineno="5331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_FILL_IMAGE_ERR);</highlight></codeline>
<codeline lineno="5337"><highlight class="normal"></highlight></codeline>
<codeline lineno="5338"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5340"><highlight class="normal"></highlight></codeline>
<codeline lineno="5341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5342"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5343"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5344"><highlight class="normal"></highlight></codeline>
<codeline lineno="5345"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueCopyImageToBuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image<sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;dst,</highlight></codeline>
<codeline lineno="5346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;src_origin,</highlight></codeline>
<codeline lineno="5347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,<sp/>::size_t<sp/>dst_offset,</highlight></codeline>
<codeline lineno="5348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5350"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5351"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueCopyImageToBuffer(</highlight></codeline>
<codeline lineno="5353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>src(),<sp/>dst(),<sp/>(const<sp/>::size_t<sp/>*)src_origin,</highlight></codeline>
<codeline lineno="5354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>::size_t<sp/>*)region,<sp/>dst_offset,</highlight></codeline>
<codeline lineno="5355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_COPY_IMAGE_TO_BUFFER_ERR);</highlight></codeline>
<codeline lineno="5361"><highlight class="normal"></highlight></codeline>
<codeline lineno="5362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5364"><highlight class="normal"></highlight></codeline>
<codeline lineno="5365"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5366"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5367"><highlight class="normal"></highlight></codeline>
<codeline lineno="5368"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueCopyBufferToImage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image<sp/>&amp;dst,</highlight></codeline>
<codeline lineno="5369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>src_offset,</highlight></codeline>
<codeline lineno="5370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;dst_origin,</highlight></codeline>
<codeline lineno="5371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,</highlight></codeline>
<codeline lineno="5372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5374"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5375"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueCopyBufferToImage(</highlight></codeline>
<codeline lineno="5377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>src(),<sp/>dst(),<sp/>src_offset,<sp/>(const<sp/>::size_t<sp/>*)dst_origin,</highlight></codeline>
<codeline lineno="5378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>::size_t<sp/>*)region,</highlight></codeline>
<codeline lineno="5379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_COPY_BUFFER_TO_IMAGE_ERR);</highlight></codeline>
<codeline lineno="5385"><highlight class="normal"></highlight></codeline>
<codeline lineno="5386"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5388"><highlight class="normal"></highlight></codeline>
<codeline lineno="5389"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5390"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5391"><highlight class="normal"></highlight></codeline>
<codeline lineno="5392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*enqueueMapBuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;buffer,<sp/>cl_bool<sp/>blocking,</highlight></codeline>
<codeline lineno="5393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_map_flags<sp/>flags,<sp/>::size_t<sp/>offset,<sp/>::size_t<sp/>size,</highlight></codeline>
<codeline lineno="5394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5396"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5397"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="5398"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*result<sp/>=<sp/>::clEnqueueMapBuffer(</highlight></codeline>
<codeline lineno="5399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>buffer(),<sp/>blocking,<sp/>flags,<sp/>offset,<sp/>size,</highlight></codeline>
<codeline lineno="5400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)<sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="5404"><highlight class="normal"></highlight></codeline>
<codeline lineno="5405"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__ENQUEUE_MAP_BUFFER_ERR);</highlight></codeline>
<codeline lineno="5406"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="5408"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5409"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>error<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5411"><highlight class="normal"></highlight></codeline>
<codeline lineno="5412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5413"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5414"><highlight class="normal"></highlight></codeline>
<codeline lineno="5415"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*enqueueMapImage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image<sp/>&amp;buffer,<sp/>cl_bool<sp/>blocking,</highlight></codeline>
<codeline lineno="5416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_map_flags<sp/>flags,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;origin,</highlight></codeline>
<codeline lineno="5417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,<sp/>::size_t<sp/>*row_pitch,</highlight></codeline>
<codeline lineno="5418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>*slice_pitch,</highlight></codeline>
<codeline lineno="5419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5421"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5422"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="5423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*result<sp/>=<sp/>::clEnqueueMapImage(</highlight></codeline>
<codeline lineno="5424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>buffer(),<sp/>blocking,<sp/>flags,<sp/>(const<sp/>::size_t<sp/>*)origin,</highlight></codeline>
<codeline lineno="5425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>::size_t<sp/>*)region,<sp/>row_pitch,<sp/>slice_pitch,</highlight></codeline>
<codeline lineno="5426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)<sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="5430"><highlight class="normal"></highlight></codeline>
<codeline lineno="5431"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__ENQUEUE_MAP_IMAGE_ERR);</highlight></codeline>
<codeline lineno="5432"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="5434"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5435"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>error<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5437"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5438"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5439"><highlight class="normal"></highlight></codeline>
<codeline lineno="5440"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueUnmapMemObject(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Memory<sp/>&amp;memory,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*mapped_ptr,</highlight></codeline>
<codeline lineno="5441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5443"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5444"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=</highlight></codeline>
<codeline lineno="5445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>detail::errHandler(::clEnqueueUnmapMemObject(</highlight></codeline>
<codeline lineno="5446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>memory(),<sp/>mapped_ptr,</highlight></codeline>
<codeline lineno="5447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_UNMAP_MEM_OBJECT_ERR);</highlight></codeline>
<codeline lineno="5453"><highlight class="normal"></highlight></codeline>
<codeline lineno="5454"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5456"><highlight class="normal"></highlight></codeline>
<codeline lineno="5457"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5458"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5459"><highlight class="normal"></highlight></codeline>
<codeline lineno="5460"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight></codeline>
<codeline lineno="5473"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueMarkerWithWaitList(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="5475"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5476"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueMarkerWithWaitList(</highlight></codeline>
<codeline lineno="5478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_MARKER_WAIT_LIST_ERR);</highlight></codeline>
<codeline lineno="5484"><highlight class="normal"></highlight></codeline>
<codeline lineno="5485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5487"><highlight class="normal"></highlight></codeline>
<codeline lineno="5488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5489"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5490"><highlight class="normal"></highlight></codeline>
<codeline lineno="5503"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueBarrierWithWaitList(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>0,</highlight></codeline>
<codeline lineno="5504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="5505"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5506"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueBarrierWithWaitList(</highlight></codeline>
<codeline lineno="5508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_BARRIER_WAIT_LIST_ERR);</highlight></codeline>
<codeline lineno="5514"><highlight class="normal"></highlight></codeline>
<codeline lineno="5515"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5517"><highlight class="normal"></highlight></codeline>
<codeline lineno="5518"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5519"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5520"><highlight class="normal"></highlight></codeline>
<codeline lineno="5525"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueMigrateMemObjects(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Memory&gt;<sp/>&amp;memObjects,</highlight></codeline>
<codeline lineno="5526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_mem_migration_flags<sp/>flags,</highlight></codeline>
<codeline lineno="5527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5529"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5530"><highlight class="normal"></highlight></codeline>
<codeline lineno="5531"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_mem<sp/>*localMemObjects<sp/>=</highlight></codeline>
<codeline lineno="5532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">cl_mem<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(alloca(memObjects.size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cl_mem)));</highlight></codeline>
<codeline lineno="5533"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>(int)memObjects.size();<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="5534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>localMemObjects[i]<sp/>=<sp/>memObjects[i]();</highlight></codeline>
<codeline lineno="5535"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5536"><highlight class="normal"></highlight></codeline>
<codeline lineno="5537"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueMigrateMemObjects(</highlight></codeline>
<codeline lineno="5539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>(cl_uint)memObjects.size(),</highlight></codeline>
<codeline lineno="5540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">cl_mem<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(localMemObjects),<sp/>flags,</highlight></codeline>
<codeline lineno="5541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_UNMAP_MEM_OBJECT_ERR);</highlight></codeline>
<codeline lineno="5547"><highlight class="normal"></highlight></codeline>
<codeline lineno="5548"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5550"><highlight class="normal"></highlight></codeline>
<codeline lineno="5551"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5552"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5553"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5554"><highlight class="normal"></highlight></codeline>
<codeline lineno="5555"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueNDRangeKernel(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Kernel<sp/>&amp;kernel,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NDRange<sp/>&amp;offset,</highlight></codeline>
<codeline lineno="5556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NDRange<sp/>&amp;global,</highlight></codeline>
<codeline lineno="5557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>NDRange<sp/>&amp;local<sp/>=<sp/>NullRange,</highlight></codeline>
<codeline lineno="5558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5560"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5561"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueNDRangeKernel(</highlight></codeline>
<codeline lineno="5563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>kernel(),<sp/>(cl_uint)global.dimensions(),</highlight></codeline>
<codeline lineno="5564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>offset.dimensions()<sp/>!=<sp/>0<sp/>?<sp/>(const<sp/>::size_t<sp/>*)offset<sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(const<sp/>::size_t<sp/>*)global,</highlight></codeline>
<codeline lineno="5566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local.dimensions()<sp/>!=<sp/>0<sp/>?<sp/>(const<sp/>::size_t<sp/>*)local<sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_NDRANGE_KERNEL_ERR);</highlight></codeline>
<codeline lineno="5573"><highlight class="normal"></highlight></codeline>
<codeline lineno="5574"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5576"><highlight class="normal"></highlight></codeline>
<codeline lineno="5577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5578"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5579"><highlight class="normal"></highlight></codeline>
<codeline lineno="5580"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueTask(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Kernel<sp/>&amp;kernel,</highlight></codeline>
<codeline lineno="5581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5583"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5584"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueTask(object_,<sp/>kernel(),</highlight></codeline>
<codeline lineno="5586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_TASK_ERR);</highlight></codeline>
<codeline lineno="5592"><highlight class="normal"></highlight></codeline>
<codeline lineno="5593"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5595"><highlight class="normal"></highlight></codeline>
<codeline lineno="5596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5597"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5598"><highlight class="normal"></highlight></codeline>
<codeline lineno="5599"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueNativeKernel(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(CL_CALLBACK<sp/>*userFptr)(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*),</highlight></codeline>
<codeline lineno="5600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::pair&lt;void<sp/>*,<sp/>::size_t&gt;<sp/>args,</highlight></codeline>
<codeline lineno="5601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Memory&gt;<sp/>*mem_objects<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;const<sp/>void<sp/>*&gt;<sp/>*mem_locs<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5605"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_mem<sp/>*mems<sp/>=<sp/>(mem_objects<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>mem_objects-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_mem<sp/>*)alloca(mem_objects-&gt;size()<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(cl_mem))</highlight></codeline>
<codeline lineno="5607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL;</highlight></codeline>
<codeline lineno="5608"><highlight class="normal"></highlight></codeline>
<codeline lineno="5609"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mems<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>mem_objects-&gt;size();<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="5611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mems[i]<sp/>=<sp/>((*mem_objects)[i])();</highlight></codeline>
<codeline lineno="5612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5613"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5614"><highlight class="normal"></highlight></codeline>
<codeline lineno="5615"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5616"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueNativeKernel(</highlight></codeline>
<codeline lineno="5618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>userFptr,<sp/>args.first,<sp/>args.second,</highlight></codeline>
<codeline lineno="5619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mem_objects<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)mem_objects-&gt;size()<sp/>:<sp/>0,<sp/>mems,</highlight></codeline>
<codeline lineno="5620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mem_locs<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>mem_locs-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(const<sp/>void<sp/>**)&amp;mem_locs-&gt;front()</highlight></codeline>
<codeline lineno="5622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_NATIVE_KERNEL);</highlight></codeline>
<codeline lineno="5629"><highlight class="normal"></highlight></codeline>
<codeline lineno="5630"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5632"><highlight class="normal"></highlight></codeline>
<codeline lineno="5633"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5634"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5635"><highlight class="normal"></highlight></codeline>
<codeline lineno="5639"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_USE_DEPRECATED_OPENCL_1_1_APIS)<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5640"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(defined(CL_VERSION_1_1)<sp/>&amp;&amp;<sp/>!defined(CL_VERSION_1_2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5641"><highlight class="normal"><sp/><sp/>CL_EXT_PREFIX__VERSION_1_1_DEPRECATED</highlight></codeline>
<codeline lineno="5642"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueMarker(Event<sp/>*event<sp/>=<sp/>NULL)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED<sp/>{</highlight></codeline>
<codeline lineno="5644"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5645"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueMarker(object_,<sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_MARKER_ERR);</highlight></codeline>
<codeline lineno="5648"><highlight class="normal"></highlight></codeline>
<codeline lineno="5649"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5651"><highlight class="normal"></highlight></codeline>
<codeline lineno="5652"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5653"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5654"><highlight class="normal"></highlight></codeline>
<codeline lineno="5655"><highlight class="normal"><sp/><sp/>CL_EXT_PREFIX__VERSION_1_1_DEPRECATED</highlight></codeline>
<codeline lineno="5656"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueWaitForEvents(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>&amp;events)<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED<sp/>{</highlight></codeline>
<codeline lineno="5658"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueWaitForEvents(</highlight></codeline>
<codeline lineno="5660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>(cl_uint)events.size(),</highlight></codeline>
<codeline lineno="5661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events.size()<sp/>&gt;<sp/>0<sp/>?<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_event<sp/>*)&amp;events.front()<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_WAIT_FOR_EVENTS_ERR);</highlight></codeline>
<codeline lineno="5663"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5664"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5665"><highlight class="normal"></highlight></codeline>
<codeline lineno="5666" refid="classcl_1_1_command_queue_1ab987adc2e00f12c74b554ee708ed5b3f" refkind="member"><highlight class="normal"><sp/><sp/>cl_int<sp/><ref refid="classcl_1_1_command_queue_1ab987adc2e00f12c74b554ee708ed5b3f" kindref="member">enqueueAcquireGLObjects</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Memory&gt;<sp/>*mem_objects<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5669"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5670"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5671"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueAcquireGLObjects(</highlight></codeline>
<codeline lineno="5672"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>(mem_objects<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)mem_objects-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mem_objects<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>mem_objects-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>*)&amp;mem_objects-&gt;front()</highlight></codeline>
<codeline lineno="5675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_ACQUIRE_GL_ERR);</highlight></codeline>
<codeline lineno="5682"><highlight class="normal"></highlight></codeline>
<codeline lineno="5683"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5685"><highlight class="normal"></highlight></codeline>
<codeline lineno="5686"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5687"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5688"><highlight class="normal"></highlight></codeline>
<codeline lineno="5689"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueReleaseGLObjects(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Memory&gt;<sp/>*mem_objects<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5692"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5693"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueReleaseGLObjects(</highlight></codeline>
<codeline lineno="5695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>(mem_objects<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)mem_objects-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mem_objects<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>mem_objects-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(const<sp/>cl_mem<sp/>*)&amp;mem_objects-&gt;front()</highlight></codeline>
<codeline lineno="5698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_RELEASE_GL_ERR);</highlight></codeline>
<codeline lineno="5705"><highlight class="normal"></highlight></codeline>
<codeline lineno="5706"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5708"><highlight class="normal"></highlight></codeline>
<codeline lineno="5709"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5710"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5711"><highlight class="normal"></highlight></codeline>
<codeline lineno="5712"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_DX_INTEROP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5713"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>CL_API_ENTRY<sp/>cl_int(CL_API_CALL<sp/>*PFN_clEnqueueAcquireD3D10ObjectsKHR)(</highlight></codeline>
<codeline lineno="5714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cl_command_queue<sp/>command_queue,<sp/>cl_uint<sp/>num_objects,</highlight></codeline>
<codeline lineno="5715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>*mem_objects,<sp/>cl_uint<sp/>num_events_in_wait_list,</highlight></codeline>
<codeline lineno="5716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_event<sp/>*event_wait_list,<sp/>cl_event<sp/>*event);</highlight></codeline>
<codeline lineno="5717"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>CL_API_ENTRY<sp/>cl_int(CL_API_CALL<sp/>*PFN_clEnqueueReleaseD3D10ObjectsKHR)(</highlight></codeline>
<codeline lineno="5718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cl_command_queue<sp/>command_queue,<sp/>cl_uint<sp/>num_objects,</highlight></codeline>
<codeline lineno="5719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_mem<sp/>*mem_objects,<sp/>cl_uint<sp/>num_events_in_wait_list,</highlight></codeline>
<codeline lineno="5720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>cl_event<sp/>*event_wait_list,<sp/>cl_event<sp/>*event);</highlight></codeline>
<codeline lineno="5721"><highlight class="normal"></highlight></codeline>
<codeline lineno="5722"><highlight class="normal"><sp/><sp/>cl_int</highlight></codeline>
<codeline lineno="5723"><highlight class="normal"><sp/><sp/>enqueueAcquireD3D10Objects(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Memory&gt;<sp/>*mem_objects<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5726"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PFN_clEnqueueAcquireD3D10ObjectsKHR</highlight></codeline>
<codeline lineno="5727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfn_clEnqueueAcquireD3D10ObjectsKHR<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5728"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5729"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_context<sp/>context<sp/>=<sp/>getInfo&lt;CL_QUEUE_CONTEXT&gt;();</highlight></codeline>
<codeline lineno="5730"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_device" kindref="compound">cl::Device</ref><sp/>device(getInfo&lt;CL_QUEUE_DEVICE&gt;());</highlight></codeline>
<codeline lineno="5731"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_platform_id<sp/>platform<sp/>=<sp/>device.getInfo&lt;CL_DEVICE_PLATFORM&gt;();</highlight></codeline>
<codeline lineno="5732"><highlight class="normal"><sp/><sp/><sp/><sp/>__INIT_CL_EXT_FCN_PTR_PLATFORM(platform,<sp/>clEnqueueAcquireD3D10ObjectsKHR);</highlight></codeline>
<codeline lineno="5733"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5734"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5735"><highlight class="normal"><sp/><sp/><sp/><sp/>__INIT_CL_EXT_FCN_PTR(clEnqueueAcquireD3D10ObjectsKHR);</highlight></codeline>
<codeline lineno="5736"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5737"><highlight class="normal"></highlight></codeline>
<codeline lineno="5738"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5739"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5740"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfn_clEnqueueAcquireD3D10ObjectsKHR(</highlight></codeline>
<codeline lineno="5741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>(mem_objects<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)mem_objects-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mem_objects<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>mem_objects-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(const<sp/>cl_mem<sp/>*)&amp;mem_objects-&gt;front()</highlight></codeline>
<codeline lineno="5744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()<sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_ACQUIRE_GL_ERR);</highlight></codeline>
<codeline lineno="5749"><highlight class="normal"></highlight></codeline>
<codeline lineno="5750"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5752"><highlight class="normal"></highlight></codeline>
<codeline lineno="5753"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5754"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5755"><highlight class="normal"></highlight></codeline>
<codeline lineno="5756"><highlight class="normal"><sp/><sp/>cl_int</highlight></codeline>
<codeline lineno="5757"><highlight class="normal"><sp/><sp/>enqueueReleaseD3D10Objects(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Memory&gt;<sp/>*mem_objects<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5760"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>PFN_clEnqueueReleaseD3D10ObjectsKHR</highlight></codeline>
<codeline lineno="5761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfn_clEnqueueReleaseD3D10ObjectsKHR<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="5762"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5763"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_context<sp/>context<sp/>=<sp/>getInfo&lt;CL_QUEUE_CONTEXT&gt;();</highlight></codeline>
<codeline lineno="5764"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_device" kindref="compound">cl::Device</ref><sp/>device(getInfo&lt;CL_QUEUE_DEVICE&gt;());</highlight></codeline>
<codeline lineno="5765"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_platform_id<sp/>platform<sp/>=<sp/>device.getInfo&lt;CL_DEVICE_PLATFORM&gt;();</highlight></codeline>
<codeline lineno="5766"><highlight class="normal"><sp/><sp/><sp/><sp/>__INIT_CL_EXT_FCN_PTR_PLATFORM(platform,<sp/>clEnqueueReleaseD3D10ObjectsKHR);</highlight></codeline>
<codeline lineno="5767"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5768"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5769"><highlight class="normal"><sp/><sp/><sp/><sp/>__INIT_CL_EXT_FCN_PTR(clEnqueueReleaseD3D10ObjectsKHR);</highlight></codeline>
<codeline lineno="5770"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5771"><highlight class="normal"></highlight></codeline>
<codeline lineno="5772"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5773"><highlight class="normal"><sp/><sp/><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pfn_clEnqueueReleaseD3D10ObjectsKHR(</highlight></codeline>
<codeline lineno="5775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>object_,<sp/>(mem_objects<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)mem_objects-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(mem_objects<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>mem_objects-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(const<sp/>cl_mem<sp/>*)&amp;mem_objects-&gt;front()</highlight></codeline>
<codeline lineno="5778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_RELEASE_GL_ERR);</highlight></codeline>
<codeline lineno="5785"><highlight class="normal"></highlight></codeline>
<codeline lineno="5786"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="5787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="5788"><highlight class="normal"></highlight></codeline>
<codeline lineno="5789"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="5790"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5791"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5792"><highlight class="normal"></highlight></codeline>
<codeline lineno="5796"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_USE_DEPRECATED_OPENCL_1_1_APIS)<sp/>||<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="5797"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>(defined(CL_VERSION_1_1)<sp/>&amp;&amp;<sp/>!defined(CL_VERSION_1_2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5798"><highlight class="normal"><sp/><sp/>CL_EXT_PREFIX__VERSION_1_1_DEPRECATED</highlight></codeline>
<codeline lineno="5799"><highlight class="normal"><sp/><sp/>cl_int<sp/>enqueueBarrier()<sp/>const<sp/>CL_EXT_SUFFIX__VERSION_1_1_DEPRECATED<sp/>{</highlight></codeline>
<codeline lineno="5800"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(::clEnqueueBarrier(object_),</highlight></codeline>
<codeline lineno="5801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_BARRIER_ERR);</highlight></codeline>
<codeline lineno="5802"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5803"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5804"><highlight class="normal"></highlight></codeline>
<codeline lineno="5805" refid="classcl_1_1_command_queue_1a3cba88b51715610d76b0956140be9655" refkind="member"><highlight class="normal"><sp/><sp/>cl_int<sp/><ref refid="classcl_1_1_command_queue_1a3cba88b51715610d76b0956140be9655" kindref="member">flush</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5806"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(::clFlush(object_),<sp/>__FLUSH_ERR);</highlight></codeline>
<codeline lineno="5807"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5808"><highlight class="normal"></highlight></codeline>
<codeline lineno="5809"><highlight class="normal"><sp/><sp/>cl_int<sp/>finish()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="5810"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>detail::errHandler(::clFinish(object_),<sp/>__FINISH_ERR);</highlight></codeline>
<codeline lineno="5811"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5812"><highlight class="normal">};</highlight></codeline>
<codeline lineno="5813"><highlight class="normal"></highlight></codeline>
<codeline lineno="5814"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5815"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5816"><highlight class="normal">__declspec(selectany)<sp/>std::atomic&lt;int&gt;<sp/>CommandQueue::default_initialized_;</highlight></codeline>
<codeline lineno="5817"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5818"><highlight class="normal">__declspec(selectany)<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CommandQueue::default_initialized_<sp/>=</highlight></codeline>
<codeline lineno="5819"><highlight class="normal"><sp/><sp/><sp/><sp/>__DEFAULT_NOT_INITIALIZED;</highlight></codeline>
<codeline lineno="5820"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5821"><highlight class="normal">__declspec(selectany)<sp/>CommandQueue<sp/>CommandQueue::default_;</highlight></codeline>
<codeline lineno="5822"><highlight class="normal">__declspec(selectany)<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>cl_int<sp/>CommandQueue::default_error_<sp/>=<sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="5823"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/></highlight><highlight class="comment">//<sp/>!_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5824"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5825"><highlight class="normal">__attribute__((weak))<sp/>std::atomic&lt;int&gt;<sp/>CommandQueue::default_initialized_;</highlight></codeline>
<codeline lineno="5826"><highlight class="normal"></highlight><highlight class="preprocessor">#else<sp/><sp/></highlight><highlight class="comment">//<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5827"><highlight class="normal">__attribute__((weak))<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>CommandQueue::default_initialized_<sp/>=</highlight></codeline>
<codeline lineno="5828"><highlight class="normal"><sp/><sp/><sp/><sp/>__DEFAULT_NOT_INITIALIZED;</highlight></codeline>
<codeline lineno="5829"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!CL_HPP_CPP11_ATOMICS_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5830"><highlight class="normal">__attribute__((weak))<sp/>CommandQueue<sp/>CommandQueue::default_;</highlight></codeline>
<codeline lineno="5831"><highlight class="normal">__attribute__((weak))<sp/></highlight><highlight class="keyword">volatile</highlight><highlight class="normal"><sp/>cl_int<sp/>CommandQueue::default_error_<sp/>=<sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="5832"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>!_WIN32</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5833"><highlight class="normal"></highlight></codeline>
<codeline lineno="5834"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IteratorType&gt;</highlight></codeline>
<codeline lineno="5835"><highlight class="normal"><ref refid="classcl_1_1_buffer_1a1c82aa24dd8a4d80b698605f60a26d71" kindref="member">Buffer::Buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Context<sp/>&amp;context,<sp/>IteratorType<sp/>startIterator,</highlight></codeline>
<codeline lineno="5836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IteratorType<sp/>endIterator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>readOnly,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useHostPtr,</highlight></codeline>
<codeline lineno="5837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_int<sp/>*err)<sp/>{</highlight></codeline>
<codeline lineno="5838"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::iterator_traits&lt;IteratorType&gt;::value_type<sp/>DataType;</highlight></codeline>
<codeline lineno="5839"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="5840"><highlight class="normal"></highlight></codeline>
<codeline lineno="5841"><highlight class="normal"><sp/><sp/>cl_mem_flags<sp/>flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5842"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readOnly)<sp/>{</highlight></codeline>
<codeline lineno="5843"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>CL_MEM_READ_ONLY;</highlight></codeline>
<codeline lineno="5844"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5845"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>CL_MEM_READ_WRITE;</highlight></codeline>
<codeline lineno="5846"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5847"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useHostPtr)<sp/>{</highlight></codeline>
<codeline lineno="5848"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>CL_MEM_USE_HOST_PTR;</highlight></codeline>
<codeline lineno="5849"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5850"><highlight class="normal"></highlight></codeline>
<codeline lineno="5851"><highlight class="normal"><sp/><sp/>::size_t<sp/>size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>(endIterator<sp/>-<sp/>startIterator);</highlight></codeline>
<codeline lineno="5852"><highlight class="normal"></highlight></codeline>
<codeline lineno="5853"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useHostPtr)<sp/>{</highlight></codeline>
<codeline lineno="5854"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=</highlight></codeline>
<codeline lineno="5855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clCreateBuffer(context(),<sp/>flags,<sp/>size,</highlight></codeline>
<codeline lineno="5856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">DataType<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;*startIterator),<sp/>&amp;error);</highlight></codeline>
<codeline lineno="5857"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5858"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateBuffer(context(),<sp/>flags,<sp/>size,<sp/>0,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="5859"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5860"><highlight class="normal"></highlight></codeline>
<codeline lineno="5861"><highlight class="normal"><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_BUFFER_ERR);</highlight></codeline>
<codeline lineno="5862"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5863"><highlight class="normal"><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="5864"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5865"><highlight class="normal"></highlight></codeline>
<codeline lineno="5866"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!useHostPtr)<sp/>{</highlight></codeline>
<codeline lineno="5867"><highlight class="normal"><sp/><sp/><sp/><sp/>CommandQueue<sp/>queue(context,<sp/>0,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="5868"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_BUFFER_ERR);</highlight></codeline>
<codeline lineno="5869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="5871"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5872"><highlight class="normal"></highlight></codeline>
<codeline lineno="5873"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="namespacecl_1a1197a833cdd6664f206b079f2bebd2eb" kindref="member">cl::copy</ref>(queue,<sp/>startIterator,<sp/>endIterator,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5874"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_BUFFER_ERR);</highlight></codeline>
<codeline lineno="5875"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="5877"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5878"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5879"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5880"><highlight class="normal"></highlight></codeline>
<codeline lineno="5881"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IteratorType&gt;</highlight></codeline>
<codeline lineno="5882" refid="classcl_1_1_buffer_1a589e770b263ccedb789620860799e2c6" refkind="member"><highlight class="normal"><ref refid="classcl_1_1_buffer_1a1c82aa24dd8a4d80b698605f60a26d71" kindref="member">Buffer::Buffer</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>&amp;queue,<sp/>IteratorType<sp/>startIterator,</highlight></codeline>
<codeline lineno="5883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IteratorType<sp/>endIterator,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>readOnly,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>useHostPtr,</highlight></codeline>
<codeline lineno="5884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_int<sp/>*err)<sp/>{</highlight></codeline>
<codeline lineno="5885"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::iterator_traits&lt;IteratorType&gt;::value_type<sp/>DataType;</highlight></codeline>
<codeline lineno="5886"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="5887"><highlight class="normal"></highlight></codeline>
<codeline lineno="5888"><highlight class="normal"><sp/><sp/>cl_mem_flags<sp/>flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="5889"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(readOnly)<sp/>{</highlight></codeline>
<codeline lineno="5890"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>CL_MEM_READ_ONLY;</highlight></codeline>
<codeline lineno="5891"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5892"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>CL_MEM_READ_WRITE;</highlight></codeline>
<codeline lineno="5893"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5894"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useHostPtr)<sp/>{</highlight></codeline>
<codeline lineno="5895"><highlight class="normal"><sp/><sp/><sp/><sp/>flags<sp/>|=<sp/>CL_MEM_USE_HOST_PTR;</highlight></codeline>
<codeline lineno="5896"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5897"><highlight class="normal"></highlight></codeline>
<codeline lineno="5898"><highlight class="normal"><sp/><sp/>::size_t<sp/>size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType)<sp/>*<sp/>(endIterator<sp/>-<sp/>startIterator);</highlight></codeline>
<codeline lineno="5899"><highlight class="normal"></highlight></codeline>
<codeline lineno="5900"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_context" kindref="compound">Context</ref><sp/>context<sp/>=<sp/>queue.getInfo&lt;CL_QUEUE_CONTEXT&gt;();</highlight></codeline>
<codeline lineno="5901"><highlight class="normal"></highlight></codeline>
<codeline lineno="5902"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(useHostPtr)<sp/>{</highlight></codeline>
<codeline lineno="5903"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=</highlight></codeline>
<codeline lineno="5904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::clCreateBuffer(context(),<sp/>flags,<sp/>size,</highlight></codeline>
<codeline lineno="5905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">DataType<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;*startIterator),<sp/>&amp;error);</highlight></codeline>
<codeline lineno="5906"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="5907"><highlight class="normal"><sp/><sp/><sp/><sp/>object_<sp/>=<sp/>::clCreateBuffer(context(),<sp/>flags,<sp/>size,<sp/>0,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="5908"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5909"><highlight class="normal"></highlight></codeline>
<codeline lineno="5910"><highlight class="normal"><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_BUFFER_ERR);</highlight></codeline>
<codeline lineno="5911"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5912"><highlight class="normal"><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="5913"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5914"><highlight class="normal"></highlight></codeline>
<codeline lineno="5915"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!useHostPtr)<sp/>{</highlight></codeline>
<codeline lineno="5916"><highlight class="normal"><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="namespacecl_1a1197a833cdd6664f206b079f2bebd2eb" kindref="member">cl::copy</ref>(queue,<sp/>startIterator,<sp/>endIterator,<sp/>*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="5917"><highlight class="normal"><sp/><sp/><sp/><sp/>detail::errHandler(error,<sp/>__CREATE_BUFFER_ERR);</highlight></codeline>
<codeline lineno="5918"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="5920"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="5921"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5923"><highlight class="normal"></highlight></codeline>
<codeline lineno="5924"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>enqueueReadBuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_buffer" kindref="compound">Buffer</ref><sp/>&amp;buffer,<sp/>cl_bool<sp/>blocking,</highlight></codeline>
<codeline lineno="5925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>offset,<sp/>::size_t<sp/>size,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,</highlight></codeline>
<codeline lineno="5926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5927"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>*event<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5928"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="5929"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>queue<sp/>=<sp/>CommandQueue::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="5930"><highlight class="normal"></highlight></codeline>
<codeline lineno="5931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="5932"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="5933"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5934"><highlight class="normal"></highlight></codeline>
<codeline lineno="5935"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue.enqueueReadBuffer(buffer,<sp/>blocking,<sp/>offset,<sp/>size,<sp/>ptr,<sp/>events,</highlight></codeline>
<codeline lineno="5936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="5937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5938"><highlight class="normal"></highlight></codeline>
<codeline lineno="5939"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>enqueueWriteBuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;buffer,<sp/>cl_bool<sp/>blocking,</highlight></codeline>
<codeline lineno="5940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>offset,<sp/>::size_t<sp/>size,</highlight></codeline>
<codeline lineno="5941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,</highlight></codeline>
<codeline lineno="5942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5944"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="5945"><highlight class="normal"><sp/><sp/>CommandQueue<sp/>queue<sp/>=<sp/>CommandQueue::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="5946"><highlight class="normal"></highlight></codeline>
<codeline lineno="5947"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="5948"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="5949"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5950"><highlight class="normal"></highlight></codeline>
<codeline lineno="5951"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue.enqueueWriteBuffer(buffer,<sp/>blocking,<sp/>offset,<sp/>size,<sp/>ptr,<sp/>events,</highlight></codeline>
<codeline lineno="5952"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="5953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5954"><highlight class="normal"></highlight></codeline>
<codeline lineno="5955"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*enqueueMapBuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;buffer,<sp/>cl_bool<sp/>blocking,</highlight></codeline>
<codeline lineno="5956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_map_flags<sp/>flags,<sp/>::size_t<sp/>offset,</highlight></codeline>
<codeline lineno="5957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>size,</highlight></codeline>
<codeline lineno="5958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL,<sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5960"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="5961"><highlight class="normal"><sp/><sp/>CommandQueue<sp/>queue<sp/>=<sp/>CommandQueue::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="5962"><highlight class="normal"><sp/><sp/>detail::errHandler(error,<sp/>__ENQUEUE_MAP_BUFFER_ERR);</highlight></codeline>
<codeline lineno="5963"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5964"><highlight class="normal"><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="5965"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5966"><highlight class="normal"></highlight></codeline>
<codeline lineno="5967"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*result<sp/>=<sp/>::clEnqueueMapBuffer(</highlight></codeline>
<codeline lineno="5968"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>queue(),<sp/>buffer(),<sp/>blocking,<sp/>flags,<sp/>offset,<sp/>size,</highlight></codeline>
<codeline lineno="5969"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5970"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)<sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(cl_event<sp/>*)event,<sp/>&amp;error);</highlight></codeline>
<codeline lineno="5973"><highlight class="normal"></highlight></codeline>
<codeline lineno="5974"><highlight class="normal"><sp/><sp/>detail::errHandler(error,<sp/>__ENQUEUE_MAP_BUFFER_ERR);</highlight></codeline>
<codeline lineno="5975"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(err<sp/>!=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5976"><highlight class="normal"><sp/><sp/><sp/><sp/>*err<sp/>=<sp/>error;</highlight></codeline>
<codeline lineno="5977"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5978"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="5979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5980"><highlight class="normal"></highlight></codeline>
<codeline lineno="5981"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>enqueueUnmapMemObject(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Memory<sp/>&amp;memory,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*mapped_ptr,</highlight></codeline>
<codeline lineno="5982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="5983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="5984"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="5985"><highlight class="normal"><sp/><sp/>CommandQueue<sp/>queue<sp/>=<sp/>CommandQueue::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="5986"><highlight class="normal"><sp/><sp/>detail::errHandler(error,<sp/>__ENQUEUE_MAP_BUFFER_ERR);</highlight></codeline>
<codeline lineno="5987"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="5988"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="5989"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="5990"><highlight class="normal"></highlight></codeline>
<codeline lineno="5991"><highlight class="normal"><sp/><sp/>cl_event<sp/>tmp;</highlight></codeline>
<codeline lineno="5992"><highlight class="normal"><sp/><sp/>cl_int<sp/>err<sp/>=<sp/>detail::errHandler(</highlight></codeline>
<codeline lineno="5993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>::clEnqueueUnmapMemObject(queue(),<sp/>memory(),<sp/>mapped_ptr,</highlight></codeline>
<codeline lineno="5994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL)<sp/>?<sp/>(cl_uint)events-&gt;size()<sp/>:<sp/>0,</highlight></codeline>
<codeline lineno="5995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(events<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>events-&gt;size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="5996"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>?<sp/>(cl_event<sp/>*)&amp;events-&gt;front()</highlight></codeline>
<codeline lineno="5997"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>NULL,</highlight></codeline>
<codeline lineno="5998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(event<sp/>!=<sp/>NULL)<sp/>?<sp/>&amp;tmp<sp/>:<sp/>NULL),</highlight></codeline>
<codeline lineno="5999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>__ENQUEUE_UNMAP_MEM_OBJECT_ERR);</highlight></codeline>
<codeline lineno="6000"><highlight class="normal"></highlight></codeline>
<codeline lineno="6001"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(event<sp/>!=<sp/>NULL<sp/>&amp;&amp;<sp/>err<sp/>==<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="6002"><highlight class="normal"><sp/><sp/><sp/><sp/>*</highlight><highlight class="keyword">event</highlight><highlight class="normal"><sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="6003"><highlight class="normal"></highlight></codeline>
<codeline lineno="6004"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>err;</highlight></codeline>
<codeline lineno="6005"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6006"><highlight class="normal"></highlight></codeline>
<codeline lineno="6007"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>enqueueCopyBuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;dst,</highlight></codeline>
<codeline lineno="6008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>src_offset,<sp/>::size_t<sp/>dst_offset,</highlight></codeline>
<codeline lineno="6009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>size,</highlight></codeline>
<codeline lineno="6010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="6011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6012"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="6013"><highlight class="normal"><sp/><sp/>CommandQueue<sp/>queue<sp/>=<sp/>CommandQueue::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="6014"><highlight class="normal"></highlight></codeline>
<codeline lineno="6015"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="6016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="6017"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6018"><highlight class="normal"></highlight></codeline>
<codeline lineno="6019"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue.enqueueCopyBuffer(src,<sp/>dst,<sp/>src_offset,<sp/>dst_offset,<sp/>size,<sp/>events,</highlight></codeline>
<codeline lineno="6020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>event);</highlight></codeline>
<codeline lineno="6021"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6022"><highlight class="normal"></highlight></codeline>
<codeline lineno="6028"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IteratorType&gt;</highlight></codeline>
<codeline lineno="6029" refid="namespacecl_1a1197a833cdd6664f206b079f2bebd2eb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/><ref refid="namespacecl_1a1197a833cdd6664f206b079f2bebd2eb" kindref="member">copy</ref>(IteratorType<sp/>startIterator,<sp/>IteratorType<sp/>endIterator,</highlight></codeline>
<codeline lineno="6030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_buffer" kindref="compound">cl::Buffer</ref><sp/>&amp;buffer)<sp/>{</highlight></codeline>
<codeline lineno="6031"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="6032"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>queue<sp/>=<sp/>CommandQueue::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="6033"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="6034"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="6035"><highlight class="normal"></highlight></codeline>
<codeline lineno="6036"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecl_1a1197a833cdd6664f206b079f2bebd2eb" kindref="member">cl::copy</ref>(queue,<sp/>startIterator,<sp/>endIterator,<sp/>buffer);</highlight></codeline>
<codeline lineno="6037"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6038"><highlight class="normal"></highlight></codeline>
<codeline lineno="6044"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IteratorType&gt;</highlight></codeline>
<codeline lineno="6045" refid="namespacecl_1a05791e9d5da23b21abd6e319fb262c9f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/><ref refid="namespacecl_1a1197a833cdd6664f206b079f2bebd2eb" kindref="member">copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_buffer" kindref="compound">cl::Buffer</ref><sp/>&amp;buffer,<sp/>IteratorType<sp/>startIterator,</highlight></codeline>
<codeline lineno="6046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IteratorType<sp/>endIterator)<sp/>{</highlight></codeline>
<codeline lineno="6047"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="6048"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>queue<sp/>=<sp/>CommandQueue::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="6049"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)</highlight></codeline>
<codeline lineno="6050"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="6051"><highlight class="normal"></highlight></codeline>
<codeline lineno="6052"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="namespacecl_1a1197a833cdd6664f206b079f2bebd2eb" kindref="member">cl::copy</ref>(queue,<sp/>buffer,<sp/>startIterator,<sp/>endIterator);</highlight></codeline>
<codeline lineno="6053"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6054"><highlight class="normal"></highlight></codeline>
<codeline lineno="6060"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IteratorType&gt;</highlight></codeline>
<codeline lineno="6061" refid="namespacecl_1a2f71ed9a316daf59c03c0f3ba62f1bd3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/><ref refid="namespacecl_1a1197a833cdd6664f206b079f2bebd2eb" kindref="member">copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>&amp;queue,<sp/>IteratorType<sp/>startIterator,</highlight></codeline>
<codeline lineno="6062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IteratorType<sp/>endIterator,<sp/><ref refid="classcl_1_1_buffer" kindref="compound">cl::Buffer</ref><sp/>&amp;buffer)<sp/>{</highlight></codeline>
<codeline lineno="6063"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::iterator_traits&lt;IteratorType&gt;::value_type<sp/>DataType;</highlight></codeline>
<codeline lineno="6064"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="6065"><highlight class="normal"></highlight></codeline>
<codeline lineno="6066"><highlight class="normal"><sp/><sp/>::size_t<sp/>length<sp/>=<sp/>endIterator<sp/>-<sp/>startIterator;</highlight></codeline>
<codeline lineno="6067"><highlight class="normal"><sp/><sp/>::size_t<sp/>byteLength<sp/>=<sp/>length<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType);</highlight></codeline>
<codeline lineno="6068"><highlight class="normal"></highlight></codeline>
<codeline lineno="6069"><highlight class="normal"><sp/><sp/>DataType<sp/>*pointer<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">DataType<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(queue.enqueueMapBuffer(</highlight></codeline>
<codeline lineno="6070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer,<sp/>CL_TRUE,<sp/>CL_MAP_WRITE,<sp/>0,<sp/>byteLength,<sp/>0,<sp/>0,<sp/>&amp;error));</highlight></codeline>
<codeline lineno="6071"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>exceptions<sp/>enabled,<sp/>enqueueMapBuffer<sp/>will<sp/>throw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6072"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="6073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="6074"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6075"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6076"><highlight class="normal"><sp/><sp/>std::copy(startIterator,<sp/>endIterator,</highlight></codeline>
<codeline lineno="6077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stdext::checked_array_iterator&lt;DataType<sp/>*&gt;(pointer,<sp/>length));</highlight></codeline>
<codeline lineno="6078"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6079"><highlight class="normal"><sp/><sp/>std::copy(startIterator,<sp/>endIterator,<sp/>pointer);</highlight></codeline>
<codeline lineno="6080"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6081"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>endEvent;</highlight></codeline>
<codeline lineno="6082"><highlight class="normal"><sp/><sp/>error<sp/>=<sp/>queue.enqueueUnmapMemObject(buffer,<sp/>pointer,<sp/>0,<sp/>&amp;endEvent);</highlight></codeline>
<codeline lineno="6083"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>exceptions<sp/>enabled,<sp/>enqueueUnmapMemObject<sp/>will<sp/>throw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6084"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="6085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="6086"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6087"><highlight class="normal"><sp/><sp/>endEvent.<ref refid="classcl_1_1_event_1a51f83064c2024df649667071e81fb847" kindref="member">wait</ref>();</highlight></codeline>
<codeline lineno="6088"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="6089"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6090"><highlight class="normal"></highlight></codeline>
<codeline lineno="6096"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>IteratorType&gt;</highlight></codeline>
<codeline lineno="6097" refid="namespacecl_1a02c4368c6ce7a1a99132eafd5dc96fa9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/><ref refid="namespacecl_1a1197a833cdd6664f206b079f2bebd2eb" kindref="member">copy</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>&amp;queue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_buffer" kindref="compound">cl::Buffer</ref><sp/>&amp;buffer,</highlight></codeline>
<codeline lineno="6098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>IteratorType<sp/>startIterator,<sp/>IteratorType<sp/>endIterator)<sp/>{</highlight></codeline>
<codeline lineno="6099"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>std::iterator_traits&lt;IteratorType&gt;::value_type<sp/>DataType;</highlight></codeline>
<codeline lineno="6100"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="6101"><highlight class="normal"></highlight></codeline>
<codeline lineno="6102"><highlight class="normal"><sp/><sp/>::size_t<sp/>length<sp/>=<sp/>endIterator<sp/>-<sp/>startIterator;</highlight></codeline>
<codeline lineno="6103"><highlight class="normal"><sp/><sp/>::size_t<sp/>byteLength<sp/>=<sp/>length<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(DataType);</highlight></codeline>
<codeline lineno="6104"><highlight class="normal"></highlight></codeline>
<codeline lineno="6105"><highlight class="normal"><sp/><sp/>DataType<sp/>*pointer<sp/>=<sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal">DataType<sp/>*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(queue.enqueueMapBuffer(</highlight></codeline>
<codeline lineno="6106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer,<sp/>CL_TRUE,<sp/>CL_MAP_READ,<sp/>0,<sp/>byteLength,<sp/>0,<sp/>0,<sp/>&amp;error));</highlight></codeline>
<codeline lineno="6107"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>exceptions<sp/>enabled,<sp/>enqueueMapBuffer<sp/>will<sp/>throw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6108"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="6109"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="6110"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6111"><highlight class="normal"><sp/><sp/>std::copy(pointer,<sp/>pointer<sp/>+<sp/>length,<sp/>startIterator);</highlight></codeline>
<codeline lineno="6112"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>endEvent;</highlight></codeline>
<codeline lineno="6113"><highlight class="normal"><sp/><sp/>error<sp/>=<sp/>queue.enqueueUnmapMemObject(buffer,<sp/>pointer,<sp/>0,<sp/>&amp;endEvent);</highlight></codeline>
<codeline lineno="6114"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>if<sp/>exceptions<sp/>enabled,<sp/>enqueueUnmapMemObject<sp/>will<sp/>throw</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6115"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="6116"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="6117"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6118"><highlight class="normal"><sp/><sp/>endEvent.<ref refid="classcl_1_1_event_1a51f83064c2024df649667071e81fb847" kindref="member">wait</ref>();</highlight></codeline>
<codeline lineno="6119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>CL_SUCCESS;</highlight></codeline>
<codeline lineno="6120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6121"><highlight class="normal"></highlight></codeline>
<codeline lineno="6122"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6123"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>enqueueReadBufferRect(</highlight></codeline>
<codeline lineno="6124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;buffer,<sp/>cl_bool<sp/>blocking,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;buffer_offset,</highlight></codeline>
<codeline lineno="6125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;host_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,</highlight></codeline>
<codeline lineno="6126"><highlight class="normal"><sp/><sp/><sp/><sp/>::size_t<sp/>buffer_row_pitch,<sp/>::size_t<sp/>buffer_slice_pitch,</highlight></codeline>
<codeline lineno="6127"><highlight class="normal"><sp/><sp/><sp/><sp/>::size_t<sp/>host_row_pitch,<sp/>::size_t<sp/>host_slice_pitch,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,</highlight></codeline>
<codeline lineno="6128"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,<sp/>Event<sp/>*event<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6129"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="6130"><highlight class="normal"><sp/><sp/>CommandQueue<sp/>queue<sp/>=<sp/>CommandQueue::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="6131"><highlight class="normal"></highlight></codeline>
<codeline lineno="6132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="6133"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="6134"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6135"><highlight class="normal"></highlight></codeline>
<codeline lineno="6136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue.enqueueReadBufferRect(</highlight></codeline>
<codeline lineno="6137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer,<sp/>blocking,<sp/>buffer_offset,<sp/>host_offset,<sp/>region,<sp/>buffer_row_pitch,</highlight></codeline>
<codeline lineno="6138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer_slice_pitch,<sp/>host_row_pitch,<sp/>host_slice_pitch,<sp/>ptr,<sp/>events,<sp/>event);</highlight></codeline>
<codeline lineno="6139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6140"><highlight class="normal"></highlight></codeline>
<codeline lineno="6141"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>enqueueWriteBufferRect(</highlight></codeline>
<codeline lineno="6142"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;buffer,<sp/>cl_bool<sp/>blocking,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;buffer_offset,</highlight></codeline>
<codeline lineno="6143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;host_offset,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,</highlight></codeline>
<codeline lineno="6144"><highlight class="normal"><sp/><sp/><sp/><sp/>::size_t<sp/>buffer_row_pitch,<sp/>::size_t<sp/>buffer_slice_pitch,</highlight></codeline>
<codeline lineno="6145"><highlight class="normal"><sp/><sp/><sp/><sp/>::size_t<sp/>host_row_pitch,<sp/>::size_t<sp/>host_slice_pitch,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,</highlight></codeline>
<codeline lineno="6146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,<sp/>Event<sp/>*event<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6147"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="6148"><highlight class="normal"><sp/><sp/>CommandQueue<sp/>queue<sp/>=<sp/>CommandQueue::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="6149"><highlight class="normal"></highlight></codeline>
<codeline lineno="6150"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="6151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="6152"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6153"><highlight class="normal"></highlight></codeline>
<codeline lineno="6154"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue.enqueueWriteBufferRect(</highlight></codeline>
<codeline lineno="6155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer,<sp/>blocking,<sp/>buffer_offset,<sp/>host_offset,<sp/>region,<sp/>buffer_row_pitch,</highlight></codeline>
<codeline lineno="6156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>buffer_slice_pitch,<sp/>host_row_pitch,<sp/>host_slice_pitch,<sp/>ptr,<sp/>events,<sp/>event);</highlight></codeline>
<codeline lineno="6157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6158"><highlight class="normal"></highlight></codeline>
<codeline lineno="6159"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>enqueueCopyBufferRect(</highlight></codeline>
<codeline lineno="6160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;dst,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;src_origin,</highlight></codeline>
<codeline lineno="6161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;dst_origin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,</highlight></codeline>
<codeline lineno="6162"><highlight class="normal"><sp/><sp/><sp/><sp/>::size_t<sp/>src_row_pitch,<sp/>::size_t<sp/>src_slice_pitch,<sp/>::size_t<sp/>dst_row_pitch,</highlight></codeline>
<codeline lineno="6163"><highlight class="normal"><sp/><sp/><sp/><sp/>::size_t<sp/>dst_slice_pitch,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="6164"><highlight class="normal"><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6165"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="6166"><highlight class="normal"><sp/><sp/>CommandQueue<sp/>queue<sp/>=<sp/>CommandQueue::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="6167"><highlight class="normal"></highlight></codeline>
<codeline lineno="6168"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="6169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="6170"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6171"><highlight class="normal"></highlight></codeline>
<codeline lineno="6172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue.enqueueCopyBufferRect(</highlight></codeline>
<codeline lineno="6173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>src,<sp/>dst,<sp/>src_origin,<sp/>dst_origin,<sp/>region,<sp/>src_row_pitch,<sp/>src_slice_pitch,</highlight></codeline>
<codeline lineno="6174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dst_row_pitch,<sp/>dst_slice_pitch,<sp/>events,<sp/>event);</highlight></codeline>
<codeline lineno="6175"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6176"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6177"><highlight class="normal"></highlight></codeline>
<codeline lineno="6178"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>enqueueReadImage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image<sp/>&amp;image,<sp/>cl_bool<sp/>blocking,</highlight></codeline>
<codeline lineno="6179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;origin,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,</highlight></codeline>
<codeline lineno="6180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>row_pitch,<sp/>::size_t<sp/>slice_pitch,</highlight></codeline>
<codeline lineno="6181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,</highlight></codeline>
<codeline lineno="6182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="6183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6184"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="6185"><highlight class="normal"><sp/><sp/>CommandQueue<sp/>queue<sp/>=<sp/>CommandQueue::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="6186"><highlight class="normal"></highlight></codeline>
<codeline lineno="6187"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="6188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="6189"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6190"><highlight class="normal"></highlight></codeline>
<codeline lineno="6191"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue.enqueueReadImage(image,<sp/>blocking,<sp/>origin,<sp/>region,<sp/>row_pitch,</highlight></codeline>
<codeline lineno="6192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_pitch,<sp/>ptr,<sp/>events,<sp/>event);</highlight></codeline>
<codeline lineno="6193"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6194"><highlight class="normal"></highlight></codeline>
<codeline lineno="6195"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>enqueueWriteImage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image<sp/>&amp;image,<sp/>cl_bool<sp/>blocking,</highlight></codeline>
<codeline lineno="6196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;origin,</highlight></codeline>
<codeline lineno="6197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,<sp/>::size_t<sp/>row_pitch,</highlight></codeline>
<codeline lineno="6198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>slice_pitch,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*ptr,</highlight></codeline>
<codeline lineno="6199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="6200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6201"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="6202"><highlight class="normal"><sp/><sp/>CommandQueue<sp/>queue<sp/>=<sp/>CommandQueue::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="6203"><highlight class="normal"></highlight></codeline>
<codeline lineno="6204"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="6205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="6206"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6207"><highlight class="normal"></highlight></codeline>
<codeline lineno="6208"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue.enqueueWriteImage(image,<sp/>blocking,<sp/>origin,<sp/>region,<sp/>row_pitch,</highlight></codeline>
<codeline lineno="6209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slice_pitch,<sp/>ptr,<sp/>events,<sp/>event);</highlight></codeline>
<codeline lineno="6210"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6211"><highlight class="normal"></highlight></codeline>
<codeline lineno="6212"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>enqueueCopyImage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image<sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image<sp/>&amp;dst,</highlight></codeline>
<codeline lineno="6213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;src_origin,</highlight></codeline>
<codeline lineno="6214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;dst_origin,</highlight></codeline>
<codeline lineno="6215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,</highlight></codeline>
<codeline lineno="6216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="6217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6218"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="6219"><highlight class="normal"><sp/><sp/>CommandQueue<sp/>queue<sp/>=<sp/>CommandQueue::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="6220"><highlight class="normal"></highlight></codeline>
<codeline lineno="6221"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="6222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="6223"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6224"><highlight class="normal"></highlight></codeline>
<codeline lineno="6225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue.enqueueCopyImage(src,<sp/>dst,<sp/>src_origin,<sp/>dst_origin,<sp/>region,</highlight></codeline>
<codeline lineno="6226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events,<sp/>event);</highlight></codeline>
<codeline lineno="6227"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6228"><highlight class="normal"></highlight></codeline>
<codeline lineno="6229"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>enqueueCopyImageToBuffer(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image<sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;dst,</highlight></codeline>
<codeline lineno="6230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;src_origin,</highlight></codeline>
<codeline lineno="6231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,</highlight></codeline>
<codeline lineno="6232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>dst_offset,</highlight></codeline>
<codeline lineno="6233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="6234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6235"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="6236"><highlight class="normal"><sp/><sp/>CommandQueue<sp/>queue<sp/>=<sp/>CommandQueue::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="6237"><highlight class="normal"></highlight></codeline>
<codeline lineno="6238"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="6239"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="6240"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6241"><highlight class="normal"></highlight></codeline>
<codeline lineno="6242"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue.enqueueCopyImageToBuffer(src,<sp/>dst,<sp/>src_origin,<sp/>region,</highlight></codeline>
<codeline lineno="6243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dst_offset,<sp/>events,<sp/>event);</highlight></codeline>
<codeline lineno="6244"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6245"><highlight class="normal"></highlight></codeline>
<codeline lineno="6246"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>enqueueCopyBufferToImage(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Buffer<sp/>&amp;src,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Image<sp/>&amp;dst,</highlight></codeline>
<codeline lineno="6247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>::size_t<sp/>src_offset,</highlight></codeline>
<codeline lineno="6248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;dst_origin,</highlight></codeline>
<codeline lineno="6249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>size_t&lt;3&gt;<sp/>&amp;region,</highlight></codeline>
<codeline lineno="6250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>*events<sp/>=<sp/>NULL,</highlight></codeline>
<codeline lineno="6251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Event<sp/>*event<sp/>=<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="6252"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="6253"><highlight class="normal"><sp/><sp/>CommandQueue<sp/>queue<sp/>=<sp/>CommandQueue::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="6254"><highlight class="normal"></highlight></codeline>
<codeline lineno="6255"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="6256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="6257"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6258"><highlight class="normal"></highlight></codeline>
<codeline lineno="6259"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue.enqueueCopyBufferToImage(src,<sp/>dst,<sp/>src_offset,<sp/>dst_origin,</highlight></codeline>
<codeline lineno="6260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>region,<sp/>events,<sp/>event);</highlight></codeline>
<codeline lineno="6261"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6262"><highlight class="normal"></highlight></codeline>
<codeline lineno="6263"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>flush(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="6264"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="6265"><highlight class="normal"><sp/><sp/>CommandQueue<sp/>queue<sp/>=<sp/>CommandQueue::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="6266"><highlight class="normal"></highlight></codeline>
<codeline lineno="6267"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="6268"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="6269"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6270"><highlight class="normal"></highlight></codeline>
<codeline lineno="6271"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue.flush();</highlight></codeline>
<codeline lineno="6272"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6273"><highlight class="normal"></highlight></codeline>
<codeline lineno="6274"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>cl_int<sp/>finish(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="6275"><highlight class="normal"><sp/><sp/>cl_int<sp/>error;</highlight></codeline>
<codeline lineno="6276"><highlight class="normal"><sp/><sp/>CommandQueue<sp/>queue<sp/>=<sp/>CommandQueue::getDefault(&amp;error);</highlight></codeline>
<codeline lineno="6277"><highlight class="normal"></highlight></codeline>
<codeline lineno="6278"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(error<sp/>!=<sp/>CL_SUCCESS)<sp/>{</highlight></codeline>
<codeline lineno="6279"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>error;</highlight></codeline>
<codeline lineno="6280"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6281"><highlight class="normal"></highlight></codeline>
<codeline lineno="6282"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>queue.finish();</highlight></codeline>
<codeline lineno="6283"><highlight class="normal">}</highlight></codeline>
<codeline lineno="6284"><highlight class="normal"></highlight></codeline>
<codeline lineno="6285"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Kernel<sp/>Functor<sp/>support</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6286"><highlight class="normal"></highlight><highlight class="comment">//<sp/>New<sp/>interface<sp/>as<sp/>of<sp/>September<sp/>2011</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6287"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Requires<sp/>the<sp/>C++11<sp/>std::tr1::function<sp/>(note<sp/>do<sp/>not<sp/>support<sp/>TR1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6288"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Visual<sp/>Studio<sp/>2010<sp/>and<sp/>GCC<sp/>4.2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6289"><highlight class="normal"></highlight></codeline>
<codeline lineno="6290" refid="structcl_1_1_enqueue_args" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>{</highlight></codeline>
<codeline lineno="6291"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>queue_;</highlight></codeline>
<codeline lineno="6292"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>offset_;</highlight></codeline>
<codeline lineno="6293"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global_;</highlight></codeline>
<codeline lineno="6294"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>local_;</highlight></codeline>
<codeline lineno="6295"><highlight class="normal"><sp/><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>events_;</highlight></codeline>
<codeline lineno="6296"><highlight class="normal"></highlight></codeline>
<codeline lineno="6297"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(<ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global)</highlight></codeline>
<codeline lineno="6298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(CommandQueue::getDefault()),<sp/>offset_(NullRange),<sp/>global_(global),</highlight></codeline>
<codeline lineno="6299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_(NullRange)<sp/>{}</highlight></codeline>
<codeline lineno="6300"><highlight class="normal"></highlight></codeline>
<codeline lineno="6301"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(<ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>local)</highlight></codeline>
<codeline lineno="6302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(CommandQueue::getDefault()),<sp/>offset_(NullRange),<sp/>global_(global),</highlight></codeline>
<codeline lineno="6303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_(local)<sp/>{}</highlight></codeline>
<codeline lineno="6304"><highlight class="normal"></highlight></codeline>
<codeline lineno="6305"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(<ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>offset,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>local)</highlight></codeline>
<codeline lineno="6306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(CommandQueue::getDefault()),<sp/>offset_(offset),<sp/>global_(global),</highlight></codeline>
<codeline lineno="6307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_(local)<sp/>{}</highlight></codeline>
<codeline lineno="6308"><highlight class="normal"></highlight></codeline>
<codeline lineno="6309"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(<ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>e,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global)</highlight></codeline>
<codeline lineno="6310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(CommandQueue::getDefault()),<sp/>offset_(NullRange),<sp/>global_(global),</highlight></codeline>
<codeline lineno="6311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_(NullRange)<sp/>{</highlight></codeline>
<codeline lineno="6312"><highlight class="normal"><sp/><sp/><sp/><sp/>events_.push_back(e);</highlight></codeline>
<codeline lineno="6313"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6314"><highlight class="normal"></highlight></codeline>
<codeline lineno="6315"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(<ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>e,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>local)</highlight></codeline>
<codeline lineno="6316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(CommandQueue::getDefault()),<sp/>offset_(NullRange),<sp/>global_(global),</highlight></codeline>
<codeline lineno="6317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_(local)<sp/>{</highlight></codeline>
<codeline lineno="6318"><highlight class="normal"><sp/><sp/><sp/><sp/>events_.push_back(e);</highlight></codeline>
<codeline lineno="6319"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6320"><highlight class="normal"></highlight></codeline>
<codeline lineno="6321"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(<ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>e,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>offset,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>local)</highlight></codeline>
<codeline lineno="6322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(CommandQueue::getDefault()),<sp/>offset_(offset),<sp/>global_(global),</highlight></codeline>
<codeline lineno="6323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_(local)<sp/>{</highlight></codeline>
<codeline lineno="6324"><highlight class="normal"><sp/><sp/><sp/><sp/>events_.push_back(e);</highlight></codeline>
<codeline lineno="6325"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6326"><highlight class="normal"></highlight></codeline>
<codeline lineno="6327"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>&amp;events,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global)</highlight></codeline>
<codeline lineno="6328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(CommandQueue::getDefault()),<sp/>offset_(NullRange),<sp/>global_(global),</highlight></codeline>
<codeline lineno="6329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_(NullRange),<sp/>events_(events)<sp/>{}</highlight></codeline>
<codeline lineno="6330"><highlight class="normal"></highlight></codeline>
<codeline lineno="6331"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>&amp;events,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>local)</highlight></codeline>
<codeline lineno="6332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(CommandQueue::getDefault()),<sp/>offset_(NullRange),<sp/>global_(global),</highlight></codeline>
<codeline lineno="6333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_(local),<sp/>events_(events)<sp/>{}</highlight></codeline>
<codeline lineno="6334"><highlight class="normal"></highlight></codeline>
<codeline lineno="6335"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>&amp;events,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>offset,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global,</highlight></codeline>
<codeline lineno="6336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>local)</highlight></codeline>
<codeline lineno="6337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(CommandQueue::getDefault()),<sp/>offset_(offset),<sp/>global_(global),</highlight></codeline>
<codeline lineno="6338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local_(local),<sp/>events_(events)<sp/>{}</highlight></codeline>
<codeline lineno="6339"><highlight class="normal"></highlight></codeline>
<codeline lineno="6340"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(<ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>&amp;queue,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global)</highlight></codeline>
<codeline lineno="6341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(queue),<sp/>offset_(NullRange),<sp/>global_(global),<sp/>local_(NullRange)<sp/>{}</highlight></codeline>
<codeline lineno="6342"><highlight class="normal"></highlight></codeline>
<codeline lineno="6343"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(<ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>&amp;queue,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>local)</highlight></codeline>
<codeline lineno="6344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(queue),<sp/>offset_(NullRange),<sp/>global_(global),<sp/>local_(local)<sp/>{}</highlight></codeline>
<codeline lineno="6345"><highlight class="normal"></highlight></codeline>
<codeline lineno="6346"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(<ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>&amp;queue,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>offset,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global,</highlight></codeline>
<codeline lineno="6347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>local)</highlight></codeline>
<codeline lineno="6348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(queue),<sp/>offset_(offset),<sp/>global_(global),<sp/>local_(local)<sp/>{}</highlight></codeline>
<codeline lineno="6349"><highlight class="normal"></highlight></codeline>
<codeline lineno="6350"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(<ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>&amp;queue,<sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>e,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global)</highlight></codeline>
<codeline lineno="6351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(queue),<sp/>offset_(NullRange),<sp/>global_(global),<sp/>local_(NullRange)<sp/>{</highlight></codeline>
<codeline lineno="6352"><highlight class="normal"><sp/><sp/><sp/><sp/>events_.push_back(e);</highlight></codeline>
<codeline lineno="6353"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6354"><highlight class="normal"></highlight></codeline>
<codeline lineno="6355"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(<ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>&amp;queue,<sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>e,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>local)</highlight></codeline>
<codeline lineno="6356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(queue),<sp/>offset_(NullRange),<sp/>global_(global),<sp/>local_(local)<sp/>{</highlight></codeline>
<codeline lineno="6357"><highlight class="normal"><sp/><sp/><sp/><sp/>events_.push_back(e);</highlight></codeline>
<codeline lineno="6358"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6359"><highlight class="normal"></highlight></codeline>
<codeline lineno="6360"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(<ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>&amp;queue,<sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>e,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>offset,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global,</highlight></codeline>
<codeline lineno="6361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>local)</highlight></codeline>
<codeline lineno="6362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(queue),<sp/>offset_(offset),<sp/>global_(global),<sp/>local_(local)<sp/>{</highlight></codeline>
<codeline lineno="6363"><highlight class="normal"><sp/><sp/><sp/><sp/>events_.push_back(e);</highlight></codeline>
<codeline lineno="6364"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6365"><highlight class="normal"></highlight></codeline>
<codeline lineno="6366"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(<ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>&amp;queue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>&amp;events,</highlight></codeline>
<codeline lineno="6367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global)</highlight></codeline>
<codeline lineno="6368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(queue),<sp/>offset_(NullRange),<sp/>global_(global),<sp/>local_(NullRange),</highlight></codeline>
<codeline lineno="6369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events_(events)<sp/>{}</highlight></codeline>
<codeline lineno="6370"><highlight class="normal"></highlight></codeline>
<codeline lineno="6371"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(<ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>&amp;queue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>&amp;events,</highlight></codeline>
<codeline lineno="6372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>local)</highlight></codeline>
<codeline lineno="6373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(queue),<sp/>offset_(NullRange),<sp/>global_(global),<sp/>local_(local),</highlight></codeline>
<codeline lineno="6374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events_(events)<sp/>{}</highlight></codeline>
<codeline lineno="6375"><highlight class="normal"></highlight></codeline>
<codeline lineno="6376"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref>(<ref refid="classcl_1_1_command_queue" kindref="compound">CommandQueue</ref><sp/>&amp;queue,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>VECTOR_CLASS&lt;Event&gt;<sp/>&amp;events,</highlight></codeline>
<codeline lineno="6377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>offset,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>global,<sp/><ref refid="classcl_1_1_n_d_range" kindref="compound">NDRange</ref><sp/>local)</highlight></codeline>
<codeline lineno="6378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>queue_(queue),<sp/>offset_(offset),<sp/>global_(global),<sp/>local_(local),</highlight></codeline>
<codeline lineno="6379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>events_(events)<sp/>{}</highlight></codeline>
<codeline lineno="6380"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6381"><highlight class="normal"></highlight></codeline>
<codeline lineno="6382"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">detail<sp/>{</highlight></codeline>
<codeline lineno="6383"><highlight class="normal"></highlight></codeline>
<codeline lineno="6384" refid="classcl_1_1detail_1_1_null_type" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref><sp/>{};</highlight></codeline>
<codeline lineno="6385"><highlight class="normal"></highlight></codeline>
<codeline lineno="6386" refid="structcl_1_1detail_1_1_set_arg" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg</ref><sp/>{</highlight></codeline>
<codeline lineno="6387"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set(<ref refid="classcl_1_1_kernel" kindref="compound">Kernel</ref><sp/>kernel,<sp/>T0<sp/>arg)<sp/>{<sp/>kernel.setArg(index,<sp/>arg);<sp/>}</highlight></codeline>
<codeline lineno="6388"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6389"><highlight class="normal"></highlight></codeline>
<codeline lineno="6390" refid="structcl_1_1detail_1_1_set_arg_3_01index_00_01_null_type_01_4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>index&gt;<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg</ref>&lt;index,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="6391"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>set(<ref refid="classcl_1_1_kernel" kindref="compound">Kernel</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>)<sp/>{}</highlight></codeline>
<codeline lineno="6392"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6393"><highlight class="normal"></highlight></codeline>
<codeline lineno="6394"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="6395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="6396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="6397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T17,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T18,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T19,</highlight></codeline>
<codeline lineno="6398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T20,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T21,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T22,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T23,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T24,</highlight></codeline>
<codeline lineno="6399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T25,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T26,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T27,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T28,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T29,</highlight></codeline>
<codeline lineno="6400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T30,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T31&gt;</highlight></codeline>
<codeline lineno="6401" refid="classcl_1_1detail_1_1_kernel_functor_global" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">KernelFunctorGlobal</ref><sp/>{</highlight></codeline>
<codeline lineno="6402"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6403"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_kernel" kindref="compound">Kernel</ref><sp/>kernel_;</highlight></codeline>
<codeline lineno="6404"><highlight class="normal"></highlight></codeline>
<codeline lineno="6405"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="6406"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">KernelFunctorGlobal</ref>(<ref refid="classcl_1_1_kernel" kindref="compound">Kernel</ref><sp/>kernel)<sp/>:<sp/>kernel_(kernel)<sp/>{}</highlight></codeline>
<codeline lineno="6407"><highlight class="normal"></highlight></codeline>
<codeline lineno="6408"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">KernelFunctorGlobal</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_program" kindref="compound">Program</ref><sp/>&amp;program,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecl_1ad3ff55c5fe80ec84842876af323559c7" kindref="member">STRING_CLASS</ref><sp/>name,</highlight></codeline>
<codeline lineno="6409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight></codeline>
<codeline lineno="6410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>kernel_(program,<sp/>name.c_str(),<sp/>err)<sp/>{}</highlight></codeline>
<codeline lineno="6411"><highlight class="normal"></highlight></codeline>
<codeline lineno="6412"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref></highlight></codeline>
<codeline lineno="6413"><highlight class="normal"><sp/><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;args,<sp/>T0<sp/>t0,<sp/>T1<sp/>t1<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),</highlight></codeline>
<codeline lineno="6414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T2<sp/>t2<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T3<sp/>t3<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T4<sp/>t4<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),</highlight></codeline>
<codeline lineno="6415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T5<sp/>t5<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T6<sp/>t6<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T7<sp/>t7<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),</highlight></codeline>
<codeline lineno="6416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T8<sp/>t8<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T9<sp/>t9<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T10<sp/>t10<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),</highlight></codeline>
<codeline lineno="6417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T11<sp/>t11<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T12<sp/>t12<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T13<sp/>t13<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),</highlight></codeline>
<codeline lineno="6418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>t14<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T15<sp/>t15<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T16<sp/>t16<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),</highlight></codeline>
<codeline lineno="6419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T17<sp/>t17<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T18<sp/>t18<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T19<sp/>t19<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),</highlight></codeline>
<codeline lineno="6420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T20<sp/>t20<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T21<sp/>t21<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T22<sp/>t22<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),</highlight></codeline>
<codeline lineno="6421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T23<sp/>t23<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T24<sp/>t24<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T25<sp/>t25<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),</highlight></codeline>
<codeline lineno="6422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T26<sp/>t26<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T27<sp/>t27<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T28<sp/>t28<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),</highlight></codeline>
<codeline lineno="6423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T29<sp/>t29<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T30<sp/>t30<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>(),<sp/>T31<sp/>t31<sp/>=<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>())<sp/>{</highlight></codeline>
<codeline lineno="6424"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>event;</highlight></codeline>
<codeline lineno="6425"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;0, T0&gt;::set</ref>(kernel_,<sp/>t0);</highlight></codeline>
<codeline lineno="6426"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;1, T1&gt;::set</ref>(kernel_,<sp/>t1);</highlight></codeline>
<codeline lineno="6427"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;2, T2&gt;::set</ref>(kernel_,<sp/>t2);</highlight></codeline>
<codeline lineno="6428"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;3, T3&gt;::set</ref>(kernel_,<sp/>t3);</highlight></codeline>
<codeline lineno="6429"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;4, T4&gt;::set</ref>(kernel_,<sp/>t4);</highlight></codeline>
<codeline lineno="6430"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;5, T5&gt;::set</ref>(kernel_,<sp/>t5);</highlight></codeline>
<codeline lineno="6431"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;6, T6&gt;::set</ref>(kernel_,<sp/>t6);</highlight></codeline>
<codeline lineno="6432"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;7, T7&gt;::set</ref>(kernel_,<sp/>t7);</highlight></codeline>
<codeline lineno="6433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;8, T8&gt;::set</ref>(kernel_,<sp/>t8);</highlight></codeline>
<codeline lineno="6434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;9, T9&gt;::set</ref>(kernel_,<sp/>t9);</highlight></codeline>
<codeline lineno="6435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;10, T10&gt;::set</ref>(kernel_,<sp/>t10);</highlight></codeline>
<codeline lineno="6436"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;11, T11&gt;::set</ref>(kernel_,<sp/>t11);</highlight></codeline>
<codeline lineno="6437"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;12, T12&gt;::set</ref>(kernel_,<sp/>t12);</highlight></codeline>
<codeline lineno="6438"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;13, T13&gt;::set</ref>(kernel_,<sp/>t13);</highlight></codeline>
<codeline lineno="6439"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;14, T14&gt;::set</ref>(kernel_,<sp/>t14);</highlight></codeline>
<codeline lineno="6440"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;15, T15&gt;::set</ref>(kernel_,<sp/>t15);</highlight></codeline>
<codeline lineno="6441"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;16, T16&gt;::set</ref>(kernel_,<sp/>t16);</highlight></codeline>
<codeline lineno="6442"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;17, T17&gt;::set</ref>(kernel_,<sp/>t17);</highlight></codeline>
<codeline lineno="6443"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;18, T18&gt;::set</ref>(kernel_,<sp/>t18);</highlight></codeline>
<codeline lineno="6444"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;19, T19&gt;::set</ref>(kernel_,<sp/>t19);</highlight></codeline>
<codeline lineno="6445"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;20, T20&gt;::set</ref>(kernel_,<sp/>t20);</highlight></codeline>
<codeline lineno="6446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;21, T21&gt;::set</ref>(kernel_,<sp/>t21);</highlight></codeline>
<codeline lineno="6447"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;22, T22&gt;::set</ref>(kernel_,<sp/>t22);</highlight></codeline>
<codeline lineno="6448"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;23, T23&gt;::set</ref>(kernel_,<sp/>t23);</highlight></codeline>
<codeline lineno="6449"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;24, T24&gt;::set</ref>(kernel_,<sp/>t24);</highlight></codeline>
<codeline lineno="6450"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;25, T25&gt;::set</ref>(kernel_,<sp/>t25);</highlight></codeline>
<codeline lineno="6451"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;26, T26&gt;::set</ref>(kernel_,<sp/>t26);</highlight></codeline>
<codeline lineno="6452"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;27, T27&gt;::set</ref>(kernel_,<sp/>t27);</highlight></codeline>
<codeline lineno="6453"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;28, T28&gt;::set</ref>(kernel_,<sp/>t28);</highlight></codeline>
<codeline lineno="6454"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;29, T29&gt;::set</ref>(kernel_,<sp/>t29);</highlight></codeline>
<codeline lineno="6455"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;30, T30&gt;::set</ref>(kernel_,<sp/>t30);</highlight></codeline>
<codeline lineno="6456"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="structcl_1_1detail_1_1_set_arg" kindref="compound">SetArg&lt;31, T31&gt;::set</ref>(kernel_,<sp/>t31);</highlight></codeline>
<codeline lineno="6457"><highlight class="normal"></highlight></codeline>
<codeline lineno="6458"><highlight class="normal"><sp/><sp/><sp/><sp/>args.queue_.enqueueNDRangeKernel(kernel_,<sp/>args.offset_,<sp/>args.global_,</highlight></codeline>
<codeline lineno="6459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>args.local_,<sp/>&amp;args.events_,<sp/>&amp;event);</highlight></codeline>
<codeline lineno="6460"><highlight class="normal"></highlight></codeline>
<codeline lineno="6461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>event;</highlight></codeline>
<codeline lineno="6462"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6463"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6464"><highlight class="normal"></highlight></codeline>
<codeline lineno="6465"><highlight class="normal"></highlight><highlight class="comment">//------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6466"><highlight class="normal"></highlight></codeline>
<codeline lineno="6467"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="6468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="6469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="6470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T17,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T18,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T19,</highlight></codeline>
<codeline lineno="6471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T20,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T21,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T22,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T23,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T24,</highlight></codeline>
<codeline lineno="6472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T25,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T26,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T27,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T28,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T29,</highlight></codeline>
<codeline lineno="6473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T30,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T31&gt;</highlight></codeline>
<codeline lineno="6474" refid="structcl_1_1detail_1_1function_implementation__" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref><sp/>{</highlight></codeline>
<codeline lineno="6475"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="6476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="6477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/>T26,<sp/>T27,<sp/>T28,<sp/>T29,<sp/>T30,<sp/>T31&gt;</highlight></codeline>
<codeline lineno="6478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="6479"><highlight class="normal"></highlight></codeline>
<codeline lineno="6480"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="6481"><highlight class="normal"></highlight></codeline>
<codeline lineno="6482"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="6483"><highlight class="normal"></highlight></codeline>
<codeline lineno="6484"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>32))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6485"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6486"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="6487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="6488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6491"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6492"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6493"><highlight class="normal"></highlight></codeline>
<codeline lineno="6495" refid="structcl_1_1detail_1_1function_implementation___1ac89946f0f3652ede18d012cd0e36fc37" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___1ac89946f0f3652ede18d012cd0e36fc37" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="6496"><highlight class="normal"></highlight></codeline>
<codeline lineno="6498" refid="structcl_1_1detail_1_1function_implementation___1a13620f87c30d333a5ffbea23e818c809" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___1a13620f87c30d333a5ffbea23e818c809" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="6499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,</highlight></codeline>
<codeline lineno="6500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/>T26,<sp/>T27,<sp/>T28,<sp/>T29,<sp/>T30,<sp/>T31);</highlight></codeline>
<codeline lineno="6501"><highlight class="normal"></highlight></codeline>
<codeline lineno="6502"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="6503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="6504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="6505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14,<sp/>T15<sp/>arg15,<sp/>T16<sp/>arg16,<sp/>T17<sp/>arg17,<sp/>T18<sp/>arg18,</highlight></codeline>
<codeline lineno="6506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T19<sp/>arg19,<sp/>T20<sp/>arg20,<sp/>T21<sp/>arg21,<sp/>T22<sp/>arg22,<sp/>T23<sp/>arg23,</highlight></codeline>
<codeline lineno="6507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T24<sp/>arg24,<sp/>T25<sp/>arg25,<sp/>T26<sp/>arg26,<sp/>T27<sp/>arg27,<sp/>T28<sp/>arg28,</highlight></codeline>
<codeline lineno="6508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T29<sp/>arg29,<sp/>T30<sp/>arg30,<sp/>T31<sp/>arg31)<sp/>{</highlight></codeline>
<codeline lineno="6509"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="6510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14,<sp/>arg15,<sp/>arg16,</highlight></codeline>
<codeline lineno="6511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg17,<sp/>arg18,<sp/>arg19,<sp/>arg20,<sp/>arg21,<sp/>arg22,<sp/>arg23,<sp/>arg24,</highlight></codeline>
<codeline lineno="6512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg25,<sp/>arg26,<sp/>arg27,<sp/>arg28,<sp/>arg29,<sp/>arg30,<sp/>arg31);</highlight></codeline>
<codeline lineno="6513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6514"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6515"><highlight class="normal"></highlight></codeline>
<codeline lineno="6516"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="6517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="6518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="6519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T17,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T18,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T19,</highlight></codeline>
<codeline lineno="6520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T20,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T21,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T22,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T23,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T24,</highlight></codeline>
<codeline lineno="6521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T25,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T26,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T27,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T28,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T29,</highlight></codeline>
<codeline lineno="6522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T30&gt;</highlight></codeline>
<codeline lineno="6523" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c65074b0edbb49358e494dfca85f0c4d" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,</highlight></codeline>
<codeline lineno="6524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,</highlight></codeline>
<codeline lineno="6525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/>T26,<sp/>T27,<sp/>T28,<sp/>T29,<sp/>T30,</highlight></codeline>
<codeline lineno="6526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="6527"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,</highlight></codeline>
<codeline lineno="6528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,</highlight></codeline>
<codeline lineno="6529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,</highlight></codeline>
<codeline lineno="6530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T26,<sp/>T27,<sp/>T28,<sp/>T29,<sp/>T30,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="6531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="6532"><highlight class="normal"></highlight></codeline>
<codeline lineno="6533"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="6534"><highlight class="normal"></highlight></codeline>
<codeline lineno="6535"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="6536"><highlight class="normal"></highlight></codeline>
<codeline lineno="6537"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>31))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6539"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="6540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="6541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6544"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6545"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6546"><highlight class="normal"></highlight></codeline>
<codeline lineno="6548" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c65074b0edbb49358e494dfca85f0c4d_1aa3e1f71918c3a4628c8f900cb7727b1f" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c65074b0edbb49358e494dfca85f0c4d_1aa3e1f71918c3a4628c8f900cb7727b1f" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="6549"><highlight class="normal"></highlight></codeline>
<codeline lineno="6551" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c65074b0edbb49358e494dfca85f0c4d_1a2a4368316f5079d5f6d82b41dcfb2ac0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c65074b0edbb49358e494dfca85f0c4d_1a2a4368316f5079d5f6d82b41dcfb2ac0" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="6552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,</highlight></codeline>
<codeline lineno="6553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/>T26,<sp/>T27,<sp/>T28,<sp/>T29,<sp/>T30);</highlight></codeline>
<codeline lineno="6554"><highlight class="normal"></highlight></codeline>
<codeline lineno="6555"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="6556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="6557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="6558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14,<sp/>T15<sp/>arg15,<sp/>T16<sp/>arg16,<sp/>T17<sp/>arg17,<sp/>T18<sp/>arg18,</highlight></codeline>
<codeline lineno="6559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T19<sp/>arg19,<sp/>T20<sp/>arg20,<sp/>T21<sp/>arg21,<sp/>T22<sp/>arg22,<sp/>T23<sp/>arg23,</highlight></codeline>
<codeline lineno="6560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T24<sp/>arg24,<sp/>T25<sp/>arg25,<sp/>T26<sp/>arg26,<sp/>T27<sp/>arg27,<sp/>T28<sp/>arg28,</highlight></codeline>
<codeline lineno="6561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T29<sp/>arg29,<sp/>T30<sp/>arg30)<sp/>{</highlight></codeline>
<codeline lineno="6562"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="6563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14,<sp/>arg15,<sp/>arg16,</highlight></codeline>
<codeline lineno="6564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg17,<sp/>arg18,<sp/>arg19,<sp/>arg20,<sp/>arg21,<sp/>arg22,<sp/>arg23,<sp/>arg24,</highlight></codeline>
<codeline lineno="6565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg25,<sp/>arg26,<sp/>arg27,<sp/>arg28,<sp/>arg29,<sp/>arg30);</highlight></codeline>
<codeline lineno="6566"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6567"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6568"><highlight class="normal"></highlight></codeline>
<codeline lineno="6569"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="6570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="6571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="6572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T17,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T18,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T19,</highlight></codeline>
<codeline lineno="6573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T20,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T21,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T22,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T23,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T24,</highlight></codeline>
<codeline lineno="6574"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T25,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T26,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T27,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T28,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T29&gt;</highlight></codeline>
<codeline lineno="6575" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_016dc3ed96ba5604ff44fcbf4b70904a7" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,</highlight></codeline>
<codeline lineno="6576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,</highlight></codeline>
<codeline lineno="6577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/>T26,<sp/>T27,<sp/>T28,<sp/>T29,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="6578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="6579"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,</highlight></codeline>
<codeline lineno="6580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,</highlight></codeline>
<codeline lineno="6581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,</highlight></codeline>
<codeline lineno="6582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T26,<sp/>T27,<sp/>T28,<sp/>T29,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="6583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="6584"><highlight class="normal"></highlight></codeline>
<codeline lineno="6585"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="6586"><highlight class="normal"></highlight></codeline>
<codeline lineno="6587"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="6588"><highlight class="normal"></highlight></codeline>
<codeline lineno="6589"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>30))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="6592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="6593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6596"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6597"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6598"><highlight class="normal"></highlight></codeline>
<codeline lineno="6600" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_016dc3ed96ba5604ff44fcbf4b70904a7_1a87a697bbe0bd976819d84209086b38fa" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_016dc3ed96ba5604ff44fcbf4b70904a7_1a87a697bbe0bd976819d84209086b38fa" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="6601"><highlight class="normal"></highlight></codeline>
<codeline lineno="6603" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_016dc3ed96ba5604ff44fcbf4b70904a7_1a9811f023544ab405f2678a84d5b9338c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_016dc3ed96ba5604ff44fcbf4b70904a7_1a9811f023544ab405f2678a84d5b9338c" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="6604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,</highlight></codeline>
<codeline lineno="6605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/>T26,<sp/>T27,<sp/>T28,<sp/>T29);</highlight></codeline>
<codeline lineno="6606"><highlight class="normal"></highlight></codeline>
<codeline lineno="6607"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="6608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="6609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="6610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14,<sp/>T15<sp/>arg15,<sp/>T16<sp/>arg16,<sp/>T17<sp/>arg17,<sp/>T18<sp/>arg18,</highlight></codeline>
<codeline lineno="6611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T19<sp/>arg19,<sp/>T20<sp/>arg20,<sp/>T21<sp/>arg21,<sp/>T22<sp/>arg22,<sp/>T23<sp/>arg23,</highlight></codeline>
<codeline lineno="6612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T24<sp/>arg24,<sp/>T25<sp/>arg25,<sp/>T26<sp/>arg26,<sp/>T27<sp/>arg27,<sp/>T28<sp/>arg28,</highlight></codeline>
<codeline lineno="6613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T29<sp/>arg29)<sp/>{</highlight></codeline>
<codeline lineno="6614"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="6615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14,<sp/>arg15,<sp/>arg16,</highlight></codeline>
<codeline lineno="6616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg17,<sp/>arg18,<sp/>arg19,<sp/>arg20,<sp/>arg21,<sp/>arg22,<sp/>arg23,<sp/>arg24,</highlight></codeline>
<codeline lineno="6617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg25,<sp/>arg26,<sp/>arg27,<sp/>arg28,<sp/>arg29);</highlight></codeline>
<codeline lineno="6618"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6619"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6620"><highlight class="normal"></highlight></codeline>
<codeline lineno="6621"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="6622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="6623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="6624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T17,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T18,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T19,</highlight></codeline>
<codeline lineno="6625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T20,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T21,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T22,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T23,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T24,</highlight></codeline>
<codeline lineno="6626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T25,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T26,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T27,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T28&gt;</highlight></codeline>
<codeline lineno="6627" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_09ad22bbf5ec3ff70ca85c82a81e894f3" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,</highlight></codeline>
<codeline lineno="6628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,</highlight></codeline>
<codeline lineno="6629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/>T26,<sp/>T27,<sp/>T28,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="6630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="6631"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="6632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="6633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/>T26,<sp/>T27,<sp/>T28,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="6634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="6635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="6636"><highlight class="normal"></highlight></codeline>
<codeline lineno="6637"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="6638"><highlight class="normal"></highlight></codeline>
<codeline lineno="6639"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="6640"><highlight class="normal"></highlight></codeline>
<codeline lineno="6641"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>29))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6643"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="6644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="6645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6648"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6649"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6650"><highlight class="normal"></highlight></codeline>
<codeline lineno="6652" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_09ad22bbf5ec3ff70ca85c82a81e894f3_1ad8033e1df34f0abbf82c4e4fda0c97c0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_09ad22bbf5ec3ff70ca85c82a81e894f3_1ad8033e1df34f0abbf82c4e4fda0c97c0" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="6653"><highlight class="normal"></highlight></codeline>
<codeline lineno="6655" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_09ad22bbf5ec3ff70ca85c82a81e894f3_1a70f74a1fca6b5e861aaba6104f2740f7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_09ad22bbf5ec3ff70ca85c82a81e894f3_1a70f74a1fca6b5e861aaba6104f2740f7" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="6656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,</highlight></codeline>
<codeline lineno="6657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/>T26,<sp/>T27,<sp/>T28);</highlight></codeline>
<codeline lineno="6658"><highlight class="normal"></highlight></codeline>
<codeline lineno="6659"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="6660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="6661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="6662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14,<sp/>T15<sp/>arg15,<sp/>T16<sp/>arg16,<sp/>T17<sp/>arg17,<sp/>T18<sp/>arg18,</highlight></codeline>
<codeline lineno="6663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T19<sp/>arg19,<sp/>T20<sp/>arg20,<sp/>T21<sp/>arg21,<sp/>T22<sp/>arg22,<sp/>T23<sp/>arg23,</highlight></codeline>
<codeline lineno="6664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T24<sp/>arg24,<sp/>T25<sp/>arg25,<sp/>T26<sp/>arg26,<sp/>T27<sp/>arg27,<sp/>T28<sp/>arg28)<sp/>{</highlight></codeline>
<codeline lineno="6665"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="6666"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14,<sp/>arg15,<sp/>arg16,</highlight></codeline>
<codeline lineno="6667"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg17,<sp/>arg18,<sp/>arg19,<sp/>arg20,<sp/>arg21,<sp/>arg22,<sp/>arg23,<sp/>arg24,</highlight></codeline>
<codeline lineno="6668"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg25,<sp/>arg26,<sp/>arg27,<sp/>arg28);</highlight></codeline>
<codeline lineno="6669"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6670"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6671"><highlight class="normal"></highlight></codeline>
<codeline lineno="6672"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="6673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="6674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="6675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T17,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T18,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T19,</highlight></codeline>
<codeline lineno="6676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T20,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T21,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T22,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T23,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T24,</highlight></codeline>
<codeline lineno="6677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T25,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T26,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T27&gt;</highlight></codeline>
<codeline lineno="6678" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0e1f9ed5f4bce0fed2eecd96819eff69e" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,</highlight></codeline>
<codeline lineno="6679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,</highlight></codeline>
<codeline lineno="6680"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/>T26,<sp/>T27,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="6681"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="6682"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="6683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="6684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/>T26,<sp/>T27,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="6685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="6686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="6687"><highlight class="normal"></highlight></codeline>
<codeline lineno="6688"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="6689"><highlight class="normal"></highlight></codeline>
<codeline lineno="6690"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="6691"><highlight class="normal"></highlight></codeline>
<codeline lineno="6692"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>28))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6693"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6694"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="6695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="6696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6699"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6700"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6701"><highlight class="normal"></highlight></codeline>
<codeline lineno="6703" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0e1f9ed5f4bce0fed2eecd96819eff69e_1a5f8e17578adbf7798fe8c5a84c36c13d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0e1f9ed5f4bce0fed2eecd96819eff69e_1a5f8e17578adbf7798fe8c5a84c36c13d" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="6704"><highlight class="normal"></highlight></codeline>
<codeline lineno="6706" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0e1f9ed5f4bce0fed2eecd96819eff69e_1ab5c570f44643e9cc7f8a62c752acf5fc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0e1f9ed5f4bce0fed2eecd96819eff69e_1ab5c570f44643e9cc7f8a62c752acf5fc" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="6707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,</highlight></codeline>
<codeline lineno="6708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/>T26,<sp/>T27);</highlight></codeline>
<codeline lineno="6709"><highlight class="normal"></highlight></codeline>
<codeline lineno="6710"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="6711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="6712"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="6713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14,<sp/>T15<sp/>arg15,<sp/>T16<sp/>arg16,<sp/>T17<sp/>arg17,<sp/>T18<sp/>arg18,</highlight></codeline>
<codeline lineno="6714"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T19<sp/>arg19,<sp/>T20<sp/>arg20,<sp/>T21<sp/>arg21,<sp/>T22<sp/>arg22,<sp/>T23<sp/>arg23,</highlight></codeline>
<codeline lineno="6715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T24<sp/>arg24,<sp/>T25<sp/>arg25,<sp/>T26<sp/>arg26,<sp/>T27<sp/>arg27)<sp/>{</highlight></codeline>
<codeline lineno="6716"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="6717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14,<sp/>arg15,<sp/>arg16,</highlight></codeline>
<codeline lineno="6718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg17,<sp/>arg18,<sp/>arg19,<sp/>arg20,<sp/>arg21,<sp/>arg22,<sp/>arg23,<sp/>arg24,</highlight></codeline>
<codeline lineno="6719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg25,<sp/>arg26,<sp/>arg27);</highlight></codeline>
<codeline lineno="6720"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6721"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6722"><highlight class="normal"></highlight></codeline>
<codeline lineno="6723"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="6724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="6725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="6726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T17,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T18,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T19,</highlight></codeline>
<codeline lineno="6727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T20,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T21,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T22,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T23,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T24,</highlight></codeline>
<codeline lineno="6728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T25,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T26&gt;</highlight></codeline>
<codeline lineno="6729" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c47d12039c820db328a1eb63adda7dc4" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,</highlight></codeline>
<codeline lineno="6730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,</highlight></codeline>
<codeline lineno="6731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/>T26,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="6732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="6733"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="6734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="6735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/>T26,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="6736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="6737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="6738"><highlight class="normal"></highlight></codeline>
<codeline lineno="6739"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="6740"><highlight class="normal"></highlight></codeline>
<codeline lineno="6741"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="6742"><highlight class="normal"></highlight></codeline>
<codeline lineno="6743"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>27))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6744"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="6746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="6747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6750"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6751"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6752"><highlight class="normal"></highlight></codeline>
<codeline lineno="6754" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c47d12039c820db328a1eb63adda7dc4_1a3499263dac340b1920710f76f0c8cf49" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c47d12039c820db328a1eb63adda7dc4_1a3499263dac340b1920710f76f0c8cf49" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="6755"><highlight class="normal"></highlight></codeline>
<codeline lineno="6757" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c47d12039c820db328a1eb63adda7dc4_1a8e7b9f2d994377569f30bb71e26efdcf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c47d12039c820db328a1eb63adda7dc4_1a8e7b9f2d994377569f30bb71e26efdcf" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="6758"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,</highlight></codeline>
<codeline lineno="6759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/>T26);</highlight></codeline>
<codeline lineno="6760"><highlight class="normal"></highlight></codeline>
<codeline lineno="6761"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="6762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="6763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="6764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14,<sp/>T15<sp/>arg15,<sp/>T16<sp/>arg16,<sp/>T17<sp/>arg17,<sp/>T18<sp/>arg18,</highlight></codeline>
<codeline lineno="6765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T19<sp/>arg19,<sp/>T20<sp/>arg20,<sp/>T21<sp/>arg21,<sp/>T22<sp/>arg22,<sp/>T23<sp/>arg23,</highlight></codeline>
<codeline lineno="6766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T24<sp/>arg24,<sp/>T25<sp/>arg25,<sp/>T26<sp/>arg26)<sp/>{</highlight></codeline>
<codeline lineno="6767"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="6768"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14,<sp/>arg15,<sp/>arg16,</highlight></codeline>
<codeline lineno="6769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg17,<sp/>arg18,<sp/>arg19,<sp/>arg20,<sp/>arg21,<sp/>arg22,<sp/>arg23,<sp/>arg24,</highlight></codeline>
<codeline lineno="6770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg25,<sp/>arg26);</highlight></codeline>
<codeline lineno="6771"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6772"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6773"><highlight class="normal"></highlight></codeline>
<codeline lineno="6774"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="6775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="6776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="6777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T17,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T18,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T19,</highlight></codeline>
<codeline lineno="6778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T20,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T21,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T22,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T23,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T24,</highlight></codeline>
<codeline lineno="6779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T25&gt;</highlight></codeline>
<codeline lineno="6780" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0e699f6bc32f983b3dbb8601694ad8716" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,</highlight></codeline>
<codeline lineno="6781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,</highlight></codeline>
<codeline lineno="6782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="6783"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="6784"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="6785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="6786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="6787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="6788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="6789"><highlight class="normal"></highlight></codeline>
<codeline lineno="6790"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="6791"><highlight class="normal"></highlight></codeline>
<codeline lineno="6792"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="6793"><highlight class="normal"></highlight></codeline>
<codeline lineno="6794"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>26))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="6797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="6798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6801"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6802"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6803"><highlight class="normal"></highlight></codeline>
<codeline lineno="6805" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0e699f6bc32f983b3dbb8601694ad8716_1ae419e2cde8af84acad10b3c8e10355c7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0e699f6bc32f983b3dbb8601694ad8716_1ae419e2cde8af84acad10b3c8e10355c7" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="6806"><highlight class="normal"></highlight></codeline>
<codeline lineno="6808" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0e699f6bc32f983b3dbb8601694ad8716_1a75d85ac77a676d93ea6f3a8741bd2dd3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0e699f6bc32f983b3dbb8601694ad8716_1a75d85ac77a676d93ea6f3a8741bd2dd3" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="6809"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,</highlight></codeline>
<codeline lineno="6810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25);</highlight></codeline>
<codeline lineno="6811"><highlight class="normal"></highlight></codeline>
<codeline lineno="6812"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="6813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="6814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="6815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14,<sp/>T15<sp/>arg15,<sp/>T16<sp/>arg16,<sp/>T17<sp/>arg17,<sp/>T18<sp/>arg18,</highlight></codeline>
<codeline lineno="6816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T19<sp/>arg19,<sp/>T20<sp/>arg20,<sp/>T21<sp/>arg21,<sp/>T22<sp/>arg22,<sp/>T23<sp/>arg23,</highlight></codeline>
<codeline lineno="6817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T24<sp/>arg24,<sp/>T25<sp/>arg25)<sp/>{</highlight></codeline>
<codeline lineno="6818"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="6819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14,<sp/>arg15,<sp/>arg16,</highlight></codeline>
<codeline lineno="6820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg17,<sp/>arg18,<sp/>arg19,<sp/>arg20,<sp/>arg21,<sp/>arg22,<sp/>arg23,<sp/>arg24,</highlight></codeline>
<codeline lineno="6821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg25);</highlight></codeline>
<codeline lineno="6822"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6823"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6824"><highlight class="normal"></highlight></codeline>
<codeline lineno="6825"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="6826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="6827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="6828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T17,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T18,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T19,</highlight></codeline>
<codeline lineno="6829"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T20,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T21,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T22,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T23,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T24&gt;</highlight></codeline>
<codeline lineno="6830" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0668421b95c44ac124458f5794d45ce5e" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,</highlight></codeline>
<codeline lineno="6831"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,</highlight></codeline>
<codeline lineno="6832"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T22,<sp/>T23,<sp/>T24,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="6833"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="6834"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="6835"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="6836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="6837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="6838"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="6839"><highlight class="normal"></highlight></codeline>
<codeline lineno="6840"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="6841"><highlight class="normal"></highlight></codeline>
<codeline lineno="6842"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="6843"><highlight class="normal"></highlight></codeline>
<codeline lineno="6844"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>25))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6846"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="6847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="6848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6851"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6852"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6853"><highlight class="normal"></highlight></codeline>
<codeline lineno="6855" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0668421b95c44ac124458f5794d45ce5e_1a1218aa64ff7466502067b05d0c7a0e3b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0668421b95c44ac124458f5794d45ce5e_1a1218aa64ff7466502067b05d0c7a0e3b" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="6856"><highlight class="normal"></highlight></codeline>
<codeline lineno="6858" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0668421b95c44ac124458f5794d45ce5e_1ae8efa486157122079340ae2567a771c6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0668421b95c44ac124458f5794d45ce5e_1ae8efa486157122079340ae2567a771c6" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="6859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,</highlight></codeline>
<codeline lineno="6860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24);</highlight></codeline>
<codeline lineno="6861"><highlight class="normal"></highlight></codeline>
<codeline lineno="6862"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="6863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="6864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="6865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14,<sp/>T15<sp/>arg15,<sp/>T16<sp/>arg16,<sp/>T17<sp/>arg17,<sp/>T18<sp/>arg18,</highlight></codeline>
<codeline lineno="6866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T19<sp/>arg19,<sp/>T20<sp/>arg20,<sp/>T21<sp/>arg21,<sp/>T22<sp/>arg22,<sp/>T23<sp/>arg23,</highlight></codeline>
<codeline lineno="6867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T24<sp/>arg24)<sp/>{</highlight></codeline>
<codeline lineno="6868"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="6869"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14,<sp/>arg15,<sp/>arg16,</highlight></codeline>
<codeline lineno="6870"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg17,<sp/>arg18,<sp/>arg19,<sp/>arg20,<sp/>arg21,<sp/>arg22,<sp/>arg23,<sp/>arg24);</highlight></codeline>
<codeline lineno="6871"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6872"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6873"><highlight class="normal"></highlight></codeline>
<codeline lineno="6874"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="6875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="6876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="6877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T17,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T18,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T19,</highlight></codeline>
<codeline lineno="6878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T20,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T21,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T22,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T23&gt;</highlight></codeline>
<codeline lineno="6879" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c335c66f80959dbf15472be3368b9f32" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,</highlight></codeline>
<codeline lineno="6880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,</highlight></codeline>
<codeline lineno="6881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T22,<sp/>T23,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="6882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="6883"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="6884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="6885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,<sp/>T22,<sp/>T23,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="6886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="6887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="6888"><highlight class="normal"></highlight></codeline>
<codeline lineno="6889"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="6890"><highlight class="normal"></highlight></codeline>
<codeline lineno="6891"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="6892"><highlight class="normal"></highlight></codeline>
<codeline lineno="6893"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>24))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6894"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6895"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="6896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="6897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6900"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6901"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6902"><highlight class="normal"></highlight></codeline>
<codeline lineno="6904" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c335c66f80959dbf15472be3368b9f32_1aa8671fcc6524c45314d00bcb3c240fee" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c335c66f80959dbf15472be3368b9f32_1aa8671fcc6524c45314d00bcb3c240fee" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="6905"><highlight class="normal"></highlight></codeline>
<codeline lineno="6907" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c335c66f80959dbf15472be3368b9f32_1ab455907f949a180320df11d67ccef447" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c335c66f80959dbf15472be3368b9f32_1ab455907f949a180320df11d67ccef447" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="6908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,</highlight></codeline>
<codeline lineno="6909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T21,<sp/>T22,<sp/>T23);</highlight></codeline>
<codeline lineno="6910"><highlight class="normal"></highlight></codeline>
<codeline lineno="6911"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="6912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="6913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="6914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14,<sp/>T15<sp/>arg15,<sp/>T16<sp/>arg16,<sp/>T17<sp/>arg17,<sp/>T18<sp/>arg18,</highlight></codeline>
<codeline lineno="6915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T19<sp/>arg19,<sp/>T20<sp/>arg20,<sp/>T21<sp/>arg21,<sp/>T22<sp/>arg22,<sp/>T23<sp/>arg23)<sp/>{</highlight></codeline>
<codeline lineno="6916"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="6917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14,<sp/>arg15,<sp/>arg16,</highlight></codeline>
<codeline lineno="6918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg17,<sp/>arg18,<sp/>arg19,<sp/>arg20,<sp/>arg21,<sp/>arg22,<sp/>arg23);</highlight></codeline>
<codeline lineno="6919"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6920"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6921"><highlight class="normal"></highlight></codeline>
<codeline lineno="6922"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="6923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="6924"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="6925"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T17,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T18,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T19,</highlight></codeline>
<codeline lineno="6926"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T20,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T21,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T22&gt;</highlight></codeline>
<codeline lineno="6927" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_007aded1c077ceb6e7341ec85b07f2202" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="6928"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="6929"><highlight class="normal"><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,<sp/>T22,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="6930"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="6931"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="6932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="6933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,<sp/>T22,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="6934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="6935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="6936"><highlight class="normal"></highlight></codeline>
<codeline lineno="6937"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="6938"><highlight class="normal"></highlight></codeline>
<codeline lineno="6939"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="6940"><highlight class="normal"></highlight></codeline>
<codeline lineno="6941"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>23))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6942"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6943"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="6944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="6945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6948"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6949"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6950"><highlight class="normal"></highlight></codeline>
<codeline lineno="6952" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_007aded1c077ceb6e7341ec85b07f2202_1a212166ed319477f2a72996c78f166f0e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_007aded1c077ceb6e7341ec85b07f2202_1a212166ed319477f2a72996c78f166f0e" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="6953"><highlight class="normal"></highlight></codeline>
<codeline lineno="6955" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_007aded1c077ceb6e7341ec85b07f2202_1a1e53358e479a9402333ad9523d5d5ecc" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_007aded1c077ceb6e7341ec85b07f2202_1a1e53358e479a9402333ad9523d5d5ecc" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="6956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,</highlight></codeline>
<codeline lineno="6957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T21,<sp/>T22);</highlight></codeline>
<codeline lineno="6958"><highlight class="normal"></highlight></codeline>
<codeline lineno="6959"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="6960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="6961"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="6962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14,<sp/>T15<sp/>arg15,<sp/>T16<sp/>arg16,<sp/>T17<sp/>arg17,<sp/>T18<sp/>arg18,</highlight></codeline>
<codeline lineno="6963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T19<sp/>arg19,<sp/>T20<sp/>arg20,<sp/>T21<sp/>arg21,<sp/>T22<sp/>arg22)<sp/>{</highlight></codeline>
<codeline lineno="6964"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="6965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14,<sp/>arg15,<sp/>arg16,</highlight></codeline>
<codeline lineno="6966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg17,<sp/>arg18,<sp/>arg19,<sp/>arg20,<sp/>arg21,<sp/>arg22);</highlight></codeline>
<codeline lineno="6967"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6968"><highlight class="normal">};</highlight></codeline>
<codeline lineno="6969"><highlight class="normal"></highlight></codeline>
<codeline lineno="6970"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="6971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="6972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="6973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T17,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T18,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T19,</highlight></codeline>
<codeline lineno="6974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T20,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T21&gt;</highlight></codeline>
<codeline lineno="6975" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_06ff88417591e76ae209bc743223d075b" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="6976"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="6977"><highlight class="normal"><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="6978"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="6979"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="6980"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="6981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="6982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="6983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="6984"><highlight class="normal"></highlight></codeline>
<codeline lineno="6985"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="6986"><highlight class="normal"></highlight></codeline>
<codeline lineno="6987"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="6988"><highlight class="normal"></highlight></codeline>
<codeline lineno="6989"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>22))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6991"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="6992"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="6993"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6994"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6995"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="6996"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6997"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="6998"><highlight class="normal"></highlight></codeline>
<codeline lineno="7000" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_06ff88417591e76ae209bc743223d075b_1a6d561e63b166b62b38c841d5a3d31ce6" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_06ff88417591e76ae209bc743223d075b_1a6d561e63b166b62b38c841d5a3d31ce6" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7001"><highlight class="normal"></highlight></codeline>
<codeline lineno="7003" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_06ff88417591e76ae209bc743223d075b_1a37f785df036ed0d581e27c852aefe2f7" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_06ff88417591e76ae209bc743223d075b_1a37f785df036ed0d581e27c852aefe2f7" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="7004"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,</highlight></codeline>
<codeline lineno="7005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T21);</highlight></codeline>
<codeline lineno="7006"><highlight class="normal"></highlight></codeline>
<codeline lineno="7007"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="7009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="7010"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14,<sp/>T15<sp/>arg15,<sp/>T16<sp/>arg16,<sp/>T17<sp/>arg17,<sp/>T18<sp/>arg18,</highlight></codeline>
<codeline lineno="7011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T19<sp/>arg19,<sp/>T20<sp/>arg20,<sp/>T21<sp/>arg21)<sp/>{</highlight></codeline>
<codeline lineno="7012"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="7013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14,<sp/>arg15,<sp/>arg16,</highlight></codeline>
<codeline lineno="7014"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg17,<sp/>arg18,<sp/>arg19,<sp/>arg20,<sp/>arg21);</highlight></codeline>
<codeline lineno="7015"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7016"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7017"><highlight class="normal"></highlight></codeline>
<codeline lineno="7018"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="7019"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="7020"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="7021"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T17,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T18,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T19,</highlight></codeline>
<codeline lineno="7022"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T20&gt;</highlight></codeline>
<codeline lineno="7023" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_00bc8656c3a21dfb23f2db05466d0084e" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="7024"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="7025"><highlight class="normal"><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7026"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7027"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="7029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7032"><highlight class="normal"></highlight></codeline>
<codeline lineno="7033"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7034"><highlight class="normal"></highlight></codeline>
<codeline lineno="7035"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7036"><highlight class="normal"></highlight></codeline>
<codeline lineno="7037"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>21))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7038"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7039"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7044"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7045"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7046"><highlight class="normal"></highlight></codeline>
<codeline lineno="7048" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_00bc8656c3a21dfb23f2db05466d0084e_1af589ae61114d618a317602e443a9d509" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_00bc8656c3a21dfb23f2db05466d0084e_1af589ae61114d618a317602e443a9d509" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7049"><highlight class="normal"></highlight></codeline>
<codeline lineno="7051" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_00bc8656c3a21dfb23f2db05466d0084e_1a55d220d2e1923452016e4e600300e32e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_00bc8656c3a21dfb23f2db05466d0084e_1a55d220d2e1923452016e4e600300e32e" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="7052"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,</highlight></codeline>
<codeline lineno="7053"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T20);</highlight></codeline>
<codeline lineno="7054"><highlight class="normal"></highlight></codeline>
<codeline lineno="7055"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="7057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="7058"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14,<sp/>T15<sp/>arg15,<sp/>T16<sp/>arg16,<sp/>T17<sp/>arg17,<sp/>T18<sp/>arg18,</highlight></codeline>
<codeline lineno="7059"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T19<sp/>arg19,<sp/>T20<sp/>arg20)<sp/>{</highlight></codeline>
<codeline lineno="7060"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="7061"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14,<sp/>arg15,<sp/>arg16,</highlight></codeline>
<codeline lineno="7062"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg17,<sp/>arg18,<sp/>arg19,<sp/>arg20);</highlight></codeline>
<codeline lineno="7063"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7064"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7065"><highlight class="normal"></highlight></codeline>
<codeline lineno="7066"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="7067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="7068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="7069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T17,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T18,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T19&gt;</highlight></codeline>
<codeline lineno="7070" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_02e0397b86d637b2eb2a2a27639d3bd7d" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="7071"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="7072"><highlight class="normal"><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/>T19,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7073"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7074"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7075"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="7076"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/>T19,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7077"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7078"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7079"><highlight class="normal"></highlight></codeline>
<codeline lineno="7080"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7081"><highlight class="normal"></highlight></codeline>
<codeline lineno="7082"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7083"><highlight class="normal"></highlight></codeline>
<codeline lineno="7084"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>20))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7085"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7087"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7091"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7092"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7093"><highlight class="normal"></highlight></codeline>
<codeline lineno="7095" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_02e0397b86d637b2eb2a2a27639d3bd7d_1a5baa6d1fccb66c56a8b3907ae57ce23b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_02e0397b86d637b2eb2a2a27639d3bd7d_1a5baa6d1fccb66c56a8b3907ae57ce23b" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7096"><highlight class="normal"></highlight></codeline>
<codeline lineno="7098" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_02e0397b86d637b2eb2a2a27639d3bd7d_1a8fb6b4f0d52c1fca0e564303590025cd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_02e0397b86d637b2eb2a2a27639d3bd7d_1a8fb6b4f0d52c1fca0e564303590025cd" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="7099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19);</highlight></codeline>
<codeline lineno="7100"><highlight class="normal"></highlight></codeline>
<codeline lineno="7101"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="7103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="7104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14,<sp/>T15<sp/>arg15,<sp/>T16<sp/>arg16,<sp/>T17<sp/>arg17,<sp/>T18<sp/>arg18,</highlight></codeline>
<codeline lineno="7105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T19<sp/>arg19)<sp/>{</highlight></codeline>
<codeline lineno="7106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="7107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14,<sp/>arg15,<sp/>arg16,</highlight></codeline>
<codeline lineno="7108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg17,<sp/>arg18,<sp/>arg19);</highlight></codeline>
<codeline lineno="7109"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7110"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7111"><highlight class="normal"></highlight></codeline>
<codeline lineno="7112"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="7113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="7114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="7115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T17,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T18&gt;</highlight></codeline>
<codeline lineno="7116" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c5bdccff2376c4e65dbf601be0a7d291" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="7117"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="7118"><highlight class="normal"><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7119"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="7122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7125"><highlight class="normal"></highlight></codeline>
<codeline lineno="7126"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7127"><highlight class="normal"></highlight></codeline>
<codeline lineno="7128"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7129"><highlight class="normal"></highlight></codeline>
<codeline lineno="7130"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>19))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7132"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7137"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7138"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7139"><highlight class="normal"></highlight></codeline>
<codeline lineno="7141" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c5bdccff2376c4e65dbf601be0a7d291_1a42c6a38adc5707d2e290fc264f713b34" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c5bdccff2376c4e65dbf601be0a7d291_1a42c6a38adc5707d2e290fc264f713b34" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7142"><highlight class="normal"></highlight></codeline>
<codeline lineno="7144" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c5bdccff2376c4e65dbf601be0a7d291_1a735f90faa1626067fcb4494c1f2a4e33" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0c5bdccff2376c4e65dbf601be0a7d291_1a735f90faa1626067fcb4494c1f2a4e33" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="7145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18);</highlight></codeline>
<codeline lineno="7146"><highlight class="normal"></highlight></codeline>
<codeline lineno="7147"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="7149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="7150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14,<sp/>T15<sp/>arg15,<sp/>T16<sp/>arg16,<sp/>T17<sp/>arg17,<sp/>T18<sp/>arg18)<sp/>{</highlight></codeline>
<codeline lineno="7151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="7152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14,<sp/>arg15,<sp/>arg16,</highlight></codeline>
<codeline lineno="7153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg17,<sp/>arg18);</highlight></codeline>
<codeline lineno="7154"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7155"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7156"><highlight class="normal"></highlight></codeline>
<codeline lineno="7157"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="7158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="7159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="7160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T17&gt;</highlight></codeline>
<codeline lineno="7161" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0b692e5b42534b75f77dc62bd45d4471c" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="7162"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="7163"><highlight class="normal"><sp/><sp/><sp/><sp/>T17,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7164"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="7167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T17,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7170"><highlight class="normal"></highlight></codeline>
<codeline lineno="7171"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7172"><highlight class="normal"></highlight></codeline>
<codeline lineno="7173"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7174"><highlight class="normal"></highlight></codeline>
<codeline lineno="7175"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>18))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7182"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7183"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7184"><highlight class="normal"></highlight></codeline>
<codeline lineno="7186" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0b692e5b42534b75f77dc62bd45d4471c_1a564b4b5793e5d2cf08b959a89f64b22a" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0b692e5b42534b75f77dc62bd45d4471c_1a564b4b5793e5d2cf08b959a89f64b22a" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7187"><highlight class="normal"></highlight></codeline>
<codeline lineno="7189" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0b692e5b42534b75f77dc62bd45d4471c_1ad2d665f144d8d656cf7a704bcd00afb3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0b692e5b42534b75f77dc62bd45d4471c_1ad2d665f144d8d656cf7a704bcd00afb3" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="7190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17);</highlight></codeline>
<codeline lineno="7191"><highlight class="normal"></highlight></codeline>
<codeline lineno="7192"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="7194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="7195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14,<sp/>T15<sp/>arg15,<sp/>T16<sp/>arg16,<sp/>T17<sp/>arg17)<sp/>{</highlight></codeline>
<codeline lineno="7196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="7197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14,<sp/>arg15,<sp/>arg16,</highlight></codeline>
<codeline lineno="7198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg17);</highlight></codeline>
<codeline lineno="7199"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7200"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7201"><highlight class="normal"></highlight></codeline>
<codeline lineno="7202"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="7203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="7204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="7205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16&gt;</highlight></codeline>
<codeline lineno="7206" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0119b80031f65e66cb6a7049f63e61995" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,</highlight></codeline>
<codeline lineno="7207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7211"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="7213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7217"><highlight class="normal"></highlight></codeline>
<codeline lineno="7218"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7219"><highlight class="normal"></highlight></codeline>
<codeline lineno="7220"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7221"><highlight class="normal"></highlight></codeline>
<codeline lineno="7222"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>17))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7223"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7224"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7229"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7230"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7231"><highlight class="normal"></highlight></codeline>
<codeline lineno="7233" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0119b80031f65e66cb6a7049f63e61995_1a2a9bebd38738201aa408504d75768e51" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0119b80031f65e66cb6a7049f63e61995_1a2a9bebd38738201aa408504d75768e51" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7234"><highlight class="normal"></highlight></codeline>
<codeline lineno="7236" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0119b80031f65e66cb6a7049f63e61995_1ac43ce2e63cec9a89c0570bb83f344b61" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0119b80031f65e66cb6a7049f63e61995_1ac43ce2e63cec9a89c0570bb83f344b61" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="7237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16);</highlight></codeline>
<codeline lineno="7238"><highlight class="normal"></highlight></codeline>
<codeline lineno="7239"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="7241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="7242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14,<sp/>T15<sp/>arg15,<sp/>T16<sp/>arg16)<sp/>{</highlight></codeline>
<codeline lineno="7243"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="7244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14,<sp/>arg15,</highlight></codeline>
<codeline lineno="7245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg16);</highlight></codeline>
<codeline lineno="7246"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7247"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7248"><highlight class="normal"></highlight></codeline>
<codeline lineno="7249"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="7250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="7251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14,</highlight></codeline>
<codeline lineno="7252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15&gt;</highlight></codeline>
<codeline lineno="7253" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0347a34949d711676b9580bc54b90fb9e" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,</highlight></codeline>
<codeline lineno="7254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7258"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,</highlight></codeline>
<codeline lineno="7260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7264"><highlight class="normal"></highlight></codeline>
<codeline lineno="7265"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7266"><highlight class="normal"></highlight></codeline>
<codeline lineno="7267"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7268"><highlight class="normal"></highlight></codeline>
<codeline lineno="7269"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>16))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7270"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7271"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7276"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7277"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7278"><highlight class="normal"></highlight></codeline>
<codeline lineno="7280" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0347a34949d711676b9580bc54b90fb9e_1a0b8900e749ee09486adf3edda3c99b13" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0347a34949d711676b9580bc54b90fb9e_1a0b8900e749ee09486adf3edda3c99b13" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7281"><highlight class="normal"></highlight></codeline>
<codeline lineno="7283" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0347a34949d711676b9580bc54b90fb9e_1a0b6c802bc4742934b985936711e71651" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0347a34949d711676b9580bc54b90fb9e_1a0b6c802bc4742934b985936711e71651" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="7284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15);</highlight></codeline>
<codeline lineno="7285"><highlight class="normal"></highlight></codeline>
<codeline lineno="7286"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="7288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="7289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14,<sp/>T15<sp/>arg15)<sp/>{</highlight></codeline>
<codeline lineno="7290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="7291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14,<sp/>arg15);</highlight></codeline>
<codeline lineno="7292"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7293"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7294"><highlight class="normal"></highlight></codeline>
<codeline lineno="7295"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="7296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="7297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14&gt;</highlight></codeline>
<codeline lineno="7298" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_06b4e7d4700ed92d76c6033b21bb53426" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,</highlight></codeline>
<codeline lineno="7299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T12,<sp/>T13,<sp/>T14,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7303"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7309"><highlight class="normal"></highlight></codeline>
<codeline lineno="7310"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7311"><highlight class="normal"></highlight></codeline>
<codeline lineno="7312"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7313"><highlight class="normal"></highlight></codeline>
<codeline lineno="7314"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>15))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7315"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7316"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7321"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7322"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7323"><highlight class="normal"></highlight></codeline>
<codeline lineno="7325" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_06b4e7d4700ed92d76c6033b21bb53426_1af4d7199928898d73a7ebaac8d8f96dcf" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_06b4e7d4700ed92d76c6033b21bb53426_1af4d7199928898d73a7ebaac8d8f96dcf" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7326"><highlight class="normal"></highlight></codeline>
<codeline lineno="7328" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_06b4e7d4700ed92d76c6033b21bb53426_1aadc9cc6d2b1a4aeba9db7a91751b75ce" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_06b4e7d4700ed92d76c6033b21bb53426_1aadc9cc6d2b1a4aeba9db7a91751b75ce" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="7329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14);</highlight></codeline>
<codeline lineno="7330"><highlight class="normal"></highlight></codeline>
<codeline lineno="7331"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="7333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13,</highlight></codeline>
<codeline lineno="7334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T14<sp/>arg14)<sp/>{</highlight></codeline>
<codeline lineno="7335"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="7336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13,<sp/>arg14);</highlight></codeline>
<codeline lineno="7337"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7338"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7339"><highlight class="normal"></highlight></codeline>
<codeline lineno="7340"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="7341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="7342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13&gt;</highlight></codeline>
<codeline lineno="7343" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_07da793da861de6efda0c5ef013668aba" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,</highlight></codeline>
<codeline lineno="7344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T12,<sp/>T13,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7348"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7354"><highlight class="normal"></highlight></codeline>
<codeline lineno="7355"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7356"><highlight class="normal"></highlight></codeline>
<codeline lineno="7357"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7358"><highlight class="normal"></highlight></codeline>
<codeline lineno="7359"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>14))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7360"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7361"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7366"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7367"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7368"><highlight class="normal"></highlight></codeline>
<codeline lineno="7370" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_07da793da861de6efda0c5ef013668aba_1adc045a6b3581f99f01967721c3891812" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_07da793da861de6efda0c5ef013668aba_1adc045a6b3581f99f01967721c3891812" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7371"><highlight class="normal"></highlight></codeline>
<codeline lineno="7373" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_07da793da861de6efda0c5ef013668aba_1a0b0d3552f937119e6dd200240d7a813c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_07da793da861de6efda0c5ef013668aba_1a0b0d3552f937119e6dd200240d7a813c" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="7374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13);</highlight></codeline>
<codeline lineno="7375"><highlight class="normal"></highlight></codeline>
<codeline lineno="7376"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="7378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12,<sp/>T13<sp/>arg13)<sp/>{</highlight></codeline>
<codeline lineno="7379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="7380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12,<sp/>arg13);</highlight></codeline>
<codeline lineno="7381"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7382"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7383"><highlight class="normal"></highlight></codeline>
<codeline lineno="7384"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="7385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="7386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12&gt;</highlight></codeline>
<codeline lineno="7387" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0693a344374e1cc729d7d642c217c4797" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="7388"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7389"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7390"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7391"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7392"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7398"><highlight class="normal"></highlight></codeline>
<codeline lineno="7399"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7400"><highlight class="normal"></highlight></codeline>
<codeline lineno="7401"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7402"><highlight class="normal"></highlight></codeline>
<codeline lineno="7403"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>13))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7404"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7405"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7410"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7411"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7412"><highlight class="normal"></highlight></codeline>
<codeline lineno="7414" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0693a344374e1cc729d7d642c217c4797_1a4e211978ef6cd9c20d509d7ee06897c1" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0693a344374e1cc729d7d642c217c4797_1a4e211978ef6cd9c20d509d7ee06897c1" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7415"><highlight class="normal"></highlight></codeline>
<codeline lineno="7417" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0693a344374e1cc729d7d642c217c4797_1a9312e412dd5fffb58affed7f3e8ae571" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0693a344374e1cc729d7d642c217c4797_1a9312e412dd5fffb58affed7f3e8ae571" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="7418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12);</highlight></codeline>
<codeline lineno="7419"><highlight class="normal"></highlight></codeline>
<codeline lineno="7420"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="7422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11,<sp/>T12<sp/>arg12)<sp/>{</highlight></codeline>
<codeline lineno="7423"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="7424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11,<sp/>arg12);</highlight></codeline>
<codeline lineno="7425"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7426"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7427"><highlight class="normal"></highlight></codeline>
<codeline lineno="7428"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="7429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="7430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11&gt;</highlight></codeline>
<codeline lineno="7431" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0952ecc33088879a029d823fdb28962a5" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="7432"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7433"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7434"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7435"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7436"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7442"><highlight class="normal"></highlight></codeline>
<codeline lineno="7443"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7444"><highlight class="normal"></highlight></codeline>
<codeline lineno="7445"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7446"><highlight class="normal"></highlight></codeline>
<codeline lineno="7447"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>12))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7448"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7449"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7454"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7455"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7456"><highlight class="normal"></highlight></codeline>
<codeline lineno="7458" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0952ecc33088879a029d823fdb28962a5_1a8608916387e5ad0b933c9616bdf5662d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0952ecc33088879a029d823fdb28962a5_1a8608916387e5ad0b933c9616bdf5662d" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7459"><highlight class="normal"></highlight></codeline>
<codeline lineno="7461" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0952ecc33088879a029d823fdb28962a5_1a3761f60be9a34c66c2040fa467f82a7b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0952ecc33088879a029d823fdb28962a5_1a3761f60be9a34c66c2040fa467f82a7b" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="7462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10,<sp/>T11);</highlight></codeline>
<codeline lineno="7463"><highlight class="normal"></highlight></codeline>
<codeline lineno="7464"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="7466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10,<sp/>T11<sp/>arg11)<sp/>{</highlight></codeline>
<codeline lineno="7467"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="7468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10,<sp/>arg11);</highlight></codeline>
<codeline lineno="7469"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7470"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7471"><highlight class="normal"></highlight></codeline>
<codeline lineno="7472"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="7473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9,</highlight></codeline>
<codeline lineno="7474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10&gt;</highlight></codeline>
<codeline lineno="7475" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_001b475499b44e3884ba4869520ff4a4f" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="7476"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7477"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7478"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7479"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7480"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7486"><highlight class="normal"></highlight></codeline>
<codeline lineno="7487"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7488"><highlight class="normal"></highlight></codeline>
<codeline lineno="7489"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7490"><highlight class="normal"></highlight></codeline>
<codeline lineno="7491"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>11))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7492"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7493"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7498"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7499"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7500"><highlight class="normal"></highlight></codeline>
<codeline lineno="7502" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_001b475499b44e3884ba4869520ff4a4f_1a84f0585ad26b6072893b45b545b3b568" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_001b475499b44e3884ba4869520ff4a4f_1a84f0585ad26b6072893b45b545b3b568" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7503"><highlight class="normal"></highlight></codeline>
<codeline lineno="7505" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_001b475499b44e3884ba4869520ff4a4f_1a486761b0700c7c6bf4004bcdb6835abd" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_001b475499b44e3884ba4869520ff4a4f_1a486761b0700c7c6bf4004bcdb6835abd" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="7506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9,<sp/>T10);</highlight></codeline>
<codeline lineno="7507"><highlight class="normal"></highlight></codeline>
<codeline lineno="7508"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="7510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9,<sp/>T10<sp/>arg10)<sp/>{</highlight></codeline>
<codeline lineno="7511"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="7512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9,<sp/>arg10);</highlight></codeline>
<codeline lineno="7513"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7514"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7515"><highlight class="normal"></highlight></codeline>
<codeline lineno="7516"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="7517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9&gt;</highlight></codeline>
<codeline lineno="7518" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_049502b85b2c12b1b9e46020af86a2a36" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="7519"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7520"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7521"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7522"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7523"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7529"><highlight class="normal"></highlight></codeline>
<codeline lineno="7530"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7531"><highlight class="normal"></highlight></codeline>
<codeline lineno="7532"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7533"><highlight class="normal"></highlight></codeline>
<codeline lineno="7534"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>10))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7541"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7542"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7543"><highlight class="normal"></highlight></codeline>
<codeline lineno="7545" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_049502b85b2c12b1b9e46020af86a2a36_1a153dcecb67fa37749914aec30ab3d156" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_049502b85b2c12b1b9e46020af86a2a36_1a153dcecb67fa37749914aec30ab3d156" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7546"><highlight class="normal"></highlight></codeline>
<codeline lineno="7548" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_049502b85b2c12b1b9e46020af86a2a36_1a1e11c55bb318d748a6544568e47a5ff3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_049502b85b2c12b1b9e46020af86a2a36_1a1e11c55bb318d748a6544568e47a5ff3" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,</highlight></codeline>
<codeline lineno="7549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9);</highlight></codeline>
<codeline lineno="7550"><highlight class="normal"></highlight></codeline>
<codeline lineno="7551"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8,</highlight></codeline>
<codeline lineno="7553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T9<sp/>arg9)<sp/>{</highlight></codeline>
<codeline lineno="7554"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="7555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8,<sp/>arg9);</highlight></codeline>
<codeline lineno="7556"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7557"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7558"><highlight class="normal"></highlight></codeline>
<codeline lineno="7559"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="7560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8&gt;</highlight></codeline>
<codeline lineno="7561" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0fe84ead02d0bcd4c779244e8a11c91be" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="7562"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7563"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7564"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7565"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7566"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7572"><highlight class="normal"></highlight></codeline>
<codeline lineno="7573"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7574"><highlight class="normal"></highlight></codeline>
<codeline lineno="7575"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7576"><highlight class="normal"></highlight></codeline>
<codeline lineno="7577"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>9))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7579"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7584"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7585"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7586"><highlight class="normal"></highlight></codeline>
<codeline lineno="7588" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0fe84ead02d0bcd4c779244e8a11c91be_1a61aecb313219ca3c98081aff0666b9a4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0fe84ead02d0bcd4c779244e8a11c91be_1a61aecb313219ca3c98081aff0666b9a4" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7589"><highlight class="normal"></highlight></codeline>
<codeline lineno="7591" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0fe84ead02d0bcd4c779244e8a11c91be_1a596fb332d0952d6a8cb6e7bbfff9fe5d" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_0fe84ead02d0bcd4c779244e8a11c91be_1a596fb332d0952d6a8cb6e7bbfff9fe5d" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8);</highlight></codeline>
<codeline lineno="7592"><highlight class="normal"></highlight></codeline>
<codeline lineno="7593"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7,<sp/>T8<sp/>arg8)<sp/>{</highlight></codeline>
<codeline lineno="7595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,<sp/>arg7,</highlight></codeline>
<codeline lineno="7596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg8);</highlight></codeline>
<codeline lineno="7597"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7598"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7599"><highlight class="normal"></highlight></codeline>
<codeline lineno="7600"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="7601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7&gt;</highlight></codeline>
<codeline lineno="7602" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_058a052ff7523a323b0c36bc04be41ac1" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="7603"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7604"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7605"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7606"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7607"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7613"><highlight class="normal"></highlight></codeline>
<codeline lineno="7614"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7615"><highlight class="normal"></highlight></codeline>
<codeline lineno="7616"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7617"><highlight class="normal"></highlight></codeline>
<codeline lineno="7618"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>8))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7619"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7620"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7625"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7626"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7627"><highlight class="normal"></highlight></codeline>
<codeline lineno="7629" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_058a052ff7523a323b0c36bc04be41ac1_1a784340f9a93bcba30e9023a0bf327022" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_058a052ff7523a323b0c36bc04be41ac1_1a784340f9a93bcba30e9023a0bf327022" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7630"><highlight class="normal"></highlight></codeline>
<codeline lineno="7632" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_058a052ff7523a323b0c36bc04be41ac1_1a17f882d686cc844b298a3c79e85e0b74" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_058a052ff7523a323b0c36bc04be41ac1_1a17f882d686cc844b298a3c79e85e0b74" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7);</highlight></codeline>
<codeline lineno="7633"><highlight class="normal"></highlight></codeline>
<codeline lineno="7634"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6,<sp/>T7<sp/>arg7)<sp/>{</highlight></codeline>
<codeline lineno="7636"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6,</highlight></codeline>
<codeline lineno="7637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>arg7);</highlight></codeline>
<codeline lineno="7638"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7639"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7640"><highlight class="normal"></highlight></codeline>
<codeline lineno="7641"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="7642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6&gt;</highlight></codeline>
<codeline lineno="7643" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_04e32c1313cc6d5853648e79e341a9b95" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="7644"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7645"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7646"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7647"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7648"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7654"><highlight class="normal"></highlight></codeline>
<codeline lineno="7655"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7656"><highlight class="normal"></highlight></codeline>
<codeline lineno="7657"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7658"><highlight class="normal"></highlight></codeline>
<codeline lineno="7659"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>7))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7660"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7661"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7662"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7664"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7665"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7666"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7667"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7668"><highlight class="normal"></highlight></codeline>
<codeline lineno="7670" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_04e32c1313cc6d5853648e79e341a9b95_1a3bcfe3c80431dd7c949e56da83e1b19c" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_04e32c1313cc6d5853648e79e341a9b95_1a3bcfe3c80431dd7c949e56da83e1b19c" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7671"><highlight class="normal"></highlight></codeline>
<codeline lineno="7673" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_04e32c1313cc6d5853648e79e341a9b95_1af68d84efe999b0844f02e4208814dfa3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_04e32c1313cc6d5853648e79e341a9b95_1af68d84efe999b0844f02e4208814dfa3" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6);</highlight></codeline>
<codeline lineno="7674"><highlight class="normal"></highlight></codeline>
<codeline lineno="7675"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5,<sp/>T6<sp/>arg6)<sp/>{</highlight></codeline>
<codeline lineno="7677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5,<sp/>arg6);</highlight></codeline>
<codeline lineno="7678"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7679"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7680"><highlight class="normal"></highlight></codeline>
<codeline lineno="7681"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4,</highlight></codeline>
<codeline lineno="7682"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5&gt;</highlight></codeline>
<codeline lineno="7683" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_07150edefd2e3c81ea19f3a59d5afeda0" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="7684"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7686"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7687"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7688"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7690"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7694"><highlight class="normal"></highlight></codeline>
<codeline lineno="7695"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7696"><highlight class="normal"></highlight></codeline>
<codeline lineno="7697"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7698"><highlight class="normal"></highlight></codeline>
<codeline lineno="7699"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>6))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7700"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7701"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7706"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7707"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7708"><highlight class="normal"></highlight></codeline>
<codeline lineno="7710" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_07150edefd2e3c81ea19f3a59d5afeda0_1a721b0b1a8312d27e795ded72983691d4" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_07150edefd2e3c81ea19f3a59d5afeda0_1a721b0b1a8312d27e795ded72983691d4" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7711"><highlight class="normal"></highlight></codeline>
<codeline lineno="7713" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_07150edefd2e3c81ea19f3a59d5afeda0_1af1c11364203adabd291c65cb83ba670b" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_07150edefd2e3c81ea19f3a59d5afeda0_1af1c11364203adabd291c65cb83ba670b" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5);</highlight></codeline>
<codeline lineno="7714"><highlight class="normal"></highlight></codeline>
<codeline lineno="7715"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4,<sp/>T5<sp/>arg5)<sp/>{</highlight></codeline>
<codeline lineno="7717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4,<sp/>arg5);</highlight></codeline>
<codeline lineno="7718"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7719"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7720"><highlight class="normal"></highlight></codeline>
<codeline lineno="7721"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4&gt;</highlight></codeline>
<codeline lineno="7722" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_02e2d91f43b17caee4c85e0cfe480cf6b" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7728"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7735"><highlight class="normal"></highlight></codeline>
<codeline lineno="7736"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7737"><highlight class="normal"></highlight></codeline>
<codeline lineno="7738"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7739"><highlight class="normal"></highlight></codeline>
<codeline lineno="7740"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>5))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7742"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7747"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7748"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7749"><highlight class="normal"></highlight></codeline>
<codeline lineno="7751" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_02e2d91f43b17caee4c85e0cfe480cf6b_1a18fdcb0146f31434a5b08b642fd92290" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_02e2d91f43b17caee4c85e0cfe480cf6b_1a18fdcb0146f31434a5b08b642fd92290" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7752"><highlight class="normal"></highlight></codeline>
<codeline lineno="7754" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_02e2d91f43b17caee4c85e0cfe480cf6b_1a6d0370f9e85a4ac6b2e6e17a634fd96e" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_t4_00_02e2d91f43b17caee4c85e0cfe480cf6b_1a6d0370f9e85a4ac6b2e6e17a634fd96e" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4);</highlight></codeline>
<codeline lineno="7755"><highlight class="normal"></highlight></codeline>
<codeline lineno="7756"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3,<sp/>T4<sp/>arg4)<sp/>{</highlight></codeline>
<codeline lineno="7758"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3,<sp/>arg4);</highlight></codeline>
<codeline lineno="7759"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7760"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7761"><highlight class="normal"></highlight></codeline>
<codeline lineno="7762"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3&gt;</highlight></codeline>
<codeline lineno="7763" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_null_tye7e91080ec5381eb86b6dad1933db8ee" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="7764"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7765"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7766"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7767"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7768"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7769"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7776"><highlight class="normal"></highlight></codeline>
<codeline lineno="7777"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7778"><highlight class="normal"></highlight></codeline>
<codeline lineno="7779"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7780"><highlight class="normal"></highlight></codeline>
<codeline lineno="7781"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>4))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7782"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7783"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7788"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7789"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7790"><highlight class="normal"></highlight></codeline>
<codeline lineno="7792" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_null_tye7e91080ec5381eb86b6dad1933db8ee_1a477dfa9a89c2d757123695ec440d5844" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_null_tye7e91080ec5381eb86b6dad1933db8ee_1a477dfa9a89c2d757123695ec440d5844" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7793"><highlight class="normal"></highlight></codeline>
<codeline lineno="7795" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_null_tye7e91080ec5381eb86b6dad1933db8ee_1a1a6443acd14e62b998944472a87fd771" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_t3_00_01_null_tye7e91080ec5381eb86b6dad1933db8ee_1a1a6443acd14e62b998944472a87fd771" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3);</highlight></codeline>
<codeline lineno="7796"><highlight class="normal"></highlight></codeline>
<codeline lineno="7797"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2,</highlight></codeline>
<codeline lineno="7798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T3<sp/>arg3)<sp/>{</highlight></codeline>
<codeline lineno="7799"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2,<sp/>arg3);</highlight></codeline>
<codeline lineno="7800"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7801"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7802"><highlight class="normal"></highlight></codeline>
<codeline lineno="7803"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2&gt;</highlight></codeline>
<codeline lineno="7804" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_null_type_00_01_3c1dd53f417d820e8e7f79e0e6e43940" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="7805"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7806"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7807"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7808"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7809"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7810"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7817"><highlight class="normal"></highlight></codeline>
<codeline lineno="7818"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7819"><highlight class="normal"></highlight></codeline>
<codeline lineno="7820"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7821"><highlight class="normal"></highlight></codeline>
<codeline lineno="7822"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>3))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7823"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7825"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7827"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7828"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7829"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7830"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7831"><highlight class="normal"></highlight></codeline>
<codeline lineno="7833" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_null_type_00_01_3c1dd53f417d820e8e7f79e0e6e43940_1aae5b52c1234fe2c32e48d551631a41d0" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_null_type_00_01_3c1dd53f417d820e8e7f79e0e6e43940_1aae5b52c1234fe2c32e48d551631a41d0" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7834"><highlight class="normal"></highlight></codeline>
<codeline lineno="7836" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_null_type_00_01_3c1dd53f417d820e8e7f79e0e6e43940_1a3a21a9c8af4fcc2eff92d551e9a7e1e5" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_t2_00_01_null_type_00_01_3c1dd53f417d820e8e7f79e0e6e43940_1a3a21a9c8af4fcc2eff92d551e9a7e1e5" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1,<sp/>T2);</highlight></codeline>
<codeline lineno="7837"><highlight class="normal"></highlight></codeline>
<codeline lineno="7838"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1,<sp/>T2<sp/>arg2)<sp/>{</highlight></codeline>
<codeline lineno="7839"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1,<sp/>arg2);</highlight></codeline>
<codeline lineno="7840"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7841"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7842"><highlight class="normal"></highlight></codeline>
<codeline lineno="7843"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1&gt;</highlight></codeline>
<codeline lineno="7844" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_null_type_00_01_null_type976790afb6cd43a46b477dbaa6c37690" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="7845"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7846"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7847"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7848"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7849"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7850"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7857"><highlight class="normal"></highlight></codeline>
<codeline lineno="7858"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7859"><highlight class="normal"></highlight></codeline>
<codeline lineno="7860"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7861"><highlight class="normal"></highlight></codeline>
<codeline lineno="7862"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>2))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7863"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7868"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7869"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7870"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7871"><highlight class="normal"></highlight></codeline>
<codeline lineno="7873" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_null_type_00_01_null_type976790afb6cd43a46b477dbaa6c37690_1a3508370bc80b0be6a295cbb24b804f79" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_null_type_00_01_null_type976790afb6cd43a46b477dbaa6c37690_1a3508370bc80b0be6a295cbb24b804f79" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7874"><highlight class="normal"></highlight></codeline>
<codeline lineno="7876" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_null_type_00_01_null_type976790afb6cd43a46b477dbaa6c37690_1a4ca345857c1e5edff8576afe9ddd66d3" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_t1_00_01_null_type_00_01_null_type976790afb6cd43a46b477dbaa6c37690_1a4ca345857c1e5edff8576afe9ddd66d3" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0,<sp/>T1);</highlight></codeline>
<codeline lineno="7877"><highlight class="normal"></highlight></codeline>
<codeline lineno="7878"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0,<sp/>T1<sp/>arg1)<sp/>{</highlight></codeline>
<codeline lineno="7879"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0,<sp/>arg1);</highlight></codeline>
<codeline lineno="7880"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7881"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7882"><highlight class="normal"></highlight></codeline>
<codeline lineno="7883"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0&gt;</highlight></codeline>
<codeline lineno="7884" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_null_type_00_01_null_type_00_01_nuef9440cf872cfa49206345aec55f09ad" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="7885"><highlight class="normal"><sp/><sp/><sp/><sp/>T0,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7886"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7887"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7888"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7889"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;<sp/>{</highlight></codeline>
<codeline lineno="7890"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,</highlight></codeline>
<codeline lineno="7895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>,<sp/><ref refid="classcl_1_1detail_1_1_null_type" kindref="compound">NullType</ref>&gt;</highlight></codeline>
<codeline lineno="7896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7897"><highlight class="normal"></highlight></codeline>
<codeline lineno="7898"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>functor_;</highlight></codeline>
<codeline lineno="7899"><highlight class="normal"></highlight></codeline>
<codeline lineno="7900"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">functionImplementation_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref><sp/>&amp;functor)<sp/>:<sp/>functor_(functor)<sp/>{</highlight></codeline>
<codeline lineno="7901"><highlight class="normal"></highlight></codeline>
<codeline lineno="7902"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>(defined(_WIN32)<sp/>&amp;&amp;<sp/>defined(_VARIADIC_MAX)<sp/>&amp;&amp;<sp/>(_VARIADIC_MAX<sp/>&lt;<sp/>1))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7903"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Fail<sp/>variadic<sp/>expansion<sp/>for<sp/>dev11</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7904"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_assert</highlight><highlight class="normal">(</highlight></codeline>
<codeline lineno="7905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0,</highlight></codeline>
<codeline lineno="7906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Visual<sp/>Studio<sp/>has<sp/>a<sp/>hard<sp/>limit<sp/>of<sp/>argument<sp/>count<sp/>for<sp/>a<sp/>std::function<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;expansion.<sp/>Please<sp/>define<sp/>_VARIADIC_MAX<sp/>to<sp/>be<sp/>10.<sp/>If<sp/>you<sp/>need<sp/>more<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;arguments<sp/>than<sp/>that<sp/>VC12<sp/>and<sp/>below<sp/>cannot<sp/>support<sp/>it.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="7909"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7910"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7911"><highlight class="normal"></highlight></codeline>
<codeline lineno="7913" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_null_type_00_01_null_type_00_01_nuef9440cf872cfa49206345aec55f09ad_1aef998d4ce2deaab42cae1f10468f51da" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_null_type_00_01_null_type_00_01_nuef9440cf872cfa49206345aec55f09ad_1aef998d4ce2deaab42cae1f10468f51da" kindref="member">result_type</ref>;</highlight></codeline>
<codeline lineno="7914"><highlight class="normal"></highlight></codeline>
<codeline lineno="7916" refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_null_type_00_01_null_type_00_01_nuef9440cf872cfa49206345aec55f09ad_1a549adc6ed9d95aa14c3bfc83d30686db" refkind="member"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/><ref refid="structcl_1_1detail_1_1function_implementation___3_01_t0_00_01_null_type_00_01_null_type_00_01_nuef9440cf872cfa49206345aec55f09ad_1a549adc6ed9d95aa14c3bfc83d30686db" kindref="member">type_</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;,<sp/>T0);</highlight></codeline>
<codeline lineno="7917"><highlight class="normal"></highlight></codeline>
<codeline lineno="7918"><highlight class="normal"><sp/><sp/><ref refid="classcl_1_1_event" kindref="compound">Event</ref><sp/>operator()(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1_enqueue_args" kindref="compound">EnqueueArgs</ref><sp/>&amp;enqueueArgs,<sp/>T0<sp/>arg0)<sp/>{</highlight></codeline>
<codeline lineno="7919"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>functor_(enqueueArgs,<sp/>arg0);</highlight></codeline>
<codeline lineno="7920"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="7921"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7922"><highlight class="normal"></highlight></codeline>
<codeline lineno="7923"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>detail</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7924"><highlight class="normal"></highlight></codeline>
<codeline lineno="7925"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7926"><highlight class="normal"></highlight></codeline>
<codeline lineno="7927"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T0,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1<sp/>=<sp/>detail::NullType,</highlight></codeline>
<codeline lineno="7928"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2<sp/>=<sp/>detail::NullType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3<sp/>=<sp/>detail::NullType,</highlight></codeline>
<codeline lineno="7929"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4<sp/>=<sp/>detail::NullType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T5<sp/>=<sp/>detail::NullType,</highlight></codeline>
<codeline lineno="7930"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T6<sp/>=<sp/>detail::NullType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T7<sp/>=<sp/>detail::NullType,</highlight></codeline>
<codeline lineno="7931"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T8<sp/>=<sp/>detail::NullType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T9<sp/>=<sp/>detail::NullType,</highlight></codeline>
<codeline lineno="7932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T10<sp/>=<sp/>detail::NullType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T11<sp/>=<sp/>detail::NullType,</highlight></codeline>
<codeline lineno="7933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T12<sp/>=<sp/>detail::NullType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T13<sp/>=<sp/>detail::NullType,</highlight></codeline>
<codeline lineno="7934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T14<sp/>=<sp/>detail::NullType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T15<sp/>=<sp/>detail::NullType,</highlight></codeline>
<codeline lineno="7935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T16<sp/>=<sp/>detail::NullType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T17<sp/>=<sp/>detail::NullType,</highlight></codeline>
<codeline lineno="7936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T18<sp/>=<sp/>detail::NullType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T19<sp/>=<sp/>detail::NullType,</highlight></codeline>
<codeline lineno="7937"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T20<sp/>=<sp/>detail::NullType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T21<sp/>=<sp/>detail::NullType,</highlight></codeline>
<codeline lineno="7938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T22<sp/>=<sp/>detail::NullType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T23<sp/>=<sp/>detail::NullType,</highlight></codeline>
<codeline lineno="7939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T24<sp/>=<sp/>detail::NullType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T25<sp/>=<sp/>detail::NullType,</highlight></codeline>
<codeline lineno="7940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T26<sp/>=<sp/>detail::NullType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T27<sp/>=<sp/>detail::NullType,</highlight></codeline>
<codeline lineno="7941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T28<sp/>=<sp/>detail::NullType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T29<sp/>=<sp/>detail::NullType,</highlight></codeline>
<codeline lineno="7942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T30<sp/>=<sp/>detail::NullType,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T31<sp/>=<sp/>detail::NullType&gt;</highlight></codeline>
<codeline lineno="7943" refid="structcl_1_1make__kernel" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structcl_1_1make__kernel" kindref="compound">make_kernel</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">detail::functionImplementation_</ref>&lt;</highlight></codeline>
<codeline lineno="7944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,</highlight></codeline>
<codeline lineno="7945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,<sp/>T22,<sp/>T23,</highlight></codeline>
<codeline lineno="7946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T24,<sp/>T25,<sp/>T26,<sp/>T27,<sp/>T28,<sp/>T29,<sp/>T30,<sp/>T31&gt;<sp/>{</highlight></codeline>
<codeline lineno="7947"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="7948"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">detail::KernelFunctorGlobal</ref>&lt;</highlight></codeline>
<codeline lineno="7949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,<sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,</highlight></codeline>
<codeline lineno="7950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>T17,<sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,<sp/>T26,<sp/>T27,<sp/>T28,<sp/>T29,<sp/>T30,<sp/>T31&gt;</highlight></codeline>
<codeline lineno="7951"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>;</highlight></codeline>
<codeline lineno="7952"><highlight class="normal"></highlight></codeline>
<codeline lineno="7953"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1make__kernel" kindref="compound">make_kernel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_program" kindref="compound">Program</ref><sp/>&amp;program,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespacecl_1ad3ff55c5fe80ec84842876af323559c7" kindref="member">STRING_CLASS</ref><sp/>name,</highlight></codeline>
<codeline lineno="7954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cl_int<sp/>*err<sp/>=<sp/>NULL)</highlight></codeline>
<codeline lineno="7955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">detail::functionImplementation_</ref>&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,</highlight></codeline>
<codeline lineno="7956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,</highlight></codeline>
<codeline lineno="7957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,</highlight></codeline>
<codeline lineno="7958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T26,<sp/>T27,<sp/>T28,<sp/>T29,<sp/>T30,<sp/>T31&gt;(</highlight></codeline>
<codeline lineno="7959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>(program,<sp/>name,<sp/>err))<sp/>{}</highlight></codeline>
<codeline lineno="7960"><highlight class="normal"></highlight></codeline>
<codeline lineno="7961"><highlight class="normal"><sp/><sp/><ref refid="structcl_1_1make__kernel" kindref="compound">make_kernel</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classcl_1_1_kernel" kindref="compound">Kernel</ref><sp/>kernel)</highlight></codeline>
<codeline lineno="7962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/><ref refid="structcl_1_1detail_1_1function_implementation__" kindref="compound">detail::functionImplementation_</ref>&lt;T0,<sp/>T1,<sp/>T2,<sp/>T3,<sp/>T4,<sp/>T5,<sp/>T6,<sp/>T7,<sp/>T8,<sp/>T9,</highlight></codeline>
<codeline lineno="7963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T10,<sp/>T11,<sp/>T12,<sp/>T13,<sp/>T14,<sp/>T15,<sp/>T16,<sp/>T17,</highlight></codeline>
<codeline lineno="7964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T18,<sp/>T19,<sp/>T20,<sp/>T21,<sp/>T22,<sp/>T23,<sp/>T24,<sp/>T25,</highlight></codeline>
<codeline lineno="7965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>T26,<sp/>T27,<sp/>T28,<sp/>T29,<sp/>T30,<sp/>T31&gt;(</highlight></codeline>
<codeline lineno="7966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classcl_1_1detail_1_1_kernel_functor_global" kindref="compound">FunctorType</ref>(kernel))<sp/>{}</highlight></codeline>
<codeline lineno="7967"><highlight class="normal">};</highlight></codeline>
<codeline lineno="7968"><highlight class="normal"></highlight></codeline>
<codeline lineno="7969"><highlight class="normal"></highlight><highlight class="comment">//----------------------------------------------------------------------------------------------------------------------</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7970"><highlight class="normal"></highlight></codeline>
<codeline lineno="7971"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ERR_STR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7972"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__CL_USER_OVERRIDE_ERROR_STRINGS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7973"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__GET_DEVICE_INFO_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7974"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__GET_PLATFORM_INFO_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7975"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__GET_DEVICE_IDS_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7976"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__GET_CONTEXT_INFO_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7977"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__GET_EVENT_INFO_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7978"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__GET_EVENT_PROFILE_INFO_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7979"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__GET_MEM_OBJECT_INFO_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7980"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__GET_IMAGE_INFO_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7981"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__GET_SAMPLER_INFO_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7982"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__GET_KERNEL_INFO_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7983"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__GET_KERNEL_ARG_INFO_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7984"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__GET_KERNEL_WORK_GROUP_INFO_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7985"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__GET_PROGRAM_INFO_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7986"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__GET_PROGRAM_BUILD_INFO_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7987"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__GET_COMMAND_QUEUE_INFO_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7988"><highlight class="normal"></highlight></codeline>
<codeline lineno="7989"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__CREATE_CONTEXT_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7990"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__CREATE_CONTEXT_FROM_TYPE_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7991"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__GET_SUPPORTED_IMAGE_FORMATS_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7992"><highlight class="normal"></highlight></codeline>
<codeline lineno="7993"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__CREATE_BUFFER_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7994"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__CREATE_SUBBUFFER_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7995"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__CREATE_IMAGE2D_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7996"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__CREATE_IMAGE3D_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7997"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__CREATE_SAMPLER_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7998"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__SET_MEM_OBJECT_DESTRUCTOR_CALLBACK_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7999"><highlight class="normal"></highlight></codeline>
<codeline lineno="8000"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__CREATE_USER_EVENT_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8001"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__SET_USER_EVENT_STATUS_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8002"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__SET_EVENT_CALLBACK_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8003"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__SET_PRINTF_CALLBACK_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8004"><highlight class="normal"></highlight></codeline>
<codeline lineno="8005"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__WAIT_FOR_EVENTS_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8006"><highlight class="normal"></highlight></codeline>
<codeline lineno="8007"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__CREATE_KERNEL_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8008"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__SET_KERNEL_ARGS_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8009"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__CREATE_PROGRAM_WITH_SOURCE_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8010"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__CREATE_PROGRAM_WITH_BINARY_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8011"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__CREATE_PROGRAM_WITH_BUILT_IN_KERNELS_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8012"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__BUILD_PROGRAM_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8013"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__CREATE_KERNELS_IN_PROGRAM_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8014"><highlight class="normal"></highlight></codeline>
<codeline lineno="8015"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__CREATE_COMMAND_QUEUE_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8016"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__SET_COMMAND_QUEUE_PROPERTY_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8017"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ENQUEUE_READ_BUFFER_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8018"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ENQUEUE_WRITE_BUFFER_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8019"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ENQUEUE_READ_BUFFER_RECT_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8020"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ENQUEUE_WRITE_BUFFER_RECT_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8021"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ENQEUE_COPY_BUFFER_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8022"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ENQEUE_COPY_BUFFER_RECT_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8023"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ENQUEUE_READ_IMAGE_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8024"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ENQUEUE_WRITE_IMAGE_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8025"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ENQUEUE_COPY_IMAGE_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8026"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ENQUEUE_COPY_IMAGE_TO_BUFFER_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8027"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ENQUEUE_COPY_BUFFER_TO_IMAGE_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8028"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ENQUEUE_MAP_BUFFER_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8029"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ENQUEUE_MAP_IMAGE_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8030"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ENQUEUE_UNMAP_MEM_OBJECT_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8031"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ENQUEUE_NDRANGE_KERNEL_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8032"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ENQUEUE_TASK_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8033"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__ENQUEUE_NATIVE_KERNEL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8034"><highlight class="normal"></highlight></codeline>
<codeline lineno="8035"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__CL_EXPLICIT_CONSTRUCTORS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8036"><highlight class="normal"></highlight></codeline>
<codeline lineno="8037"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__UNLOAD_COMPILER_ERR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8038"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//__CL_USER_OVERRIDE_ERROR_STRINGS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8039"><highlight class="normal"></highlight></codeline>
<codeline lineno="8040"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__CL_FUNCTION_TYPE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8041"><highlight class="normal"></highlight></codeline>
<codeline lineno="8042"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Extensions</highlight></codeline>
<codeline lineno="8046"><highlight class="preprocessor">#if<sp/>defined(CL_VERSION_1_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8047"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__INIT_CL_EXT_FCN_PTR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8048"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>#if<sp/>defined(CL_VERSION_1_1)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8049"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__CREATE_SUB_DEVICES</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8050"><highlight class="normal"></highlight></codeline>
<codeline lineno="8051"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>defined(USE_CL_DEVICE_FISSION)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8052"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__PARAM_NAME_DEVICE_FISSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8053"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>USE_CL_DEVICE_FISSION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8054"><highlight class="normal"></highlight></codeline>
<codeline lineno="8055"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__DEFAULT_NOT_INITIALIZED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8056"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__DEFAULT_BEING_INITIALIZED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8057"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>__DEFAULT_INITIALIZED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8058"><highlight class="normal"></highlight></codeline>
<codeline lineno="8059"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>CL_HPP_RVALUE_REFERENCES_SUPPORTED</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8060"><highlight class="normal"></highlight><highlight class="preprocessor">#undef<sp/>CL_HPP_NOEXCEPT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8061"><highlight class="normal"></highlight></codeline>
<codeline lineno="8062"><highlight class="normal">}<sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>cl</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8063"><highlight class="normal"></highlight></codeline>
<codeline lineno="8064"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">//<sp/>CL_HPP_</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/compute/cl.hpp"/>
  </compounddef>
</doxygen>
