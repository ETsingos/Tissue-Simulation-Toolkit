<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="class_i_o" kind="class" language="C++" prot="public">
    <compoundname>IO</compoundname>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_i_o_1ac7f3f1775be2ccfbc0d64ac4b90c75d5" prot="private" static="no" mutable="no">
        <type><ref refid="class_dish" kindref="compound">Dish</ref> *</type>
        <definition>Dish* IO::dish</definition>
        <argsstring></argsstring>
        <name>dish</name>
        <qualifiedname>IO::dish</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="61" column="8" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_i_o_1ab849c21ba33b42ecc420618bebfecb8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>IO::IO</definition>
        <argsstring>(Dish &amp;d)</argsstring>
        <name>IO</name>
        <qualifiedname>IO::IO</qualifiedname>
        <param>
          <type><ref refid="class_dish" kindref="compound">Dish</ref> &amp;</type>
          <declname>d</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="38" column="3" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.cpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="class_i_o_1a50fcb30dee75a12a546502e505c72947" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int IO::OpenFileAndCheckExistence</definition>
        <argsstring>(FILE **fp, const char *fname, const char *ftype)</argsstring>
        <name>OpenFileAndCheckExistence</name>
        <qualifiedname>IO::OpenFileAndCheckExistence</qualifiedname>
        <param>
          <type>FILE **</type>
          <declname>fp</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>ftype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="40" column="7" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.cpp" bodystart="49" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_i_o_1a03799e46ac01edcd75e0bb66680cd675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int IO::YesNoP</definition>
        <argsstring>(const char *message)</argsstring>
        <name>YesNoP</name>
        <qualifiedname>IO::YesNoP</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>message</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="42" column="7" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.cpp" bodystart="76" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="class_i_o_1a7b8f623ecb880bc287f93f4f67500ffc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE * IO::OpenWriteFile</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>OpenWriteFile</name>
        <qualifiedname>IO::OpenWriteFile</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="43" column="8" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.cpp" bodystart="96" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="class_i_o_1a01a5db8c7125ca35fd9c1f92c32c8b35" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE * IO::OpenGZippedWriteFile</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>OpenGZippedWriteFile</name>
        <qualifiedname>IO::OpenGZippedWriteFile</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="44" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_i_o_1a0e4afbb291b9bf4e1defbdce01c05d8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>FILE *</type>
        <definition>FILE * IO::OpenReadFile</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>OpenReadFile</name>
        <qualifiedname>IO::OpenReadFile</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="45" column="8" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.cpp" bodystart="125" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="class_i_o_1a402d66a4f67a12a5282922df8e81485d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * IO::ReadLine</definition>
        <argsstring>(FILE *fp)</argsstring>
        <name>ReadLine</name>
        <qualifiedname>IO::ReadLine</qualifiedname>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="46" column="8" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.cpp" bodystart="138" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="class_i_o_1ae024e80f0f1911295b6c65dde421210b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IO::CheckFile</definition>
        <argsstring>(FILE *fp)</argsstring>
        <name>CheckFile</name>
        <qualifiedname>IO::CheckFile</qualifiedname>
        <param>
          <type>FILE *</type>
          <declname>fp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="47" column="8" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.cpp" bodystart="199" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="class_i_o_1a0d0a41170659bfd7b9a118634c156df4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int IO::FileExistsP</definition>
        <argsstring>(const char *fname)</argsstring>
        <name>FileExistsP</name>
        <qualifiedname>IO::FileExistsP</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="48" column="7" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.cpp" bodystart="65" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="class_i_o_1ac2286feba67c8e42ad415bce03db791f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char * IO::Chext</definition>
        <argsstring>(char *filename)</argsstring>
        <name>Chext</name>
        <qualifiedname>IO::Chext</qualifiedname>
        <param>
          <type>char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="49" column="8" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.cpp" bodystart="207" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="class_i_o_1a16df0d792b4a19a6060eac8f1f2c8232" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IO::MakeDir</definition>
        <argsstring>(const char *dirname)</argsstring>
        <name>MakeDir</name>
        <qualifiedname>IO::MakeDir</qualifiedname>
        <param>
          <type>const char *</type>
          <declname>dirname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="50" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_i_o_1a2a8f6731ea6d5c986396e6197d112653" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool IO::CanWeWriteP</definition>
        <argsstring>(char *filename)</argsstring>
        <name>CanWeWriteP</name>
        <qualifiedname>IO::CanWeWriteP</qualifiedname>
        <param>
          <type>char *</type>
          <declname>filename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="51" column="8"/>
      </memberdef>
      <memberdef kind="function" id="class_i_o_1a67fe47842c1ec356580c0c642ccc9a21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IO::CountSigma</definition>
        <argsstring>(std::ostream &amp;os)</argsstring>
        <name>CountSigma</name>
        <qualifiedname>IO::CountSigma</qualifiedname>
        <param>
          <type>std::ostream &amp;</type>
          <declname>os</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A simple method to count all sigma&apos;s and write the output to an ostream </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="53" column="8" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.cpp" bodystart="240" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="class_i_o_1a432cc9327612ecff154964a96dddc5f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IO::WriteContactInterfaces</definition>
        <argsstring>(void)</argsstring>
        <name>WriteContactInterfaces</name>
        <qualifiedname>IO::WriteContactInterfaces</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="55" column="8" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.cpp" bodystart="256" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="class_i_o_1ad37610b8b1f33849a19eabc0800523e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IO::WriteConfiguration</definition>
        <argsstring>(char *write_loc)</argsstring>
        <name>WriteConfiguration</name>
        <qualifiedname>IO::WriteConfiguration</qualifiedname>
        <param>
          <type>char *</type>
          <declname>write_loc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="57" column="8" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.cpp" bodystart="294" bodyend="319"/>
      </memberdef>
      <memberdef kind="function" id="class_i_o_1aeb12e52993193c4ce393894e666317e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void IO::ReadConfiguration</definition>
        <argsstring>(void)</argsstring>
        <name>ReadConfiguration</name>
        <qualifiedname>IO::ReadConfiguration</qualifiedname>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="58" column="8" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.cpp" bodystart="321" bodyend="340"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" line="36" column="1" bodyfile="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/util/inputoutput.hpp" bodystart="36" bodyend="62"/>
    <listofallmembers>
      <member refid="class_i_o_1a2a8f6731ea6d5c986396e6197d112653" prot="public" virt="non-virtual"><scope>IO</scope><name>CanWeWriteP</name></member>
      <member refid="class_i_o_1ae024e80f0f1911295b6c65dde421210b" prot="public" virt="non-virtual"><scope>IO</scope><name>CheckFile</name></member>
      <member refid="class_i_o_1ac2286feba67c8e42ad415bce03db791f" prot="public" virt="non-virtual"><scope>IO</scope><name>Chext</name></member>
      <member refid="class_i_o_1a67fe47842c1ec356580c0c642ccc9a21" prot="public" virt="non-virtual"><scope>IO</scope><name>CountSigma</name></member>
      <member refid="class_i_o_1ac7f3f1775be2ccfbc0d64ac4b90c75d5" prot="private" virt="non-virtual"><scope>IO</scope><name>dish</name></member>
      <member refid="class_i_o_1a0d0a41170659bfd7b9a118634c156df4" prot="public" virt="non-virtual"><scope>IO</scope><name>FileExistsP</name></member>
      <member refid="class_i_o_1ab849c21ba33b42ecc420618bebfecb8a" prot="public" virt="non-virtual"><scope>IO</scope><name>IO</name></member>
      <member refid="class_i_o_1a16df0d792b4a19a6060eac8f1f2c8232" prot="public" virt="non-virtual"><scope>IO</scope><name>MakeDir</name></member>
      <member refid="class_i_o_1a50fcb30dee75a12a546502e505c72947" prot="public" virt="non-virtual"><scope>IO</scope><name>OpenFileAndCheckExistence</name></member>
      <member refid="class_i_o_1a01a5db8c7125ca35fd9c1f92c32c8b35" prot="public" virt="non-virtual"><scope>IO</scope><name>OpenGZippedWriteFile</name></member>
      <member refid="class_i_o_1a0e4afbb291b9bf4e1defbdce01c05d8e" prot="public" virt="non-virtual"><scope>IO</scope><name>OpenReadFile</name></member>
      <member refid="class_i_o_1a7b8f623ecb880bc287f93f4f67500ffc" prot="public" virt="non-virtual"><scope>IO</scope><name>OpenWriteFile</name></member>
      <member refid="class_i_o_1aeb12e52993193c4ce393894e666317e8" prot="public" virt="non-virtual"><scope>IO</scope><name>ReadConfiguration</name></member>
      <member refid="class_i_o_1a402d66a4f67a12a5282922df8e81485d" prot="public" virt="non-virtual"><scope>IO</scope><name>ReadLine</name></member>
      <member refid="class_i_o_1ad37610b8b1f33849a19eabc0800523e4" prot="public" virt="non-virtual"><scope>IO</scope><name>WriteConfiguration</name></member>
      <member refid="class_i_o_1a432cc9327612ecff154964a96dddc5f7" prot="public" virt="non-virtual"><scope>IO</scope><name>WriteContactInterfaces</name></member>
      <member refid="class_i_o_1a03799e46ac01edcd75e0bb66680cd675" prot="public" virt="non-virtual"><scope>IO</scope><name>YesNoP</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
