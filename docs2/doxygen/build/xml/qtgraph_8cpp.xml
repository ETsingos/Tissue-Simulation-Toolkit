<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="qtgraph_8cpp" kind="file" language="C++">
    <compoundname>qtgraph.cpp</compoundname>
    <includes local="no">QImageWriter</includes>
    <includes local="no">QMouseEvent</includes>
    <includes local="no">QPaintEvent</includes>
    <includes local="no">QPalette</includes>
    <includes local="no">QPicture</includes>
    <includes local="no">qapplication.h</includes>
    <includes local="no">qlabel.h</includes>
    <includes local="no">qpainter.h</includes>
    <includes local="no">qwidget.h</includes>
    <includes local="no">malloc.h</includes>
    <includes refid="parameter_8hpp" local="yes">parameter.hpp</includes>
    <includes refid="qtgraph_8hpp" local="yes">qtgraph.hpp</includes>
    <includes local="no">QResizeEvent</includes>
    <includes local="no">iostream</includes>
    <includes local="no">qimage.h</includes>
    <includes local="no">qpixmap.h</includes>
    <includes local="no">qtimer.h</includes>
    <incdepgraph>
      <node id="19">
        <label>graph.hpp</label>
        <link refid="graph_8hpp_source"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/graphics/qtgraph.cpp</label>
        <link refid="qtgraph_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="20" relation="include">
        </childnode>
        <childnode refid="25" relation="include">
        </childnode>
        <childnode refid="26" relation="include">
        </childnode>
        <childnode refid="27" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>qtgraph.hpp</label>
        <link refid="qtgraph_8hpp_source"/>
        <childnode refid="19" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="21" relation="include">
        </childnode>
        <childnode refid="22" relation="include">
        </childnode>
        <childnode refid="23" relation="include">
        </childnode>
        <childnode refid="24" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>parameter.hpp</label>
        <link refid="parameter_8hpp_source"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
      </node>
      <node id="16">
        <label>parameters.hpp</label>
        <link refid="parameters_8hpp_source"/>
      </node>
      <node id="2">
        <label>QImageWriter</label>
      </node>
      <node id="3">
        <label>QMouseEvent</label>
      </node>
      <node id="4">
        <label>QPaintEvent</label>
      </node>
      <node id="5">
        <label>QPalette</label>
      </node>
      <node id="6">
        <label>QPicture</label>
      </node>
      <node id="21">
        <label>QPixmap</label>
      </node>
      <node id="22">
        <label>QResizeEvent</label>
      </node>
      <node id="23">
        <label>QWidget</label>
      </node>
      <node id="20">
        <label>iostream</label>
      </node>
      <node id="11">
        <label>malloc.h</label>
      </node>
      <node id="24">
        <label>math.h</label>
      </node>
      <node id="13">
        <label>ostream</label>
      </node>
      <node id="17">
        <label>parameter.tpp</label>
      </node>
      <node id="7">
        <label>qapplication.h</label>
      </node>
      <node id="25">
        <label>qimage.h</label>
      </node>
      <node id="8">
        <label>qlabel.h</label>
      </node>
      <node id="9">
        <label>qpainter.h</label>
      </node>
      <node id="26">
        <label>qpixmap.h</label>
      </node>
      <node id="27">
        <label>qtimer.h</label>
      </node>
      <node id="10">
        <label>qwidget.h</label>
      </node>
      <node id="14">
        <label>string</label>
      </node>
      <node id="15">
        <label>vector</label>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"></highlight></codeline>
<codeline lineno="3"><highlight class="comment">Copyright<sp/>1996-2006<sp/>Roeland<sp/>Merks</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment">This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>Tissue<sp/>Simulation<sp/>Toolkit.</highlight></codeline>
<codeline lineno="6"><highlight class="comment"></highlight></codeline>
<codeline lineno="7"><highlight class="comment">Tissue<sp/>Simulation<sp/>Toolkit<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute</highlight></codeline>
<codeline lineno="8"><highlight class="comment">it<sp/>and/or<sp/>modify<sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public</highlight></codeline>
<codeline lineno="9"><highlight class="comment">License<sp/>as<sp/>published<sp/>by<sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either</highlight></codeline>
<codeline lineno="10"><highlight class="comment">version<sp/>2<sp/>of<sp/>the<sp/>License,<sp/>or<sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="11"><highlight class="comment"></highlight></codeline>
<codeline lineno="12"><highlight class="comment">Tissue<sp/>Simulation<sp/>Toolkit<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will</highlight></codeline>
<codeline lineno="13"><highlight class="comment">be<sp/>useful,<sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied</highlight></codeline>
<codeline lineno="14"><highlight class="comment">warranty<sp/>of<sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.</highlight></codeline>
<codeline lineno="15"><highlight class="comment">See<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="16"><highlight class="comment"></highlight></codeline>
<codeline lineno="17"><highlight class="comment">You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="18"><highlight class="comment">along<sp/>with<sp/>Tissue<sp/>Simulation<sp/>Toolkit;<sp/>if<sp/>not,<sp/>write<sp/>to<sp/>the<sp/>Free</highlight></codeline>
<codeline lineno="19"><highlight class="comment">Software<sp/>Foundation,<sp/>Inc.,<sp/>51<sp/>Franklin<sp/>St,<sp/>Fifth<sp/>Floor,<sp/>Boston,<sp/>MA</highlight></codeline>
<codeline lineno="20"><highlight class="comment">02110-1301<sp/>USA</highlight></codeline>
<codeline lineno="21"><highlight class="comment"></highlight></codeline>
<codeline lineno="22"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QImageWriter&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QMouseEvent&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPaintEvent&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPalette&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QPicture&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qapplication.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qlabel.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qpainter.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qwidget.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Q_OS_DARWIN</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;malloc.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;parameter.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;qtgraph.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;QResizeEvent&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qimage.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qpixmap.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;qtimer.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="44"><highlight class="normal">QtGraphics::QtGraphics(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xfield,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yfield,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*movie_file)<sp/>{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>mag<sp/>=<sp/>1.;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(movie_file)<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;QtGraphics<sp/>in<sp/>qtgraph.cc:<sp/>Sorry,<sp/>movie<sp/>writing<sp/>not<sp/>(yet)<sp/>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;implemented\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/>Resize(xfield,<sp/>yfield);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Save<sp/>what<sp/>has<sp/>been<sp/>drawn<sp/>to<sp/>the<sp/>QPicture</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>object<sp/>to<sp/>a<sp/>file,<sp/>called<sp/>file.pic.<sp/>When</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>have<sp/>run<sp/>this<sp/>program,<sp/>a<sp/>file<sp/>with<sp/>this</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>name<sp/>will<sp/>be<sp/>created<sp/>(in<sp/>the<sp/>directory<sp/>which</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>this<sp/>program<sp/>is<sp/>located<sp/>in).</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/><sp/><sp/>pic.save(<sp/>&quot;file.png&quot;<sp/>);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>colors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/>pens<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QPen[256];</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/>ReadColorTable(pens);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>background<sp/>color<sp/>of<sp/>widget<sp/>(i.e.<sp/>the<sp/>color<sp/>outside<sp/>the<sp/>Pixmap<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>will<sp/>be<sp/>shown<sp/>after<sp/>resizing<sp/>the<sp/>window)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/>QPalette<sp/>pal<sp/>=<sp/>palette();</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/>pal.setColor(backgroundRole(),<sp/>pens[0].<ref refid="structcolor" kindref="compound">color</ref>());</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/>setPalette(pal);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><ref refid="structtimer" kindref="compound">timer</ref><sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QTimer(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>connect(<ref refid="structtimer" kindref="compound">timer</ref>,<sp/>SIGNAL(timeout()),<sp/>SLOT(TimeStepWrap()));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><ref refid="structtimer" kindref="compound">timer</ref>-&gt;start(0);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/>mouse_button<sp/>=<sp/>Qt::NoButton;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/>pixmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QPixmap(xfield,<sp/>yfield);</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>picture<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QPainter();</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/>key<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal">QtGraphics::~QtGraphics()<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cout<sp/>&lt;&lt;<sp/>&quot;DESTROY<sp/>WIDGET\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>picture;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>delete<sp/>paint2;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>pixmap;</highlight></codeline>
<codeline lineno="85"><highlight class="normal">}</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_qt_graphics_1ad02ff8ba69d13148f79afd516563b822" kindref="member">QtGraphics::Point</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colour,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/>picture-&gt;setPen(pens[colour]);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/>picture-&gt;drawPoint(i,<sp/>j);</highlight></codeline>
<codeline lineno="90"><highlight class="normal">}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGraphics::PointAlpha(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>alpha,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/>picture-&gt;setPen(QPen(QColor(0,<sp/>0,<sp/>0,<sp/>alpha)));</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/>picture-&gt;drawPoint(i,<sp/>j);</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGraphics::Rectangle(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colour,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j)<sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(colour<sp/>&gt;<sp/>col_num)</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/>picture-&gt;fillRect(QRect(i<sp/>*<sp/>2,<sp/>j<sp/>*<sp/>2,<sp/>2,<sp/>2),<sp/>pens[colour].<ref refid="structcolor" kindref="compound">color</ref>());</highlight></codeline>
<codeline lineno="102"><highlight class="normal">}</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_qt_graphics_1afd6200f3cbb931d811791f7683425f84" kindref="member">QtGraphics::BeginScene</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/>picture-&gt;begin(pixmap);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>picture-&gt;scale(mag);</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_qt_graphics_1a937c2227c5d121f56f9651d3aeccc27a" kindref="member">QtGraphics::EndScene</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>picture-&gt;end();</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/>update();</highlight></codeline>
<codeline lineno="112"><highlight class="normal">}</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_qt_graphics_1a37c6b70205d11f8c977860af0b641dec" kindref="member">QtGraphics::Line</ref>(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colour)<sp/>{</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/>picture-&gt;setPen(pens[colour]);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/>picture-&gt;drawLine(x1<sp/>*<sp/>2,<sp/>y1<sp/>*<sp/>2,<sp/>x2<sp/>*<sp/>2,<sp/>y2<sp/>*<sp/>2);</highlight></codeline>
<codeline lineno="117"><highlight class="normal">}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGraphics::ReadColorTable(QPen<sp/>*pens)<sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_parameter" kindref="compound">Parameter</ref><sp/>par;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/>FILE<sp/>*fpc;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((fpc<sp/>=<sp/>fopen(par.colortable.c_str(),<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">))<sp/>==<sp/>NULL)<sp/>{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*message<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[2000];</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(message<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Memory<sp/>panic<sp/>in<sp/>QtGraphics::ReadColorTable\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>sprintf(message,<sp/></highlight><highlight class="stringliteral">&quot;QtGraphics::ReadColorTable:<sp/>Colormap<sp/>&apos;%s&apos;<sp/>not<sp/>found.&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>par.colortable.c_str());</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(message);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>r,<sp/>g,<sp/>b,<sp/>a;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res<sp/>=<sp/>EOF;</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/>col_num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(fscanf(fpc,<sp/></highlight><highlight class="stringliteral">&quot;%d&quot;</highlight><highlight class="normal">,<sp/>&amp;i)<sp/>!=<sp/>EOF<sp/>||<sp/>res<sp/>==<sp/>EOF)<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>res<sp/>=<sp/>fscanf(fpc,<sp/></highlight><highlight class="stringliteral">&quot;%d<sp/>%d<sp/>%d<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>&amp;r,<sp/>&amp;g,<sp/>&amp;b,<sp/>&amp;a);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>QPen<sp/>p(QColor(r,<sp/>g,<sp/>b,<sp/>a));</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>pens[i]<sp/>=<sp/>p;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/>col_num++;</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/>fclose(fpc);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGraphics::Arrow(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y1,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>x2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>y2,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colour)<sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/>picture-&gt;setPen(pens[colour]);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/>picture-&gt;drawLine(x1,<sp/>y1,<sp/>x2,<sp/>y2);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b1<sp/>=<sp/>(int)2<sp/>*<sp/>sqrt(2)<sp/>*<sp/>(x1<sp/>-<sp/>x2<sp/>-<sp/>y1<sp/>+<sp/>y2)<sp/>/</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sqrt(pow(x2<sp/>-<sp/>x1,<sp/>2)<sp/>+<sp/>pow(y2<sp/>-<sp/>y1,<sp/>2))));</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>b2<sp/>=<sp/>(int)2<sp/>*<sp/>sqrt(2)<sp/>*<sp/>(x1<sp/>-<sp/>x2<sp/>+<sp/>y1<sp/>-<sp/>y2)<sp/>/</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sqrt(pow(x2<sp/>-<sp/>x1,<sp/>2)<sp/>+<sp/>pow(y2<sp/>-<sp/>y1,<sp/>2))));</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c1<sp/>=<sp/>(int)2<sp/>*<sp/>sqrt(2)<sp/>*<sp/>(x1<sp/>-<sp/>x2<sp/>+<sp/>y1<sp/>-<sp/>y2)<sp/>/</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sqrt(pow(x2<sp/>-<sp/>x1,<sp/>2)<sp/>+<sp/>pow(y2<sp/>-<sp/>y1,<sp/>2))));</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c2<sp/>=<sp/>(int)2<sp/>*<sp/>sqrt(2)<sp/>*<sp/>(-x1<sp/>+<sp/>x2<sp/>+<sp/>y1<sp/>-<sp/>y2)<sp/>/</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((sqrt(pow(x2<sp/>-<sp/>x1,<sp/>2)<sp/>+<sp/>pow(y2<sp/>-<sp/>y1,<sp/>2))));</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/>picture-&gt;drawLine(x2,<sp/>y2,<sp/>x2<sp/>+<sp/>b1,<sp/>y2<sp/>+<sp/>b2);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/>picture-&gt;drawLine(x2,<sp/>y2,<sp/>x2<sp/>+<sp/>c1,<sp/>y2<sp/>+<sp/>c2);</highlight></codeline>
<codeline lineno="157"><highlight class="normal">}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGraphics::Resize(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>xfield,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>yfield)<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/>resize(xfield<sp/>*<sp/>mag,<sp/>yfield<sp/>*<sp/>mag);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>init_size_x<sp/>=<sp/>xfield;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/>init_size_y<sp/>=<sp/>yfield;</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xfield<sp/>&gt;<sp/>yfield)<sp/>{</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>mag<sp/>=<sp/>(double)yfield<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)init_size_y;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>mag<sp/>=<sp/>(double)xfield<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)init_size_x;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/>pixmap<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>QPixmap(xfield,<sp/>yfield);</highlight></codeline>
<codeline lineno="170"><highlight class="normal">}</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Of<sp/>course,<sp/>we<sp/>also<sp/>want<sp/>to<sp/>see<sp/>the<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment">//<sp/>on<sp/>screen.<sp/>This<sp/>is<sp/>taken<sp/>care<sp/>of<sp/>by<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGraphics::paintEvent(QPaintEvent<sp/>*)<sp/>{</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/>QPainter<sp/>win(</highlight><highlight class="keyword">this</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/>win.scale(mag,<sp/>mag);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/>win.drawPixmap(QPoint(0,<sp/>0),<sp/>*pixmap);</highlight></codeline>
<codeline lineno="178"><highlight class="normal">}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGraphics::mousePressEvent(QMouseEvent<sp/>*e)<sp/>{</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/>mouse_x<sp/>=<sp/>e-&gt;pos().x();</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/>mouse_y<sp/>=<sp/>e-&gt;pos().y();</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/>mouse_button<sp/>=<sp/>e-&gt;button();</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGraphics::mouseReleaseEvent(QMouseEvent<sp/>*)<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/>mouse_button<sp/>=<sp/>Qt::NoButton;</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGraphics::keyPressEvent(QKeyEvent<sp/>*e)<sp/>{<sp/>key<sp/>=<sp/>e-&gt;key();<sp/>}</highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGraphics::keyReleaseEvent(QKeyEvent<sp/>*e)<sp/>{<sp/>key<sp/>=<sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGraphics::TimeStepWrap(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>t<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><ref refid="class_qt_graphics_1a6c3e54b681404b550417628910557ade" kindref="member">TimeStep</ref>();</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!paused)</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>t++;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>check<sp/>number<sp/>of<sp/>timesteps</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="class_parameter" kindref="compound">Parameter</ref><sp/>par;</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(t<sp/>==<sp/>par.mcs)<sp/>{</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>emit<sp/>SimulationDone();</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="204"><highlight class="normal">}</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="class_qt_graphics_1a497ca587ebbac0336589066147de3ab5" kindref="member">QtGraphics::GetXYCoo</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*X,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*Y)<sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/>*X<sp/>=<sp/>mouse_x;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/>*Y<sp/>=<sp/>mouse_y;</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(mouse_button<sp/>!=<sp/>Qt::NoButton)<sp/>{</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(mouse_button)<sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::LeftButton:</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::MiddleButton:</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>2;</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>Qt::RightButton:</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>3;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(key<sp/>!=<sp/>Qt::Key_No)<sp/>{</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>key;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_qt_graphics_1a2b3ae718854987c2746f8d723fbf3fa6" kindref="member">QtGraphics::Write</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fname,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quality)<sp/>{</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(fname<sp/>==<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">throw</highlight><highlight class="normal">(</highlight><highlight class="stringliteral">&quot;QtGraphics::Write:<sp/>empty<sp/>filename!\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>replay<sp/>the<sp/>picture<sp/>on<sp/>image</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>write<sp/>it<sp/>to<sp/>fname</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/>QString<sp/>imname(fname);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>file<sp/>extension<sp/>to<sp/>infer<sp/>desired<sp/>image<sp/>format</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/>QString<sp/>extension_str<sp/>=<sp/>imname.section(</highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal">,<sp/>-1).toUpper();</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*extension<sp/>=<sp/>extension_str.toLocal8Bit().constData();</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>cerr<sp/>&lt;&lt;<sp/>&quot;Extension<sp/>is:<sp/>&quot;<sp/>&lt;&lt;<sp/>extension<sp/>&lt;&lt;<sp/>&quot;\n&quot;;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pixmap-&gt;save(imname,<sp/>extension,<sp/>quality))<sp/>{</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Image<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>imname.toLocal8Bit().constData()</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>was<sp/>succesfully<sp/>written.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Image<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>imname.toLocal8Bit().constData()</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>could<sp/>not<sp/>be<sp/>written.\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>QList&lt;QByteArray&gt;<sp/>fmt<sp/>=<sp/>QImageWriter::supportedImageFormats();</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Please<sp/>choose<sp/>one<sp/>of<sp/>the<sp/>following<sp/>formats:<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(QList&lt;QByteArray&gt;::ConstIterator<sp/>f<sp/>=<sp/>fmt.begin();<sp/>f<sp/>!=<sp/>fmt.end();</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>f++)<sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/>f-&gt;constData()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/>cerr<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="257"><highlight class="normal">}</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>QtGraphics::resizeEvent(QResizeEvent<sp/>*event)<sp/>{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/>qreal<sp/>new_width<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;size().width();</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/>qreal<sp/>new_height<sp/>=<sp/></highlight><highlight class="keyword">event</highlight><highlight class="normal">-&gt;size().height();</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(new_width<sp/>&gt;<sp/>new_height)<sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/>mag<sp/>=<sp/>(double)new_height<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)init_size_y;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/>mag<sp/>=<sp/>(double)new_width<sp/>/<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)init_size_x;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/Users/koenkeijzer/Documents/CPM/Tissue-Simulation-Toolkit/src/graphics/qtgraph.cpp"/>
  </compounddef>
</doxygen>
