// Copyright (c) 2005-2016 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef MULTI_CELL_DS_SIMPL_HPP
#define MULTI_CELL_DS_SIMPL_HPP

#include <xsde/cxx/pre.hxx>

// Begin prologue.
//
//
// End prologue.

#ifndef XSDE_OMIT_SAGGR
#  define XSDE_OMIT_SAGGR
#  define MULTI_CELL_DS_SIMPL_HPP_CLEAR_OMIT_SAGGR
#endif

#include "MultiCellDS-sskel.hpp"

#include <xsde/cxx/stack.hxx>

#include "common-simpl.hpp"

#include "metadata-simpl.hpp"

#include "cell_line-simpl.hpp"

#include "cell-simpl.hpp"

#include "microenvironment-simpl.hpp"

class MCDS_type_simpl: public MCDS_type_sskel
{
  public:
  MCDS_type_simpl ();

  virtual void
  pre (const ::MCDS_type&);

  virtual void
  _serialize_content ();

  public:
  const ::MCDS_type* MCDS_type_simpl_state_;
};

class MultiCellDS_simpl: public MultiCellDS_sskel
{
  public:
  virtual void
  pre (const ::MultiCellDS&);

  // Attributes.
  //
  virtual bool
  version_present ();

  virtual ::std::string
  version ();

  virtual bool
  type_present ();

  virtual const ::MCDS_type&
  type ();

  // Elements.
  //
  virtual bool
  cell_line_next ();

  virtual const ::cell_line::cell_line&
  cell_line ();

  virtual bool
  metadata_present ();

  virtual const ::metadata::metadata&
  metadata ();

  virtual bool
  microenvironment_present ();

  virtual const ::microenvironment::microenvironment&
  microenvironment ();

  virtual bool
  cellular_information_present ();

  virtual const ::cell::cellular_information&
  cellular_information ();

  public:
  struct MultiCellDS_simpl_state
  {
    const ::MultiCellDS* MultiCellDS_;
    ::MultiCellDS::cell_line_const_iterator cell_line_;
    ::MultiCellDS::cell_line_const_iterator cell_line_end_;
  };

  MultiCellDS_simpl_state MultiCellDS_simpl_state_;
};

#ifdef MULTI_CELL_DS_SIMPL_HPP_CLEAR_OMIT_SAGGR
#  undef XSDE_OMIT_SAGGR
#endif

#ifndef XSDE_OMIT_SAGGR

#include <xsde/cxx/hybrid/serializer-map.hxx>

// Serializer aggregate for the MultiCellDS element.
//
class MultiCellDS_saggr
{
  public:
  MultiCellDS_saggr ();

  void
  pre (const ::MultiCellDS& x)
  {
    this->MultiCellDS_s_.pre (x);
  }

  void
  post ()
  {
    this->MultiCellDS_s_.post ();
  }

  ::MultiCellDS_simpl&
  root_serializer ()
  {
    return this->MultiCellDS_s_;
  }

  static const char*
  root_name ();

  static const char*
  root_namespace ();

  void
  reset ()
  {
    this->MultiCellDS_s_._reset ();
  }

  static bool
  polymorphic ()
  {
    return true;
  }

  public:
  ::xml_schema::unsigned_short_simpl unsigned_short_s_;
  ::xml_schema::int_simpl int_s_;
  ::xml_schema::unsigned_int_simpl unsigned_int_s_;
  ::xml_schema::unsigned_long_simpl unsigned_long_s_;
  ::xml_schema::boolean_simpl boolean_s_;
  ::xml_schema::double_simpl double_s_;
  ::xml_schema::string_simpl string_s_;
  ::xml_schema::date_time_simpl date_time_s_;
  ::mesh::mesh_simpl mesh_s_;
  ::basement::basement_membrane_simpl basement_membrane_s_;
  ::basement::nodes_simpl nodes_s_;
  ::variables::material_amount_simpl material_amount_s_;
  ::metadata::data_origin_simpl data_origin_s_;
  ::common::units_decimal_nonnegative_simpl units_decimal_nonnegative_s_;
  ::common::units_unsignedShort_simpl units_unsignedShort_s_;
  ::common::units_fraction_simpl units_fraction_s_;
  ::common::custom_simpl custom_s_;
  ::mesh::node_simpl node_s_;
  ::basement::faces_simpl faces_s_;
  ::mesh::int_list_xpath_simpl int_list_xpath_s_;
  ::mesh::bounding_box_simpl bounding_box_s_;
  ::mesh::list_of_voxels_simpl list_of_voxels_s_;
  ::metadata::rights_simpl rights_s_;
  ::metadata::license_simpl license_s_;
  ::metadata::LicenseDocument_simpl LicenseDocument_s_;
  ::metadata::metadata_simpl metadata_s_;
  ::mesh::voxel_simpl voxel_s_;
  ::common::unsigned_int_list_simpl unsigned_int_list_s_;
  ::common::data_storage_formats_simpl data_storage_formats_s_;
  ::common::units_double_list_simpl units_double_list_s_;
  ::common::two_doubles_simpl two_doubles_s_;
  ::metadata::orcid_identifier_simpl orcid_identifier_s_;
  ::metadata::orcid_person_simpl orcid_person_s_;
  ::metadata::classification_simpl classification_s_;
  ::metadata::data_analysis_simpl data_analysis_s_;
  ::metadata::software_simpl software_s_;
  ::metadata::cell_origin_simpl cell_origin_s_;
  ::microenvironment::domain_simpl domain_s_;
  ::metadata::species_simpl species_s_;
  ::metadata::disease_simpl disease_s_;
  ::metadata::patient_derived_simpl patient_derived_s_;
  ::metadata::MultiCellDB_simpl MultiCellDB_s_;
  ::common::threshold_type_simpl threshold_type_s_;
  ::metadata::data_origins_simpl data_origins_s_;
  ::metadata::URL_simpl URL_s_;
  ::metadata::curation_simpl curation_s_;
  ::metadata::citation_simpl citation_s_;
  ::basement::egdes_simpl egdes_s_;
  ::basement::basement_edge_simpl basement_edge_s_;
  ::basement::basement_face_simpl basement_face_s_;
  ::variables::conditions_simpl conditions_s_;
  ::variables::system_simpl system_s_;
  ::variables::data_vector_simpl data_vector_s_;
  ::variables::data_simpl data_s_;
  ::variables::list_of_variables_simpl list_of_variables_s_;
  ::variables::transition_threshold_simpl transition_threshold_s_;
  ::phenotype_common::indentation_observation_simpl indentation_observation_s_;
  ::phenotype_common::motility_simpl motility_s_;
  ::phenotype_common::adhesion_simpl adhesion_s_;
  ::phenotype_common::mechanics_simpl mechanics_s_;
  ::phenotype_common::friction_simpl friction_s_;
  ::phenotype_common::rolling_observation_simpl rolling_observation_s_;
  ::variables::physical_conditions_simpl physical_conditions_s_;
  ::variables::physical_parameter_set_simpl physical_parameter_set_s_;
  ::variables::experimental_conditions_simpl experimental_conditions_s_;
  ::variables::variable_simpl variable_s_;
  ::variables::amount_type_simpl amount_type_s_;
  ::common::units_decimal_simpl units_decimal_s_;
  ::phenotype_common::motility_types_simpl motility_types_s_;
  ::phenotype_common::timescale_simpl timescale_s_;
  ::phenotype_common::transport_processes_simpl transport_processes_s_;
  ::phenotype_common::transport_variable_simpl transport_variable_s_;
  ::phenotype_common::geometrical_parameters_simpl geometrical_parameters_s_;
  ::phenotype_common::lengths_simpl lengths_s_;
  ::phenotype_common::areas_3D_simpl areas_3D_s_;
  ::phenotype_common::areas_2D_simpl areas_2D_s_;
  ::phenotype_common::volumes_simpl volumes_s_;
  ::phenotype_common::geometrical_properties_simpl geometrical_properties_s_;
  ::phenotype_common::cross_section_simpl cross_section_s_;
  ::phenotype_common::mass_simpl mass_s_;
  ::vascular::vascular_node_simpl vascular_node_s_;
  ::vascular::list_of_vascular_nodes_simpl list_of_vascular_nodes_s_;
  ::vascular::boundary_node_simpl boundary_node_s_;
  ::vascular::list_of_boundary_nodes_simpl list_of_boundary_nodes_s_;
  ::vascular::boundary_conditions_simpl boundary_conditions_s_;
  ::vascular::boundary_condition_simpl boundary_condition_s_;
  ::vascular::boundary_type_simpl boundary_type_s_;
  ::vascular::vascular_segments_simpl vascular_segments_s_;
  ::vascular::vascular_segment_simpl vascular_segment_s_;
  ::vascular::endpoint_simpl endpoint_s_;
  ::vascular::surface_properties_simpl surface_properties_s_;
  ::vascular::volume_properties_simpl volume_properties_s_;
  ::vascular::vascular_network_simpl vascular_network_s_;
  ::microenvironment::microenvironment_simpl microenvironment_s_;
  ::pkpd::response_observation_simpl response_observation_s_;
  ::pkpd::PKPD_simpl PKPD_s_;
  ::phenotype_base::phenotype_base_simpl phenotype_base_s_;
  ::phenotype_base::expected_timescale_simpl expected_timescale_s_;
  ::phenotype_base::cell_parts_simpl cell_parts_s_;
  ::phenotype_base::phenotype_type_simpl phenotype_type_s_;
  ::cell_cycle::death_rate_type_simpl death_rate_type_s_;
  ::cell_cycle::cell_cycle_arrest_simpl cell_cycle_arrest_s_;
  ::cell_cycle::transition_simpl transition_s_;
  ::cell_cycle::cell_cycle_phase_simpl cell_cycle_phase_s_;
  ::cell_cycle::summary_elements_simpl summary_elements_s_;
  ::cell_cycle::cell_cycle_simpl cell_cycle_s_;
  ::cell_cycle::cell_death_simpl cell_death_s_;
  ::cell_cycle::death_type_simpl death_type_s_;
  ::cell_cycle::arrest_condition_simpl arrest_condition_s_;
  ::cell_cycle::arrest_type_simpl arrest_type_s_;
  ::pkpd::therapy_simpl therapy_s_;
  ::pkpd::pharmacodynamics_simpl pharmacodynamics_s_;
  ::pkpd::therapy_measurement_set_simpl therapy_measurement_set_s_;
  ::pkpd::response_simpl response_s_;
  ::pkpd::pharmacokinetics_simpl pharmacokinetics_s_;
  ::pkpd::drug_dose_simpl drug_dose_s_;
  ::pkpd::dose_simpl dose_s_;
  ::pkpd::drug_pk_simpl drug_pk_s_;
  ::phenotype::phenotype_simpl phenotype_s_;
  ::phenotype_dataset::phenotype_dataset_simpl phenotype_dataset_s_;
  ::cell_line::cell_line_simpl cell_line_s_;
  ::cell_line::DCLs_simpl DCLs_s_;
  ::state::list_of_adhered_cells_simpl list_of_adhered_cells_s_;
  ::cell::population_definition_simpl population_definition_s_;
  ::cell::population_definitions_simpl population_definitions_s_;
  ::cell::cell_simpl cell_s_;
  ::cell::cell_population_individual_simpl cell_population_individual_s_;
  ::cell::cell_population_aggregate_simpl cell_population_aggregate_s_;
  ::cell::population_vector_simpl population_vector_s_;
  ::cell::cell_populations_simpl cell_populations_s_;
  ::cell::cellular_information_simpl cellular_information_s_;
  ::MultiCellDS_simpl MultiCellDS_s_;
  ::MCDS_type_simpl MCDS_type_s_;
  ::state::state_simpl state_s_;
  ::state::cell_parts_simpl cell_parts_s1_;
  ::state::orientation_formalism_simpl orientation_formalism_s_;
  ::state::phase_simpl phase_s_;
  ::state::adhered_cell_simpl adhered_cell_s_;
  ::state::phase_name_simpl phase_name_s_;
  ::state::orientation_simpl orientation_s_;

  ::xsde::cxx::hybrid::serializer_map_impl serializer_map_;
  ::xsde::cxx::hybrid::serializer_map_impl::entry serializer_map_entries_[1UL];
};

#endif // XSDE_OMIT_SAGGR

// Begin epilogue.
//
//
// End epilogue.

#include <xsde/cxx/post.hxx>

#endif // MULTI_CELL_DS_SIMPL_HPP
