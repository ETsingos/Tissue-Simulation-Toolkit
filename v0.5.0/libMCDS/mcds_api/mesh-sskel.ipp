// Copyright (c) 2005-2016 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

namespace mesh
{
  // bounding_box_sskel
  //

  inline
  void bounding_box_sskel::
  type_serializer (::xml_schema::string_sskel& type)
  {
    this->type_serializer_ = &type;
  }

  inline
  void bounding_box_sskel::
  serializers (::xml_schema::double_sskel& double_list_sskel_item,
               ::xml_schema::string_sskel& units,
               ::xml_schema::string_sskel& measurement_type,
               ::xml_schema::double_sskel& uncertainty,
               ::xml_schema::double_sskel& negative_uncertainty,
               ::xml_schema::double_sskel& positive_uncertainty,
               ::xml_schema::double_sskel& uncertainty_percentage,
               ::xml_schema::double_sskel& negative_uncertainty_percentage,
               ::xml_schema::double_sskel& positive_uncertainty_percentage,
               ::xml_schema::double_sskel& median,
               ::xml_schema::double_sskel& standard_deviation,
               ::common::two_doubles_sskel& interquartile_range,
               ::common::two_doubles_sskel& range,
               ::xml_schema::double_sskel& min,
               ::xml_schema::double_sskel& max,
               ::xml_schema::double_sskel& standard_error,
               ::xml_schema::double_sskel& standard_error_of_the_mean,
               ::xml_schema::int_sskel& number_obs,
               ::xml_schema::double_sskel& skewnesss,
               ::xml_schema::double_sskel& kurtosis,
               ::xml_schema::string_sskel& type)
  {
    this->_xsde_item_ = &double_list_sskel_item;
    this->units_serializer_ = &units;
    this->measurement_type_serializer_ = &measurement_type;
    this->uncertainty_serializer_ = &uncertainty;
    this->negative_uncertainty_serializer_ = &negative_uncertainty;
    this->positive_uncertainty_serializer_ = &positive_uncertainty;
    this->uncertainty_percentage_serializer_ = &uncertainty_percentage;
    this->negative_uncertainty_percentage_serializer_ = &negative_uncertainty_percentage;
    this->positive_uncertainty_percentage_serializer_ = &positive_uncertainty_percentage;
    this->median_serializer_ = &median;
    this->standard_deviation_serializer_ = &standard_deviation;
    this->interquartile_range_serializer_ = &interquartile_range;
    this->range_serializer_ = &range;
    this->min_serializer_ = &min;
    this->max_serializer_ = &max;
    this->standard_error_serializer_ = &standard_error;
    this->standard_error_of_the_mean_serializer_ = &standard_error_of_the_mean;
    this->number_obs_serializer_ = &number_obs;
    this->skewnesss_serializer_ = &skewnesss;
    this->kurtosis_serializer_ = &kurtosis;
    this->type_serializer_ = &type;
  }

  inline
  bounding_box_sskel::
  bounding_box_sskel (::common::units_double_list_sskel* tiein)
  : ::common::units_double_list_sskel (tiein, 0),
    bounding_box_impl_ (0),
    type_serializer_ (0)
  {
  }

  inline
  bounding_box_sskel::
  bounding_box_sskel (bounding_box_sskel* impl, void*)
  : ::common::units_double_list_sskel (impl, 0),
    bounding_box_impl_ (impl),
    type_serializer_ (0)
  {
  }

  // mesh_sskel
  //

  inline
  void mesh_sskel::
  type_serializer (::xml_schema::string_sskel& type)
  {
    this->type_serializer_ = &type;
  }

  inline
  void mesh_sskel::
  uniform_serializer (::xml_schema::boolean_sskel& uniform)
  {
    this->uniform_serializer_ = &uniform;
  }

  inline
  void mesh_sskel::
  regular_serializer (::xml_schema::boolean_sskel& regular)
  {
    this->regular_serializer_ = &regular;
  }

  inline
  void mesh_sskel::
  units_serializer (::xml_schema::string_sskel& units)
  {
    this->units_serializer_ = &units;
  }

  inline
  void mesh_sskel::
  bounding_box_serializer (::mesh::bounding_box_sskel& s)
  {
    this->bounding_box_serializer_ = &s;
  }

  inline
  void mesh_sskel::
  bounding_box_serializer (::xml_schema::serializer_map& m)
  {
    this->bounding_box_serializer_map_ = &m;
  }

  inline
  void mesh_sskel::
  x_coordinates_serializer (::common::units_double_list_sskel& s)
  {
    this->x_coordinates_serializer_ = &s;
  }

  inline
  void mesh_sskel::
  x_coordinates_serializer (::xml_schema::serializer_map& m)
  {
    this->x_coordinates_serializer_map_ = &m;
  }

  inline
  void mesh_sskel::
  y_coordinates_serializer (::common::units_double_list_sskel& s)
  {
    this->y_coordinates_serializer_ = &s;
  }

  inline
  void mesh_sskel::
  y_coordinates_serializer (::xml_schema::serializer_map& m)
  {
    this->y_coordinates_serializer_map_ = &m;
  }

  inline
  void mesh_sskel::
  z_coordinates_serializer (::common::units_double_list_sskel& s)
  {
    this->z_coordinates_serializer_ = &s;
  }

  inline
  void mesh_sskel::
  z_coordinates_serializer (::xml_schema::serializer_map& m)
  {
    this->z_coordinates_serializer_map_ = &m;
  }

  inline
  void mesh_sskel::
  voxels_serializer (::mesh::list_of_voxels_sskel& s)
  {
    this->voxels_serializer_ = &s;
  }

  inline
  void mesh_sskel::
  voxels_serializer (::xml_schema::serializer_map& m)
  {
    this->voxels_serializer_map_ = &m;
  }

  inline
  void mesh_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void mesh_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void mesh_sskel::
  serializers (::xml_schema::string_sskel& type,
               ::xml_schema::boolean_sskel& uniform,
               ::xml_schema::boolean_sskel& regular,
               ::xml_schema::string_sskel& units,
               ::mesh::bounding_box_sskel& bounding_box,
               ::common::units_double_list_sskel& x_coordinates,
               ::common::units_double_list_sskel& y_coordinates,
               ::common::units_double_list_sskel& z_coordinates,
               ::mesh::list_of_voxels_sskel& voxels,
               ::common::custom_sskel& custom)
  {
    this->type_serializer_ = &type;
    this->uniform_serializer_ = &uniform;
    this->regular_serializer_ = &regular;
    this->units_serializer_ = &units;
    this->bounding_box_serializer_ = &bounding_box;
    this->x_coordinates_serializer_ = &x_coordinates;
    this->y_coordinates_serializer_ = &y_coordinates;
    this->z_coordinates_serializer_ = &z_coordinates;
    this->voxels_serializer_ = &voxels;
    this->custom_serializer_ = &custom;
  }

  inline
  void mesh_sskel::
  serializer_maps (::xml_schema::serializer_map& bounding_box,
                   ::xml_schema::serializer_map& x_coordinates,
                   ::xml_schema::serializer_map& y_coordinates,
                   ::xml_schema::serializer_map& z_coordinates,
                   ::xml_schema::serializer_map& voxels,
                   ::xml_schema::serializer_map& custom)
  {
    this->bounding_box_serializer_map_ = &bounding_box;
    this->x_coordinates_serializer_map_ = &x_coordinates;
    this->y_coordinates_serializer_map_ = &y_coordinates;
    this->z_coordinates_serializer_map_ = &z_coordinates;
    this->voxels_serializer_map_ = &voxels;
    this->custom_serializer_map_ = &custom;
  }

  inline
  mesh_sskel::
  mesh_sskel ()
  : mesh_impl_ (0),
    type_serializer_ (0),
    uniform_serializer_ (0),
    regular_serializer_ (0),
    units_serializer_ (0),
    bounding_box_serializer_ (0),
    bounding_box_serializer_map_ (0),
    x_coordinates_serializer_ (0),
    x_coordinates_serializer_map_ (0),
    y_coordinates_serializer_ (0),
    y_coordinates_serializer_map_ (0),
    z_coordinates_serializer_ (0),
    z_coordinates_serializer_map_ (0),
    voxels_serializer_ (0),
    voxels_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  mesh_sskel::
  mesh_sskel (mesh_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    mesh_impl_ (impl),
    type_serializer_ (0),
    uniform_serializer_ (0),
    regular_serializer_ (0),
    units_serializer_ (0),
    bounding_box_serializer_ (0),
    bounding_box_serializer_map_ (0),
    x_coordinates_serializer_ (0),
    x_coordinates_serializer_map_ (0),
    y_coordinates_serializer_ (0),
    y_coordinates_serializer_map_ (0),
    z_coordinates_serializer_ (0),
    z_coordinates_serializer_map_ (0),
    voxels_serializer_ (0),
    voxels_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // list_of_voxels_sskel
  //

  inline
  void list_of_voxels_sskel::
  type_serializer (::common::data_storage_formats_sskel& type)
  {
    this->type_serializer_ = &type;
  }

  inline
  void list_of_voxels_sskel::
  filename_serializer (::xml_schema::string_sskel& s)
  {
    this->filename_serializer_ = &s;
  }

  inline
  void list_of_voxels_sskel::
  filename_serializer (::xml_schema::serializer_map& m)
  {
    this->filename_serializer_map_ = &m;
  }

  inline
  void list_of_voxels_sskel::
  voxel_serializer (::mesh::voxel_sskel& s)
  {
    this->voxel_serializer_ = &s;
  }

  inline
  void list_of_voxels_sskel::
  voxel_serializer (::xml_schema::serializer_map& m)
  {
    this->voxel_serializer_map_ = &m;
  }

  inline
  void list_of_voxels_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void list_of_voxels_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void list_of_voxels_sskel::
  serializers (::common::data_storage_formats_sskel& type,
               ::xml_schema::string_sskel& filename,
               ::mesh::voxel_sskel& voxel,
               ::common::custom_sskel& custom)
  {
    this->type_serializer_ = &type;
    this->filename_serializer_ = &filename;
    this->voxel_serializer_ = &voxel;
    this->custom_serializer_ = &custom;
  }

  inline
  void list_of_voxels_sskel::
  serializer_maps (::xml_schema::serializer_map& filename,
                   ::xml_schema::serializer_map& voxel,
                   ::xml_schema::serializer_map& custom)
  {
    this->filename_serializer_map_ = &filename;
    this->voxel_serializer_map_ = &voxel;
    this->custom_serializer_map_ = &custom;
  }

  inline
  list_of_voxels_sskel::
  list_of_voxels_sskel ()
  : list_of_voxels_impl_ (0),
    type_serializer_ (0),
    filename_serializer_ (0),
    filename_serializer_map_ (0),
    voxel_serializer_ (0),
    voxel_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  list_of_voxels_sskel::
  list_of_voxels_sskel (list_of_voxels_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    list_of_voxels_impl_ (impl),
    type_serializer_ (0),
    filename_serializer_ (0),
    filename_serializer_map_ (0),
    voxel_serializer_ (0),
    voxel_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // voxel_sskel
  //

  inline
  void voxel_sskel::
  ID_serializer (::xml_schema::unsigned_int_sskel& ID)
  {
    this->ID_serializer_ = &ID;
  }

  inline
  void voxel_sskel::
  type_serializer (::xml_schema::string_sskel& type)
  {
    this->type_serializer_ = &type;
  }

  inline
  void voxel_sskel::
  center_serializer (::common::units_double_list_sskel& s)
  {
    this->center_serializer_ = &s;
  }

  inline
  void voxel_sskel::
  center_serializer (::xml_schema::serializer_map& m)
  {
    this->center_serializer_map_ = &m;
  }

  inline
  void voxel_sskel::
  volume_serializer (::common::units_decimal_nonnegative_sskel& s)
  {
    this->volume_serializer_ = &s;
  }

  inline
  void voxel_sskel::
  volume_serializer (::xml_schema::serializer_map& m)
  {
    this->volume_serializer_map_ = &m;
  }

  inline
  void voxel_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void voxel_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void voxel_sskel::
  serializers (::xml_schema::unsigned_int_sskel& ID,
               ::xml_schema::string_sskel& type,
               ::common::units_double_list_sskel& center,
               ::common::units_decimal_nonnegative_sskel& volume,
               ::common::custom_sskel& custom)
  {
    this->ID_serializer_ = &ID;
    this->type_serializer_ = &type;
    this->center_serializer_ = &center;
    this->volume_serializer_ = &volume;
    this->custom_serializer_ = &custom;
  }

  inline
  void voxel_sskel::
  serializer_maps (::xml_schema::serializer_map& center,
                   ::xml_schema::serializer_map& volume,
                   ::xml_schema::serializer_map& custom)
  {
    this->center_serializer_map_ = &center;
    this->volume_serializer_map_ = &volume;
    this->custom_serializer_map_ = &custom;
  }

  inline
  voxel_sskel::
  voxel_sskel ()
  : voxel_impl_ (0),
    ID_serializer_ (0),
    type_serializer_ (0),
    center_serializer_ (0),
    center_serializer_map_ (0),
    volume_serializer_ (0),
    volume_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  voxel_sskel::
  voxel_sskel (voxel_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    voxel_impl_ (impl),
    ID_serializer_ (0),
    type_serializer_ (0),
    center_serializer_ (0),
    center_serializer_map_ (0),
    volume_serializer_ (0),
    volume_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // node_sskel
  //

  inline
  void node_sskel::
  ID_serializer (::xml_schema::unsigned_int_sskel& ID)
  {
    this->ID_serializer_ = &ID;
  }

  inline
  void node_sskel::
  position_serializer (::common::units_double_list_sskel& s)
  {
    this->position_serializer_ = &s;
  }

  inline
  void node_sskel::
  position_serializer (::xml_schema::serializer_map& m)
  {
    this->position_serializer_map_ = &m;
  }

  inline
  void node_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void node_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void node_sskel::
  serializers (::xml_schema::unsigned_int_sskel& ID,
               ::common::units_double_list_sskel& position,
               ::common::custom_sskel& custom)
  {
    this->ID_serializer_ = &ID;
    this->position_serializer_ = &position;
    this->custom_serializer_ = &custom;
  }

  inline
  void node_sskel::
  serializer_maps (::xml_schema::serializer_map& position,
                   ::xml_schema::serializer_map& custom)
  {
    this->position_serializer_map_ = &position;
    this->custom_serializer_map_ = &custom;
  }

  inline
  node_sskel::
  node_sskel ()
  : node_impl_ (0),
    ID_serializer_ (0),
    position_serializer_ (0),
    position_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  node_sskel::
  node_sskel (node_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    node_impl_ (impl),
    ID_serializer_ (0),
    position_serializer_ (0),
    position_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // edge_sskel
  //

  inline
  void edge_sskel::
  ID_serializer (::xml_schema::unsigned_int_sskel& ID)
  {
    this->ID_serializer_ = &ID;
  }

  inline
  void edge_sskel::
  node_ID_serializer (::xml_schema::unsigned_int_sskel& s)
  {
    this->node_ID_serializer_ = &s;
  }

  inline
  void edge_sskel::
  node_ID_serializer (::xml_schema::serializer_map& m)
  {
    this->node_ID_serializer_map_ = &m;
  }

  inline
  void edge_sskel::
  serializers (::xml_schema::unsigned_int_sskel& ID,
               ::xml_schema::unsigned_int_sskel& node_ID)
  {
    this->ID_serializer_ = &ID;
    this->node_ID_serializer_ = &node_ID;
  }

  inline
  void edge_sskel::
  serializer_maps (::xml_schema::serializer_map& node_ID)
  {
    this->node_ID_serializer_map_ = &node_ID;
  }

  inline
  edge_sskel::
  edge_sskel ()
  : edge_impl_ (0),
    ID_serializer_ (0),
    node_ID_serializer_ (0),
    node_ID_serializer_map_ (0)
  {
  }

  inline
  edge_sskel::
  edge_sskel (edge_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    edge_impl_ (impl),
    ID_serializer_ (0),
    node_ID_serializer_ (0),
    node_ID_serializer_map_ (0)
  {
  }

  // face_sskel
  //

  inline
  void face_sskel::
  ID_serializer (::xml_schema::unsigned_int_sskel& ID)
  {
    this->ID_serializer_ = &ID;
  }

  inline
  void face_sskel::
  edge_ID_serializer (::xml_schema::unsigned_int_sskel& s)
  {
    this->edge_ID_serializer_ = &s;
  }

  inline
  void face_sskel::
  edge_ID_serializer (::xml_schema::serializer_map& m)
  {
    this->edge_ID_serializer_map_ = &m;
  }

  inline
  void face_sskel::
  serializers (::xml_schema::unsigned_int_sskel& ID,
               ::xml_schema::unsigned_int_sskel& edge_ID)
  {
    this->ID_serializer_ = &ID;
    this->edge_ID_serializer_ = &edge_ID;
  }

  inline
  void face_sskel::
  serializer_maps (::xml_schema::serializer_map& edge_ID)
  {
    this->edge_ID_serializer_map_ = &edge_ID;
  }

  inline
  face_sskel::
  face_sskel ()
  : face_impl_ (0),
    ID_serializer_ (0),
    edge_ID_serializer_ (0),
    edge_ID_serializer_map_ (0)
  {
  }

  inline
  face_sskel::
  face_sskel (face_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    face_impl_ (impl),
    ID_serializer_ (0),
    edge_ID_serializer_ (0),
    edge_ID_serializer_map_ (0)
  {
  }

  // int_list_xpath_sskel
  //

  inline
  void int_list_xpath_sskel::
  xpath_serializer (::xml_schema::string_sskel& xpath)
  {
    this->xpath_serializer_ = &xpath;
  }

  inline
  void int_list_xpath_sskel::
  grouping_number_serializer (::xml_schema::unsigned_short_sskel& grouping_number)
  {
    this->grouping_number_serializer_ = &grouping_number;
  }

  inline
  void int_list_xpath_sskel::
  serializers (::xml_schema::unsigned_int_sskel& unsigned_int_list_sskel_item,
               ::xml_schema::string_sskel& xpath,
               ::xml_schema::unsigned_short_sskel& grouping_number)
  {
    this->_xsde_item_ = &unsigned_int_list_sskel_item;
    this->xpath_serializer_ = &xpath;
    this->grouping_number_serializer_ = &grouping_number;
  }

  inline
  int_list_xpath_sskel::
  int_list_xpath_sskel (::common::unsigned_int_list_sskel* tiein)
  : ::common::unsigned_int_list_sskel (tiein, 0),
    int_list_xpath_impl_ (0),
    xpath_serializer_ (0),
    grouping_number_serializer_ (0)
  {
  }

  inline
  int_list_xpath_sskel::
  int_list_xpath_sskel (int_list_xpath_sskel* impl, void*)
  : ::common::unsigned_int_list_sskel (impl, 0),
    int_list_xpath_impl_ (impl),
    xpath_serializer_ (0),
    grouping_number_serializer_ (0)
  {
  }
}

// Begin epilogue.
//
//
// End epilogue.

