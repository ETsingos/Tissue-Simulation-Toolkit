// Copyright (c) 2005-2016 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef METADATA_IPP
#define METADATA_IPP

// Begin prologue.
//
//
// End prologue.

#include "common.ipp"

namespace metadata
{
  // URL
  //

  // orcid-identifier
  //

  inline
  bool orcid_identifier::
  path_present () const
  {
    return this->path_present_;
  }

  inline
  void orcid_identifier::
  path_present (bool x)
  {
    this->path_present_ = x;
  }

  inline
  const ::std::string& orcid_identifier::
  path () const
  {
    return this->path_;
  }

  inline
  ::std::string& orcid_identifier::
  path ()
  {
    return this->path_;
  }

  inline
  void orcid_identifier::
  path (const ::std::string& x)
  {
    this->path_ = x;
    this->path_present_ = true;
  }

  inline
  bool orcid_identifier::
  given_names_present () const
  {
    return this->given_names_present_;
  }

  inline
  void orcid_identifier::
  given_names_present (bool x)
  {
    this->given_names_present_ = x;
  }

  inline
  const ::std::string& orcid_identifier::
  given_names () const
  {
    return this->given_names_;
  }

  inline
  ::std::string& orcid_identifier::
  given_names ()
  {
    return this->given_names_;
  }

  inline
  void orcid_identifier::
  given_names (const ::std::string& x)
  {
    this->given_names_ = x;
    this->given_names_present_ = true;
  }

  inline
  bool orcid_identifier::
  family_name_present () const
  {
    return this->family_name_present_;
  }

  inline
  void orcid_identifier::
  family_name_present (bool x)
  {
    this->family_name_present_ = x;
  }

  inline
  const ::std::string& orcid_identifier::
  family_name () const
  {
    return this->family_name_;
  }

  inline
  ::std::string& orcid_identifier::
  family_name ()
  {
    return this->family_name_;
  }

  inline
  void orcid_identifier::
  family_name (const ::std::string& x)
  {
    this->family_name_ = x;
    this->family_name_present_ = true;
  }

  inline
  bool orcid_identifier::
  email_present () const
  {
    return this->email_present_;
  }

  inline
  void orcid_identifier::
  email_present (bool x)
  {
    this->email_present_ = x;
  }

  inline
  const ::std::string& orcid_identifier::
  email () const
  {
    return this->email_;
  }

  inline
  ::std::string& orcid_identifier::
  email ()
  {
    return this->email_;
  }

  inline
  void orcid_identifier::
  email (const ::std::string& x)
  {
    this->email_ = x;
    this->email_present_ = true;
  }

  inline
  bool orcid_identifier::
  url_present () const
  {
    return this->url_present_;
  }

  inline
  void orcid_identifier::
  url_present (bool x)
  {
    this->url_present_ = x;
  }

  inline
  const ::metadata::URL& orcid_identifier::
  url () const
  {
    return this->url_;
  }

  inline
  ::metadata::URL& orcid_identifier::
  url ()
  {
    return this->url_;
  }

  inline
  void orcid_identifier::
  url (const ::metadata::URL& x)
  {
    this->url_ = x;
    this->url_present_ = true;
  }

  inline
  bool orcid_identifier::
  organization_name_present () const
  {
    return this->organization_name_present_;
  }

  inline
  void orcid_identifier::
  organization_name_present (bool x)
  {
    this->organization_name_present_ = x;
  }

  inline
  const ::std::string& orcid_identifier::
  organization_name () const
  {
    return this->organization_name_;
  }

  inline
  ::std::string& orcid_identifier::
  organization_name ()
  {
    return this->organization_name_;
  }

  inline
  void orcid_identifier::
  organization_name (const ::std::string& x)
  {
    this->organization_name_ = x;
    this->organization_name_present_ = true;
  }

  inline
  bool orcid_identifier::
  department_name_present () const
  {
    return this->department_name_present_;
  }

  inline
  void orcid_identifier::
  department_name_present (bool x)
  {
    this->department_name_present_ = x;
  }

  inline
  const ::std::string& orcid_identifier::
  department_name () const
  {
    return this->department_name_;
  }

  inline
  ::std::string& orcid_identifier::
  department_name ()
  {
    return this->department_name_;
  }

  inline
  void orcid_identifier::
  department_name (const ::std::string& x)
  {
    this->department_name_ = x;
    this->department_name_present_ = true;
  }

  // orcid-person
  //

  inline
  const orcid_person::orcid_identifier_sequence& orcid_person::
  orcid_identifier () const
  {
    return this->orcid_identifier_;
  }

  inline
  orcid_person::orcid_identifier_sequence& orcid_person::
  orcid_identifier ()
  {
    return this->orcid_identifier_;
  }

  // classification
  //

  inline
  const ::std::string& classification::
  classification_number () const
  {
    return this->classification_number_;
  }

  inline
  ::std::string& classification::
  classification_number ()
  {
    return this->classification_number_;
  }

  inline
  void classification::
  classification_number (const ::std::string& x)
  {
    this->classification_number_ = x;
  }

  inline
  unsigned int classification::
  line () const
  {
    return this->line_;
  }

  inline
  unsigned int& classification::
  line ()
  {
    return this->line_;
  }

  inline
  void classification::
  line (unsigned int x)
  {
    this->line_ = x;
  }

  inline
  unsigned int classification::
  variant () const
  {
    return this->variant_;
  }

  inline
  unsigned int& classification::
  variant ()
  {
    return this->variant_;
  }

  inline
  void classification::
  variant (unsigned int x)
  {
    this->variant_ = x;
  }

  inline
  unsigned int classification::
  branch () const
  {
    return this->branch_;
  }

  inline
  unsigned int& classification::
  branch ()
  {
    return this->branch_;
  }

  inline
  void classification::
  branch (unsigned int x)
  {
    this->branch_ = x;
  }

  inline
  unsigned int classification::
  version () const
  {
    return this->version_;
  }

  inline
  unsigned int& classification::
  version ()
  {
    return this->version_;
  }

  inline
  void classification::
  version (unsigned int x)
  {
    this->version_ = x;
  }

  // curation
  //

  inline
  bool curation::
  curated_present () const
  {
    return this->curated_present_;
  }

  inline
  void curation::
  curated_present (bool x)
  {
    this->curated_present_ = x;
  }

  inline
  bool curation::
  curated () const
  {
    return this->curated_;
  }

  inline
  bool& curation::
  curated ()
  {
    return this->curated_;
  }

  inline
  void curation::
  curated (bool x)
  {
    this->curated_ = x;
    this->curated_present_ = true;
  }

  inline
  const ::xml_schema::date_time& curation::
  created () const
  {
    return this->created_;
  }

  inline
  ::xml_schema::date_time& curation::
  created ()
  {
    return this->created_;
  }

  inline
  void curation::
  created (const ::xml_schema::date_time& x)
  {
    this->created_ = x;
  }

  inline
  const ::xml_schema::date_time& curation::
  last_modified () const
  {
    return this->last_modified_;
  }

  inline
  ::xml_schema::date_time& curation::
  last_modified ()
  {
    return this->last_modified_;
  }

  inline
  void curation::
  last_modified (const ::xml_schema::date_time& x)
  {
    this->last_modified_ = x;
  }

  inline
  curation::choice_arm_tag curation::
  choice_arm () const
  {
    return this->choice_arm_;
  }

  inline
  const ::metadata::classification& curation::
  classification () const
  {
    return reinterpret_cast< const ::metadata::classification& > (this->choice_.classification_);
  }

  inline
  ::metadata::classification& curation::
  classification ()
  {
    return reinterpret_cast< ::metadata::classification& > (this->choice_.classification_);
  }

  inline
  void curation::
  classification (const ::metadata::classification& x)
  {
    if (this->choice_arm_ != classification_tag)
      this->choice_arm (classification_tag);

    reinterpret_cast< ::metadata::classification& > (this->choice_.classification_) = x;
  }

  inline
  const ::std::string& curation::
  version () const
  {
    return reinterpret_cast< const ::std::string& > (this->choice_.version_);
  }

  inline
  ::std::string& curation::
  version ()
  {
    return reinterpret_cast< ::std::string& > (this->choice_.version_);
  }

  inline
  void curation::
  version (const ::std::string& x)
  {
    if (this->choice_arm_ != version_tag)
      this->choice_arm (version_tag);

    reinterpret_cast< ::std::string& > (this->choice_.version_) = x;
  }

  inline
  const ::metadata::orcid_person& curation::
  creator () const
  {
    return *this->creator_;
  }

  inline
  ::metadata::orcid_person& curation::
  creator ()
  {
    return *this->creator_;
  }

  inline
  void curation::
  creator (::metadata::orcid_person* x)
  {
    delete this->creator_;
    this->creator_ = x;
  }

  inline
  ::metadata::orcid_person* curation::
  creator_detach ()
  {
    ::metadata::orcid_person* r = this->creator_;
    this->creator_ = 0;
    return r;
  }

  inline
  const ::metadata::orcid_person& curation::
  current_contact () const
  {
    return *this->current_contact_;
  }

  inline
  ::metadata::orcid_person& curation::
  current_contact ()
  {
    return *this->current_contact_;
  }

  inline
  void curation::
  current_contact (::metadata::orcid_person* x)
  {
    delete this->current_contact_;
    this->current_contact_ = x;
  }

  inline
  ::metadata::orcid_person* curation::
  current_contact_detach ()
  {
    ::metadata::orcid_person* r = this->current_contact_;
    this->current_contact_ = 0;
    return r;
  }

  inline
  bool curation::
  curator_present () const
  {
    return this->curator_ != 0;
  }

  inline
  const ::metadata::orcid_person& curation::
  curator () const
  {
    return *this->curator_;
  }

  inline
  ::metadata::orcid_person& curation::
  curator ()
  {
    return *this->curator_;
  }

  inline
  void curation::
  curator (::metadata::orcid_person* x)
  {
    delete this->curator_;
    this->curator_ = x;
  }

  inline
  ::metadata::orcid_person* curation::
  curator_detach ()
  {
    ::metadata::orcid_person* r = this->curator_;
    this->curator_ = 0;
    return r;
  }

  inline
  const ::metadata::orcid_person& curation::
  last_modified_by () const
  {
    return *this->last_modified_by_;
  }

  inline
  ::metadata::orcid_person& curation::
  last_modified_by ()
  {
    return *this->last_modified_by_;
  }

  inline
  void curation::
  last_modified_by (::metadata::orcid_person* x)
  {
    delete this->last_modified_by_;
    this->last_modified_by_ = x;
  }

  inline
  ::metadata::orcid_person* curation::
  last_modified_by_detach ()
  {
    ::metadata::orcid_person* r = this->last_modified_by_;
    this->last_modified_by_ = 0;
    return r;
  }

  // citation
  //

  inline
  bool citation::
  text_present () const
  {
    return this->text_present_;
  }

  inline
  void citation::
  text_present (bool x)
  {
    this->text_present_ = x;
  }

  inline
  const ::std::string& citation::
  text () const
  {
    return this->text_;
  }

  inline
  ::std::string& citation::
  text ()
  {
    return this->text_;
  }

  inline
  void citation::
  text (const ::std::string& x)
  {
    this->text_ = x;
    this->text_present_ = true;
  }

  inline
  bool citation::
  DOI_present () const
  {
    return this->DOI_present_;
  }

  inline
  void citation::
  DOI_present (bool x)
  {
    this->DOI_present_ = x;
  }

  inline
  const ::std::string& citation::
  DOI () const
  {
    return this->DOI_;
  }

  inline
  ::std::string& citation::
  DOI ()
  {
    return this->DOI_;
  }

  inline
  void citation::
  DOI (const ::std::string& x)
  {
    this->DOI_ = x;
    this->DOI_present_ = true;
  }

  inline
  const citation::URL_sequence& citation::
  URL () const
  {
    return this->URL_;
  }

  inline
  citation::URL_sequence& citation::
  URL ()
  {
    return this->URL_;
  }

  inline
  bool citation::
  PMID_present () const
  {
    return this->PMID_present_;
  }

  inline
  void citation::
  PMID_present (bool x)
  {
    this->PMID_present_ = x;
  }

  inline
  const ::std::string& citation::
  PMID () const
  {
    return this->PMID_;
  }

  inline
  ::std::string& citation::
  PMID ()
  {
    return this->PMID_;
  }

  inline
  void citation::
  PMID (const ::std::string& x)
  {
    this->PMID_ = x;
    this->PMID_present_ = true;
  }

  inline
  bool citation::
  PMCID_present () const
  {
    return this->PMCID_present_;
  }

  inline
  void citation::
  PMCID_present (bool x)
  {
    this->PMCID_present_ = x;
  }

  inline
  const ::std::string& citation::
  PMCID () const
  {
    return this->PMCID_;
  }

  inline
  ::std::string& citation::
  PMCID ()
  {
    return this->PMCID_;
  }

  inline
  void citation::
  PMCID (const ::std::string& x)
  {
    this->PMCID_ = x;
    this->PMCID_present_ = true;
  }

  inline
  bool citation::
  arXiv_present () const
  {
    return this->arXiv_present_;
  }

  inline
  void citation::
  arXiv_present (bool x)
  {
    this->arXiv_present_ = x;
  }

  inline
  const ::std::string& citation::
  arXiv () const
  {
    return this->arXiv_;
  }

  inline
  ::std::string& citation::
  arXiv ()
  {
    return this->arXiv_;
  }

  inline
  void citation::
  arXiv (const ::std::string& x)
  {
    this->arXiv_ = x;
    this->arXiv_present_ = true;
  }

  inline
  bool citation::
  notes_present () const
  {
    return this->notes_present_;
  }

  inline
  void citation::
  notes_present (bool x)
  {
    this->notes_present_ = x;
  }

  inline
  const ::std::string& citation::
  notes () const
  {
    return this->notes_;
  }

  inline
  ::std::string& citation::
  notes ()
  {
    return this->notes_;
  }

  inline
  void citation::
  notes (const ::std::string& x)
  {
    this->notes_ = x;
    this->notes_present_ = true;
  }

  inline
  bool citation::
  custom_present () const
  {
    return this->custom_ != 0;
  }

  inline
  const ::common::custom& citation::
  custom () const
  {
    return *this->custom_;
  }

  inline
  ::common::custom& citation::
  custom ()
  {
    return *this->custom_;
  }

  inline
  void citation::
  custom (::common::custom* x)
  {
    delete this->custom_;
    this->custom_ = x;
  }

  inline
  ::common::custom* citation::
  custom_detach ()
  {
    ::common::custom* r = this->custom_;
    this->custom_ = 0;
    return r;
  }

  // data_origin
  //

  inline
  bool data_origin::
  ID_present () const
  {
    return this->ID_present_;
  }

  inline
  void data_origin::
  ID_present (bool x)
  {
    this->ID_present_ = x;
  }

  inline
  unsigned long long data_origin::
  ID () const
  {
    return this->ID_;
  }

  inline
  unsigned long long& data_origin::
  ID ()
  {
    return this->ID_;
  }

  inline
  void data_origin::
  ID (unsigned long long x)
  {
    this->ID_ = x;
    this->ID_present_ = true;
  }

  inline
  bool data_origin::
  instrumentation_information_present () const
  {
    return this->instrumentation_information_present_;
  }

  inline
  void data_origin::
  instrumentation_information_present (bool x)
  {
    this->instrumentation_information_present_ = x;
  }

  inline
  const ::std::string& data_origin::
  instrumentation_information () const
  {
    return this->instrumentation_information_;
  }

  inline
  ::std::string& data_origin::
  instrumentation_information ()
  {
    return this->instrumentation_information_;
  }

  inline
  void data_origin::
  instrumentation_information (const ::std::string& x)
  {
    this->instrumentation_information_ = x;
    this->instrumentation_information_present_ = true;
  }

  inline
  bool data_origin::
  experimental_protocol_present () const
  {
    return this->experimental_protocol_present_;
  }

  inline
  void data_origin::
  experimental_protocol_present (bool x)
  {
    this->experimental_protocol_present_ = x;
  }

  inline
  const ::std::string& data_origin::
  experimental_protocol () const
  {
    return this->experimental_protocol_;
  }

  inline
  ::std::string& data_origin::
  experimental_protocol ()
  {
    return this->experimental_protocol_;
  }

  inline
  void data_origin::
  experimental_protocol (const ::std::string& x)
  {
    this->experimental_protocol_ = x;
    this->experimental_protocol_present_ = true;
  }

  inline
  const data_origin::citation_sequence& data_origin::
  citation () const
  {
    return this->citation_;
  }

  inline
  data_origin::citation_sequence& data_origin::
  citation ()
  {
    return this->citation_;
  }

  inline
  bool data_origin::
  xpath_present () const
  {
    return this->xpath_present_;
  }

  inline
  void data_origin::
  xpath_present (bool x)
  {
    this->xpath_present_ = x;
  }

  inline
  const ::std::string& data_origin::
  xpath () const
  {
    return this->xpath_;
  }

  inline
  ::std::string& data_origin::
  xpath ()
  {
    return this->xpath_;
  }

  inline
  void data_origin::
  xpath (const ::std::string& x)
  {
    this->xpath_ = x;
    this->xpath_present_ = true;
  }

  inline
  bool data_origin::
  notes_present () const
  {
    return this->notes_present_;
  }

  inline
  void data_origin::
  notes_present (bool x)
  {
    this->notes_present_ = x;
  }

  inline
  const ::std::string& data_origin::
  notes () const
  {
    return this->notes_;
  }

  inline
  ::std::string& data_origin::
  notes ()
  {
    return this->notes_;
  }

  inline
  void data_origin::
  notes (const ::std::string& x)
  {
    this->notes_ = x;
    this->notes_present_ = true;
  }

  inline
  bool data_origin::
  custom_present () const
  {
    return this->custom_ != 0;
  }

  inline
  const ::common::custom& data_origin::
  custom () const
  {
    return *this->custom_;
  }

  inline
  ::common::custom& data_origin::
  custom ()
  {
    return *this->custom_;
  }

  inline
  void data_origin::
  custom (::common::custom* x)
  {
    delete this->custom_;
    this->custom_ = x;
  }

  inline
  ::common::custom* data_origin::
  custom_detach ()
  {
    ::common::custom* r = this->custom_;
    this->custom_ = 0;
    return r;
  }

  // data_origins
  //

  inline
  const data_origins::data_origin_sequence& data_origins::
  data_origin () const
  {
    return this->data_origin_;
  }

  inline
  data_origins::data_origin_sequence& data_origins::
  data_origin ()
  {
    return this->data_origin_;
  }

  inline
  bool data_origins::
  custom_present () const
  {
    return this->custom_ != 0;
  }

  inline
  const ::common::custom& data_origins::
  custom () const
  {
    return *this->custom_;
  }

  inline
  ::common::custom& data_origins::
  custom ()
  {
    return *this->custom_;
  }

  inline
  void data_origins::
  custom (::common::custom* x)
  {
    delete this->custom_;
    this->custom_ = x;
  }

  inline
  ::common::custom* data_origins::
  custom_detach ()
  {
    ::common::custom* r = this->custom_;
    this->custom_ = 0;
    return r;
  }

  // data_analysis
  //

  inline
  bool data_analysis::
  URL_present () const
  {
    return this->URL_present_;
  }

  inline
  void data_analysis::
  URL_present (bool x)
  {
    this->URL_present_ = x;
  }

  inline
  const ::metadata::URL& data_analysis::
  URL () const
  {
    return this->URL_;
  }

  inline
  ::metadata::URL& data_analysis::
  URL ()
  {
    return this->URL_;
  }

  inline
  void data_analysis::
  URL (const ::metadata::URL& x)
  {
    this->URL_ = x;
    this->URL_present_ = true;
  }

  inline
  bool data_analysis::
  citation_present () const
  {
    return this->citation_ != 0;
  }

  inline
  const ::metadata::citation& data_analysis::
  citation () const
  {
    return *this->citation_;
  }

  inline
  ::metadata::citation& data_analysis::
  citation ()
  {
    return *this->citation_;
  }

  inline
  void data_analysis::
  citation (::metadata::citation* x)
  {
    delete this->citation_;
    this->citation_ = x;
  }

  inline
  ::metadata::citation* data_analysis::
  citation_detach ()
  {
    ::metadata::citation* r = this->citation_;
    this->citation_ = 0;
    return r;
  }

  inline
  bool data_analysis::
  software_present () const
  {
    return this->software_ != 0;
  }

  inline
  const ::metadata::software& data_analysis::
  software () const
  {
    return *this->software_;
  }

  inline
  ::metadata::software& data_analysis::
  software ()
  {
    return *this->software_;
  }

  inline
  void data_analysis::
  software (::metadata::software* x)
  {
    delete this->software_;
    this->software_ = x;
  }

  inline
  ::metadata::software* data_analysis::
  software_detach ()
  {
    ::metadata::software* r = this->software_;
    this->software_ = 0;
    return r;
  }

  inline
  bool data_analysis::
  xpath_present () const
  {
    return this->xpath_present_;
  }

  inline
  void data_analysis::
  xpath_present (bool x)
  {
    this->xpath_present_ = x;
  }

  inline
  const ::std::string& data_analysis::
  xpath () const
  {
    return this->xpath_;
  }

  inline
  ::std::string& data_analysis::
  xpath ()
  {
    return this->xpath_;
  }

  inline
  void data_analysis::
  xpath (const ::std::string& x)
  {
    this->xpath_ = x;
    this->xpath_present_ = true;
  }

  inline
  bool data_analysis::
  notes_present () const
  {
    return this->notes_present_;
  }

  inline
  void data_analysis::
  notes_present (bool x)
  {
    this->notes_present_ = x;
  }

  inline
  const ::std::string& data_analysis::
  notes () const
  {
    return this->notes_;
  }

  inline
  ::std::string& data_analysis::
  notes ()
  {
    return this->notes_;
  }

  inline
  void data_analysis::
  notes (const ::std::string& x)
  {
    this->notes_ = x;
    this->notes_present_ = true;
  }

  inline
  bool data_analysis::
  custom_present () const
  {
    return this->custom_ != 0;
  }

  inline
  const ::common::custom& data_analysis::
  custom () const
  {
    return *this->custom_;
  }

  inline
  ::common::custom& data_analysis::
  custom ()
  {
    return *this->custom_;
  }

  inline
  void data_analysis::
  custom (::common::custom* x)
  {
    delete this->custom_;
    this->custom_ = x;
  }

  inline
  ::common::custom* data_analysis::
  custom_detach ()
  {
    ::common::custom* r = this->custom_;
    this->custom_ = 0;
    return r;
  }

  // software
  //

  inline
  bool software::
  software_name_present () const
  {
    return this->software_name_present_;
  }

  inline
  void software::
  software_name_present (bool x)
  {
    this->software_name_present_ = x;
  }

  inline
  const ::std::string& software::
  software_name () const
  {
    return this->software_name_;
  }

  inline
  ::std::string& software::
  software_name ()
  {
    return this->software_name_;
  }

  inline
  void software::
  software_name (const ::std::string& x)
  {
    this->software_name_ = x;
    this->software_name_present_ = true;
  }

  inline
  bool software::
  software_version_present () const
  {
    return this->software_version_present_;
  }

  inline
  void software::
  software_version_present (bool x)
  {
    this->software_version_present_ = x;
  }

  inline
  const ::std::string& software::
  software_version () const
  {
    return this->software_version_;
  }

  inline
  ::std::string& software::
  software_version ()
  {
    return this->software_version_;
  }

  inline
  void software::
  software_version (const ::std::string& x)
  {
    this->software_version_ = x;
    this->software_version_present_ = true;
  }

  inline
  bool software::
  software_input_configuration_present () const
  {
    return this->software_input_configuration_ != 0;
  }

  inline
  const ::common::custom& software::
  software_input_configuration () const
  {
    return *this->software_input_configuration_;
  }

  inline
  ::common::custom& software::
  software_input_configuration ()
  {
    return *this->software_input_configuration_;
  }

  inline
  void software::
  software_input_configuration (::common::custom* x)
  {
    delete this->software_input_configuration_;
    this->software_input_configuration_ = x;
  }

  inline
  ::common::custom* software::
  software_input_configuration_detach ()
  {
    ::common::custom* r = this->software_input_configuration_;
    this->software_input_configuration_ = 0;
    return r;
  }

  inline
  bool software::
  name_present () const
  {
    return this->name_present_;
  }

  inline
  void software::
  name_present (bool x)
  {
    this->name_present_ = x;
  }

  inline
  const ::std::string& software::
  name () const
  {
    return this->name_;
  }

  inline
  ::std::string& software::
  name ()
  {
    return this->name_;
  }

  inline
  void software::
  name (const ::std::string& x)
  {
    this->name_ = x;
    this->name_present_ = true;
  }

  inline
  bool software::
  version_present () const
  {
    return this->version_present_;
  }

  inline
  void software::
  version_present (bool x)
  {
    this->version_present_ = x;
  }

  inline
  const ::std::string& software::
  version () const
  {
    return this->version_;
  }

  inline
  ::std::string& software::
  version ()
  {
    return this->version_;
  }

  inline
  void software::
  version (const ::std::string& x)
  {
    this->version_ = x;
    this->version_present_ = true;
  }

  inline
  bool software::
  input_configuration_present () const
  {
    return this->input_configuration_ != 0;
  }

  inline
  const ::common::custom& software::
  input_configuration () const
  {
    return *this->input_configuration_;
  }

  inline
  ::common::custom& software::
  input_configuration ()
  {
    return *this->input_configuration_;
  }

  inline
  void software::
  input_configuration (::common::custom* x)
  {
    delete this->input_configuration_;
    this->input_configuration_ = x;
  }

  inline
  ::common::custom* software::
  input_configuration_detach ()
  {
    ::common::custom* r = this->input_configuration_;
    this->input_configuration_ = 0;
    return r;
  }

  inline
  bool software::
  URL_present () const
  {
    return this->URL_present_;
  }

  inline
  void software::
  URL_present (bool x)
  {
    this->URL_present_ = x;
  }

  inline
  const ::metadata::URL& software::
  URL () const
  {
    return this->URL_;
  }

  inline
  ::metadata::URL& software::
  URL ()
  {
    return this->URL_;
  }

  inline
  void software::
  URL (const ::metadata::URL& x)
  {
    this->URL_ = x;
    this->URL_present_ = true;
  }

  inline
  bool software::
  creator_present () const
  {
    return this->creator_ != 0;
  }

  inline
  const ::metadata::orcid_person& software::
  creator () const
  {
    return *this->creator_;
  }

  inline
  ::metadata::orcid_person& software::
  creator ()
  {
    return *this->creator_;
  }

  inline
  void software::
  creator (::metadata::orcid_person* x)
  {
    delete this->creator_;
    this->creator_ = x;
  }

  inline
  ::metadata::orcid_person* software::
  creator_detach ()
  {
    ::metadata::orcid_person* r = this->creator_;
    this->creator_ = 0;
    return r;
  }

  inline
  bool software::
  citation_present () const
  {
    return this->citation_ != 0;
  }

  inline
  const ::metadata::citation& software::
  citation () const
  {
    return *this->citation_;
  }

  inline
  ::metadata::citation& software::
  citation ()
  {
    return *this->citation_;
  }

  inline
  void software::
  citation (::metadata::citation* x)
  {
    delete this->citation_;
    this->citation_ = x;
  }

  inline
  ::metadata::citation* software::
  citation_detach ()
  {
    ::metadata::citation* r = this->citation_;
    this->citation_ = 0;
    return r;
  }

  inline
  bool software::
  user_present () const
  {
    return this->user_ != 0;
  }

  inline
  const ::metadata::orcid_person& software::
  user () const
  {
    return *this->user_;
  }

  inline
  ::metadata::orcid_person& software::
  user ()
  {
    return *this->user_;
  }

  inline
  void software::
  user (::metadata::orcid_person* x)
  {
    delete this->user_;
    this->user_ = x;
  }

  inline
  ::metadata::orcid_person* software::
  user_detach ()
  {
    ::metadata::orcid_person* r = this->user_;
    this->user_ = 0;
    return r;
  }

  inline
  bool software::
  custom_present () const
  {
    return this->custom_ != 0;
  }

  inline
  const ::common::custom& software::
  custom () const
  {
    return *this->custom_;
  }

  inline
  ::common::custom& software::
  custom ()
  {
    return *this->custom_;
  }

  inline
  void software::
  custom (::common::custom* x)
  {
    delete this->custom_;
    this->custom_ = x;
  }

  inline
  ::common::custom* software::
  custom_detach ()
  {
    ::common::custom* r = this->custom_;
    this->custom_ = 0;
    return r;
  }

  // patient_derived
  //

  inline
  bool patient_derived::
  patient_ID_present () const
  {
    return this->patient_ID_present_;
  }

  inline
  void patient_derived::
  patient_ID_present (bool x)
  {
    this->patient_ID_present_ = x;
  }

  inline
  const ::std::string& patient_derived::
  patient_ID () const
  {
    return this->patient_ID_;
  }

  inline
  ::std::string& patient_derived::
  patient_ID ()
  {
    return this->patient_ID_;
  }

  inline
  void patient_derived::
  patient_ID (const ::std::string& x)
  {
    this->patient_ID_ = x;
    this->patient_ID_present_ = true;
  }

  // species
  //

  inline
  bool species::
  MeSH_ID_present () const
  {
    return this->MeSH_ID_present_;
  }

  inline
  void species::
  MeSH_ID_present (bool x)
  {
    this->MeSH_ID_present_ = x;
  }

  inline
  const ::std::string& species::
  MeSH_ID () const
  {
    return this->MeSH_ID_;
  }

  inline
  ::std::string& species::
  MeSH_ID ()
  {
    return this->MeSH_ID_;
  }

  inline
  void species::
  MeSH_ID (const ::std::string& x)
  {
    this->MeSH_ID_ = x;
    this->MeSH_ID_present_ = true;
  }

  // disease
  //

  inline
  bool disease::
  EFO_ID_present () const
  {
    return this->EFO_ID_present_;
  }

  inline
  void disease::
  EFO_ID_present (bool x)
  {
    this->EFO_ID_present_ = x;
  }

  inline
  const ::std::string& disease::
  EFO_ID () const
  {
    return this->EFO_ID_;
  }

  inline
  ::std::string& disease::
  EFO_ID ()
  {
    return this->EFO_ID_;
  }

  inline
  void disease::
  EFO_ID (const ::std::string& x)
  {
    this->EFO_ID_ = x;
    this->EFO_ID_present_ = true;
  }

  inline
  bool disease::
  DOID_ID_present () const
  {
    return this->DOID_ID_present_;
  }

  inline
  void disease::
  DOID_ID_present (bool x)
  {
    this->DOID_ID_present_ = x;
  }

  inline
  const ::std::string& disease::
  DOID_ID () const
  {
    return this->DOID_ID_;
  }

  inline
  ::std::string& disease::
  DOID_ID ()
  {
    return this->DOID_ID_;
  }

  inline
  void disease::
  DOID_ID (const ::std::string& x)
  {
    this->DOID_ID_ = x;
    this->DOID_ID_present_ = true;
  }

  // cell_origin
  //

  inline
  bool cell_origin::
  BTO_ID_present () const
  {
    return this->BTO_ID_present_;
  }

  inline
  void cell_origin::
  BTO_ID_present (bool x)
  {
    this->BTO_ID_present_ = x;
  }

  inline
  const ::std::string& cell_origin::
  BTO_ID () const
  {
    return this->BTO_ID_;
  }

  inline
  ::std::string& cell_origin::
  BTO_ID ()
  {
    return this->BTO_ID_;
  }

  inline
  void cell_origin::
  BTO_ID (const ::std::string& x)
  {
    this->BTO_ID_ = x;
    this->BTO_ID_present_ = true;
  }

  inline
  bool cell_origin::
  CLO_ID_present () const
  {
    return this->CLO_ID_present_;
  }

  inline
  void cell_origin::
  CLO_ID_present (bool x)
  {
    this->CLO_ID_present_ = x;
  }

  inline
  const ::std::string& cell_origin::
  CLO_ID () const
  {
    return this->CLO_ID_;
  }

  inline
  ::std::string& cell_origin::
  CLO_ID ()
  {
    return this->CLO_ID_;
  }

  inline
  void cell_origin::
  CLO_ID (const ::std::string& x)
  {
    this->CLO_ID_ = x;
    this->CLO_ID_present_ = true;
  }

  inline
  bool cell_origin::
  species_present () const
  {
    return this->species_present_;
  }

  inline
  void cell_origin::
  species_present (bool x)
  {
    this->species_present_ = x;
  }

  inline
  const ::metadata::species& cell_origin::
  species () const
  {
    return this->species_;
  }

  inline
  ::metadata::species& cell_origin::
  species ()
  {
    return this->species_;
  }

  inline
  void cell_origin::
  species (const ::metadata::species& x)
  {
    this->species_ = x;
    this->species_present_ = true;
  }

  inline
  bool cell_origin::
  strain_present () const
  {
    return this->strain_present_;
  }

  inline
  void cell_origin::
  strain_present (bool x)
  {
    this->strain_present_ = x;
  }

  inline
  const ::std::string& cell_origin::
  strain () const
  {
    return this->strain_;
  }

  inline
  ::std::string& cell_origin::
  strain ()
  {
    return this->strain_;
  }

  inline
  void cell_origin::
  strain (const ::std::string& x)
  {
    this->strain_ = x;
    this->strain_present_ = true;
  }

  inline
  bool cell_origin::
  organ_present () const
  {
    return this->organ_present_;
  }

  inline
  void cell_origin::
  organ_present (bool x)
  {
    this->organ_present_ = x;
  }

  inline
  const ::std::string& cell_origin::
  organ () const
  {
    return this->organ_;
  }

  inline
  ::std::string& cell_origin::
  organ ()
  {
    return this->organ_;
  }

  inline
  void cell_origin::
  organ (const ::std::string& x)
  {
    this->organ_ = x;
    this->organ_present_ = true;
  }

  inline
  bool cell_origin::
  disease_present () const
  {
    return this->disease_present_;
  }

  inline
  void cell_origin::
  disease_present (bool x)
  {
    this->disease_present_ = x;
  }

  inline
  const ::metadata::disease& cell_origin::
  disease () const
  {
    return this->disease_;
  }

  inline
  ::metadata::disease& cell_origin::
  disease ()
  {
    return this->disease_;
  }

  inline
  void cell_origin::
  disease (const ::metadata::disease& x)
  {
    this->disease_ = x;
    this->disease_present_ = true;
  }

  inline
  bool cell_origin::
  morphology_present () const
  {
    return this->morphology_present_;
  }

  inline
  void cell_origin::
  morphology_present (bool x)
  {
    this->morphology_present_ = x;
  }

  inline
  const ::std::string& cell_origin::
  morphology () const
  {
    return this->morphology_;
  }

  inline
  ::std::string& cell_origin::
  morphology ()
  {
    return this->morphology_;
  }

  inline
  void cell_origin::
  morphology (const ::std::string& x)
  {
    this->morphology_ = x;
    this->morphology_present_ = true;
  }

  inline
  bool cell_origin::
  patient_derived_present () const
  {
    return this->patient_derived_present_;
  }

  inline
  void cell_origin::
  patient_derived_present (bool x)
  {
    this->patient_derived_present_ = x;
  }

  inline
  const ::metadata::patient_derived& cell_origin::
  patient_derived () const
  {
    return this->patient_derived_;
  }

  inline
  ::metadata::patient_derived& cell_origin::
  patient_derived ()
  {
    return this->patient_derived_;
  }

  inline
  void cell_origin::
  patient_derived (const ::metadata::patient_derived& x)
  {
    this->patient_derived_ = x;
    this->patient_derived_present_ = true;
  }

  inline
  bool cell_origin::
  custom_present () const
  {
    return this->custom_ != 0;
  }

  inline
  const ::common::custom& cell_origin::
  custom () const
  {
    return *this->custom_;
  }

  inline
  ::common::custom& cell_origin::
  custom ()
  {
    return *this->custom_;
  }

  inline
  void cell_origin::
  custom (::common::custom* x)
  {
    delete this->custom_;
    this->custom_ = x;
  }

  inline
  ::common::custom* cell_origin::
  custom_detach ()
  {
    ::common::custom* r = this->custom_;
    this->custom_ = 0;
    return r;
  }

  // MultiCellDB
  //

  inline
  bool MultiCellDB::
  ID_present () const
  {
    return this->ID_present_;
  }

  inline
  void MultiCellDB::
  ID_present (bool x)
  {
    this->ID_present_ = x;
  }

  inline
  const ::std::string& MultiCellDB::
  ID () const
  {
    return this->ID_;
  }

  inline
  ::std::string& MultiCellDB::
  ID ()
  {
    return this->ID_;
  }

  inline
  void MultiCellDB::
  ID (const ::std::string& x)
  {
    this->ID_ = x;
    this->ID_present_ = true;
  }

  inline
  bool MultiCellDB::
  name_present () const
  {
    return this->name_present_;
  }

  inline
  void MultiCellDB::
  name_present (bool x)
  {
    this->name_present_ = x;
  }

  inline
  const ::std::string& MultiCellDB::
  name () const
  {
    return this->name_;
  }

  inline
  ::std::string& MultiCellDB::
  name ()
  {
    return this->name_;
  }

  inline
  void MultiCellDB::
  name (const ::std::string& x)
  {
    this->name_ = x;
    this->name_present_ = true;
  }

  // rights
  //

  inline
  const rights::license_sequence& rights::
  license () const
  {
    return this->license_;
  }

  inline
  rights::license_sequence& rights::
  license ()
  {
    return this->license_;
  }

  inline
  bool rights::
  custom_present () const
  {
    return this->custom_ != 0;
  }

  inline
  const ::common::custom& rights::
  custom () const
  {
    return *this->custom_;
  }

  inline
  ::common::custom& rights::
  custom ()
  {
    return *this->custom_;
  }

  inline
  void rights::
  custom (::common::custom* x)
  {
    delete this->custom_;
    this->custom_ = x;
  }

  inline
  ::common::custom* rights::
  custom_detach ()
  {
    ::common::custom* r = this->custom_;
    this->custom_ = 0;
    return r;
  }

  // license
  //

  inline
  const ::metadata::LicenseDocument& license::
  LicenseDocument () const
  {
    return *this->LicenseDocument_;
  }

  inline
  ::metadata::LicenseDocument& license::
  LicenseDocument ()
  {
    return *this->LicenseDocument_;
  }

  inline
  void license::
  LicenseDocument (::metadata::LicenseDocument* x)
  {
    delete this->LicenseDocument_;
    this->LicenseDocument_ = x;
  }

  inline
  ::metadata::LicenseDocument* license::
  LicenseDocument_detach ()
  {
    ::metadata::LicenseDocument* r = this->LicenseDocument_;
    this->LicenseDocument_ = 0;
    return r;
  }

  inline
  bool license::
  notes_present () const
  {
    return this->notes_present_;
  }

  inline
  void license::
  notes_present (bool x)
  {
    this->notes_present_ = x;
  }

  inline
  const ::std::string& license::
  notes () const
  {
    return this->notes_;
  }

  inline
  ::std::string& license::
  notes ()
  {
    return this->notes_;
  }

  inline
  void license::
  notes (const ::std::string& x)
  {
    this->notes_ = x;
    this->notes_present_ = true;
  }

  inline
  bool license::
  custom_present () const
  {
    return this->custom_ != 0;
  }

  inline
  const ::common::custom& license::
  custom () const
  {
    return *this->custom_;
  }

  inline
  ::common::custom& license::
  custom ()
  {
    return *this->custom_;
  }

  inline
  void license::
  custom (::common::custom* x)
  {
    delete this->custom_;
    this->custom_ = x;
  }

  inline
  ::common::custom* license::
  custom_detach ()
  {
    ::common::custom* r = this->custom_;
    this->custom_ = 0;
    return r;
  }

  // LicenseDocument
  //

  inline
  const ::std::string& LicenseDocument::
  name () const
  {
    return this->name_;
  }

  inline
  ::std::string& LicenseDocument::
  name ()
  {
    return this->name_;
  }

  inline
  void LicenseDocument::
  name (const ::std::string& x)
  {
    this->name_ = x;
  }

  inline
  bool LicenseDocument::
  URL_present () const
  {
    return this->URL_present_;
  }

  inline
  void LicenseDocument::
  URL_present (bool x)
  {
    this->URL_present_ = x;
  }

  inline
  const ::metadata::URL& LicenseDocument::
  URL () const
  {
    return this->URL_;
  }

  inline
  ::metadata::URL& LicenseDocument::
  URL ()
  {
    return this->URL_;
  }

  inline
  void LicenseDocument::
  URL (const ::metadata::URL& x)
  {
    this->URL_ = x;
    this->URL_present_ = true;
  }

  inline
  bool LicenseDocument::
  custom_present () const
  {
    return this->custom_ != 0;
  }

  inline
  const ::common::custom& LicenseDocument::
  custom () const
  {
    return *this->custom_;
  }

  inline
  ::common::custom& LicenseDocument::
  custom ()
  {
    return *this->custom_;
  }

  inline
  void LicenseDocument::
  custom (::common::custom* x)
  {
    delete this->custom_;
    this->custom_ = x;
  }

  inline
  ::common::custom* LicenseDocument::
  custom_detach ()
  {
    ::common::custom* r = this->custom_;
    this->custom_ = 0;
    return r;
  }

  // metadata
  //

  inline
  bool metadata::
  MultiCellDB_present () const
  {
    return this->MultiCellDB_present_;
  }

  inline
  void metadata::
  MultiCellDB_present (bool x)
  {
    this->MultiCellDB_present_ = x;
  }

  inline
  const ::metadata::MultiCellDB& metadata::
  MultiCellDB () const
  {
    return this->MultiCellDB_;
  }

  inline
  ::metadata::MultiCellDB& metadata::
  MultiCellDB ()
  {
    return this->MultiCellDB_;
  }

  inline
  void metadata::
  MultiCellDB (const ::metadata::MultiCellDB& x)
  {
    this->MultiCellDB_ = x;
    this->MultiCellDB_present_ = true;
  }

  inline
  bool metadata::
  description_present () const
  {
    return this->description_present_;
  }

  inline
  void metadata::
  description_present (bool x)
  {
    this->description_present_ = x;
  }

  inline
  const ::std::string& metadata::
  description () const
  {
    return this->description_;
  }

  inline
  ::std::string& metadata::
  description ()
  {
    return this->description_;
  }

  inline
  void metadata::
  description (const ::std::string& x)
  {
    this->description_ = x;
    this->description_present_ = true;
  }

  inline
  bool metadata::
  software_present () const
  {
    return this->software_ != 0;
  }

  inline
  const ::metadata::software& metadata::
  software () const
  {
    return *this->software_;
  }

  inline
  ::metadata::software& metadata::
  software ()
  {
    return *this->software_;
  }

  inline
  void metadata::
  software (::metadata::software* x)
  {
    delete this->software_;
    this->software_ = x;
  }

  inline
  ::metadata::software* metadata::
  software_detach ()
  {
    ::metadata::software* r = this->software_;
    this->software_ = 0;
    return r;
  }

  inline
  bool metadata::
  citation_present () const
  {
    return this->citation_ != 0;
  }

  inline
  const ::metadata::citation& metadata::
  citation () const
  {
    return *this->citation_;
  }

  inline
  ::metadata::citation& metadata::
  citation ()
  {
    return *this->citation_;
  }

  inline
  void metadata::
  citation (::metadata::citation* x)
  {
    delete this->citation_;
    this->citation_ = x;
  }

  inline
  ::metadata::citation* metadata::
  citation_detach ()
  {
    ::metadata::citation* r = this->citation_;
    this->citation_ = 0;
    return r;
  }

  inline
  bool metadata::
  curation_present () const
  {
    return this->curation_ != 0;
  }

  inline
  const ::metadata::curation& metadata::
  curation () const
  {
    return *this->curation_;
  }

  inline
  ::metadata::curation& metadata::
  curation ()
  {
    return *this->curation_;
  }

  inline
  void metadata::
  curation (::metadata::curation* x)
  {
    delete this->curation_;
    this->curation_ = x;
  }

  inline
  ::metadata::curation* metadata::
  curation_detach ()
  {
    ::metadata::curation* r = this->curation_;
    this->curation_ = 0;
    return r;
  }

  inline
  bool metadata::
  data_origins_present () const
  {
    return this->data_origins_ != 0;
  }

  inline
  const ::metadata::data_origins& metadata::
  data_origins () const
  {
    return *this->data_origins_;
  }

  inline
  ::metadata::data_origins& metadata::
  data_origins ()
  {
    return *this->data_origins_;
  }

  inline
  void metadata::
  data_origins (::metadata::data_origins* x)
  {
    delete this->data_origins_;
    this->data_origins_ = x;
  }

  inline
  ::metadata::data_origins* metadata::
  data_origins_detach ()
  {
    ::metadata::data_origins* r = this->data_origins_;
    this->data_origins_ = 0;
    return r;
  }

  inline
  const metadata::data_analysis_sequence& metadata::
  data_analysis () const
  {
    return this->data_analysis_;
  }

  inline
  metadata::data_analysis_sequence& metadata::
  data_analysis ()
  {
    return this->data_analysis_;
  }

  inline
  const ::metadata::rights& metadata::
  rights () const
  {
    return *this->rights_;
  }

  inline
  ::metadata::rights& metadata::
  rights ()
  {
    return *this->rights_;
  }

  inline
  void metadata::
  rights (::metadata::rights* x)
  {
    delete this->rights_;
    this->rights_ = x;
  }

  inline
  ::metadata::rights* metadata::
  rights_detach ()
  {
    ::metadata::rights* r = this->rights_;
    this->rights_ = 0;
    return r;
  }

  inline
  bool metadata::
  cell_origin_present () const
  {
    return this->cell_origin_ != 0;
  }

  inline
  const ::metadata::cell_origin& metadata::
  cell_origin () const
  {
    return *this->cell_origin_;
  }

  inline
  ::metadata::cell_origin& metadata::
  cell_origin ()
  {
    return *this->cell_origin_;
  }

  inline
  void metadata::
  cell_origin (::metadata::cell_origin* x)
  {
    delete this->cell_origin_;
    this->cell_origin_ = x;
  }

  inline
  ::metadata::cell_origin* metadata::
  cell_origin_detach ()
  {
    ::metadata::cell_origin* r = this->cell_origin_;
    this->cell_origin_ = 0;
    return r;
  }

  inline
  bool metadata::
  current_time_present () const
  {
    return this->current_time_ != 0;
  }

  inline
  const ::common::units_decimal_nonnegative& metadata::
  current_time () const
  {
    return *this->current_time_;
  }

  inline
  ::common::units_decimal_nonnegative& metadata::
  current_time ()
  {
    return *this->current_time_;
  }

  inline
  void metadata::
  current_time (::common::units_decimal_nonnegative* x)
  {
    delete this->current_time_;
    this->current_time_ = x;
  }

  inline
  ::common::units_decimal_nonnegative* metadata::
  current_time_detach ()
  {
    ::common::units_decimal_nonnegative* r = this->current_time_;
    this->current_time_ = 0;
    return r;
  }

  inline
  bool metadata::
  current_runtime_present () const
  {
    return this->current_runtime_ != 0;
  }

  inline
  const ::common::units_decimal_nonnegative& metadata::
  current_runtime () const
  {
    return *this->current_runtime_;
  }

  inline
  ::common::units_decimal_nonnegative& metadata::
  current_runtime ()
  {
    return *this->current_runtime_;
  }

  inline
  void metadata::
  current_runtime (::common::units_decimal_nonnegative* x)
  {
    delete this->current_runtime_;
    this->current_runtime_ = x;
  }

  inline
  ::common::units_decimal_nonnegative* metadata::
  current_runtime_detach ()
  {
    ::common::units_decimal_nonnegative* r = this->current_runtime_;
    this->current_runtime_ = 0;
    return r;
  }

  inline
  bool metadata::
  created_present () const
  {
    return this->created_present_;
  }

  inline
  void metadata::
  created_present (bool x)
  {
    this->created_present_ = x;
  }

  inline
  const ::xml_schema::date_time& metadata::
  created () const
  {
    return this->created_;
  }

  inline
  ::xml_schema::date_time& metadata::
  created ()
  {
    return this->created_;
  }

  inline
  void metadata::
  created (const ::xml_schema::date_time& x)
  {
    this->created_ = x;
    this->created_present_ = true;
  }

  inline
  bool metadata::
  last_modified_present () const
  {
    return this->last_modified_present_;
  }

  inline
  void metadata::
  last_modified_present (bool x)
  {
    this->last_modified_present_ = x;
  }

  inline
  const ::xml_schema::date_time& metadata::
  last_modified () const
  {
    return this->last_modified_;
  }

  inline
  ::xml_schema::date_time& metadata::
  last_modified ()
  {
    return this->last_modified_;
  }

  inline
  void metadata::
  last_modified (const ::xml_schema::date_time& x)
  {
    this->last_modified_ = x;
    this->last_modified_present_ = true;
  }

  inline
  bool metadata::
  notes_present () const
  {
    return this->notes_present_;
  }

  inline
  void metadata::
  notes_present (bool x)
  {
    this->notes_present_ = x;
  }

  inline
  const ::std::string& metadata::
  notes () const
  {
    return this->notes_;
  }

  inline
  ::std::string& metadata::
  notes ()
  {
    return this->notes_;
  }

  inline
  void metadata::
  notes (const ::std::string& x)
  {
    this->notes_ = x;
    this->notes_present_ = true;
  }

  inline
  bool metadata::
  custom_present () const
  {
    return this->custom_ != 0;
  }

  inline
  const ::common::custom& metadata::
  custom () const
  {
    return *this->custom_;
  }

  inline
  ::common::custom& metadata::
  custom ()
  {
    return *this->custom_;
  }

  inline
  void metadata::
  custom (::common::custom* x)
  {
    delete this->custom_;
    this->custom_ = x;
  }

  inline
  ::common::custom* metadata::
  custom_detach ()
  {
    ::common::custom* r = this->custom_;
    this->custom_ = 0;
    return r;
  }
}

// Begin epilogue.
//
//
// End epilogue.

#endif // METADATA_IPP
