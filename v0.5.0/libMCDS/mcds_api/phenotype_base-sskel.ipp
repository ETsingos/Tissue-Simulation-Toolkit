// Copyright (c) 2005-2016 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

// Begin prologue.
//
//
// End prologue.

namespace phenotype_base
{
  // phenotype_type_sskel
  //

  inline
  phenotype_type_sskel::
  phenotype_type_sskel (::xml_schema::string_sskel* tiein)
  : ::xml_schema::string_sskel (tiein, 0),
    phenotype_type_impl_ (0)
  {
  }

  inline
  phenotype_type_sskel::
  phenotype_type_sskel (phenotype_type_sskel* impl, void*)
  : ::xml_schema::string_sskel (impl, 0),
    phenotype_type_impl_ (impl)
  {
  }

  // phenotype_base_sskel
  //

  inline
  void phenotype_base_sskel::
  type_serializer (::phenotype_base::phenotype_type_sskel& type)
  {
    this->type_serializer_ = &type;
  }

  inline
  void phenotype_base_sskel::
  adhesion_serializer (::phenotype_common::adhesion_sskel& s)
  {
    this->adhesion_serializer_ = &s;
  }

  inline
  void phenotype_base_sskel::
  adhesion_serializer (::xml_schema::serializer_map& m)
  {
    this->adhesion_serializer_map_ = &m;
  }

  inline
  void phenotype_base_sskel::
  geometrical_properties_serializer (::phenotype_common::geometrical_properties_sskel& s)
  {
    this->geometrical_properties_serializer_ = &s;
  }

  inline
  void phenotype_base_sskel::
  geometrical_properties_serializer (::xml_schema::serializer_map& m)
  {
    this->geometrical_properties_serializer_map_ = &m;
  }

  inline
  void phenotype_base_sskel::
  mass_serializer (::phenotype_common::mass_sskel& s)
  {
    this->mass_serializer_ = &s;
  }

  inline
  void phenotype_base_sskel::
  mass_serializer (::xml_schema::serializer_map& m)
  {
    this->mass_serializer_map_ = &m;
  }

  inline
  void phenotype_base_sskel::
  mechanics_serializer (::phenotype_common::mechanics_sskel& s)
  {
    this->mechanics_serializer_ = &s;
  }

  inline
  void phenotype_base_sskel::
  mechanics_serializer (::xml_schema::serializer_map& m)
  {
    this->mechanics_serializer_map_ = &m;
  }

  inline
  void phenotype_base_sskel::
  motility_serializer (::phenotype_common::motility_sskel& s)
  {
    this->motility_serializer_ = &s;
  }

  inline
  void phenotype_base_sskel::
  motility_serializer (::xml_schema::serializer_map& m)
  {
    this->motility_serializer_map_ = &m;
  }

  inline
  void phenotype_base_sskel::
  PKPD_serializer (::pkpd::PKPD_sskel& s)
  {
    this->PKPD_serializer_ = &s;
  }

  inline
  void phenotype_base_sskel::
  PKPD_serializer (::xml_schema::serializer_map& m)
  {
    this->PKPD_serializer_map_ = &m;
  }

  inline
  void phenotype_base_sskel::
  timescale_serializer (::phenotype_base::expected_timescale_sskel& s)
  {
    this->timescale_serializer_ = &s;
  }

  inline
  void phenotype_base_sskel::
  timescale_serializer (::xml_schema::serializer_map& m)
  {
    this->timescale_serializer_map_ = &m;
  }

  inline
  void phenotype_base_sskel::
  transport_processes_serializer (::phenotype_common::transport_processes_sskel& s)
  {
    this->transport_processes_serializer_ = &s;
  }

  inline
  void phenotype_base_sskel::
  transport_processes_serializer (::xml_schema::serializer_map& m)
  {
    this->transport_processes_serializer_map_ = &m;
  }

  inline
  void phenotype_base_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void phenotype_base_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void phenotype_base_sskel::
  serializers (::phenotype_base::phenotype_type_sskel& type,
               ::phenotype_common::adhesion_sskel& adhesion,
               ::phenotype_common::geometrical_properties_sskel& geometrical_properties,
               ::phenotype_common::mass_sskel& mass,
               ::phenotype_common::mechanics_sskel& mechanics,
               ::phenotype_common::motility_sskel& motility,
               ::pkpd::PKPD_sskel& PKPD,
               ::phenotype_base::expected_timescale_sskel& timescale,
               ::phenotype_common::transport_processes_sskel& transport_processes,
               ::common::custom_sskel& custom)
  {
    this->type_serializer_ = &type;
    this->adhesion_serializer_ = &adhesion;
    this->geometrical_properties_serializer_ = &geometrical_properties;
    this->mass_serializer_ = &mass;
    this->mechanics_serializer_ = &mechanics;
    this->motility_serializer_ = &motility;
    this->PKPD_serializer_ = &PKPD;
    this->timescale_serializer_ = &timescale;
    this->transport_processes_serializer_ = &transport_processes;
    this->custom_serializer_ = &custom;
  }

  inline
  void phenotype_base_sskel::
  serializer_maps (::xml_schema::serializer_map& adhesion,
                   ::xml_schema::serializer_map& geometrical_properties,
                   ::xml_schema::serializer_map& mass,
                   ::xml_schema::serializer_map& mechanics,
                   ::xml_schema::serializer_map& motility,
                   ::xml_schema::serializer_map& PKPD,
                   ::xml_schema::serializer_map& timescale,
                   ::xml_schema::serializer_map& transport_processes,
                   ::xml_schema::serializer_map& custom)
  {
    this->adhesion_serializer_map_ = &adhesion;
    this->geometrical_properties_serializer_map_ = &geometrical_properties;
    this->mass_serializer_map_ = &mass;
    this->mechanics_serializer_map_ = &mechanics;
    this->motility_serializer_map_ = &motility;
    this->PKPD_serializer_map_ = &PKPD;
    this->timescale_serializer_map_ = &timescale;
    this->transport_processes_serializer_map_ = &transport_processes;
    this->custom_serializer_map_ = &custom;
  }

  inline
  phenotype_base_sskel::
  phenotype_base_sskel ()
  : phenotype_base_impl_ (0),
    type_serializer_ (0),
    adhesion_serializer_ (0),
    adhesion_serializer_map_ (0),
    geometrical_properties_serializer_ (0),
    geometrical_properties_serializer_map_ (0),
    mass_serializer_ (0),
    mass_serializer_map_ (0),
    mechanics_serializer_ (0),
    mechanics_serializer_map_ (0),
    motility_serializer_ (0),
    motility_serializer_map_ (0),
    PKPD_serializer_ (0),
    PKPD_serializer_map_ (0),
    timescale_serializer_ (0),
    timescale_serializer_map_ (0),
    transport_processes_serializer_ (0),
    transport_processes_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  phenotype_base_sskel::
  phenotype_base_sskel (phenotype_base_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    phenotype_base_impl_ (impl),
    type_serializer_ (0),
    adhesion_serializer_ (0),
    adhesion_serializer_map_ (0),
    geometrical_properties_serializer_ (0),
    geometrical_properties_serializer_map_ (0),
    mass_serializer_ (0),
    mass_serializer_map_ (0),
    mechanics_serializer_ (0),
    mechanics_serializer_map_ (0),
    motility_serializer_ (0),
    motility_serializer_map_ (0),
    PKPD_serializer_ (0),
    PKPD_serializer_map_ (0),
    timescale_serializer_ (0),
    timescale_serializer_map_ (0),
    transport_processes_serializer_ (0),
    transport_processes_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  // expected_timescale_sskel
  //

  inline
  void expected_timescale_sskel::
  cell_cycle_ID_serializer (::xml_schema::unsigned_int_sskel& cell_cycle_ID)
  {
    this->cell_cycle_ID_serializer_ = &cell_cycle_ID;
  }

  inline
  void expected_timescale_sskel::
  cell_cycle_phase_ID_serializer (::xml_schema::unsigned_int_sskel& cell_cycle_phase_ID)
  {
    this->cell_cycle_phase_ID_serializer_ = &cell_cycle_phase_ID;
  }

  inline
  void expected_timescale_sskel::
  cell_death_ID_serializer (::xml_schema::unsigned_int_sskel& cell_death_ID)
  {
    this->cell_death_ID_serializer_ = &cell_death_ID;
  }

  inline
  void expected_timescale_sskel::
  serializers (::xml_schema::string_sskel& units,
               ::xml_schema::string_sskel& measurement_type,
               ::xml_schema::double_sskel& uncertainty,
               ::xml_schema::double_sskel& negative_uncertainty,
               ::xml_schema::double_sskel& positive_uncertainty,
               ::xml_schema::double_sskel& uncertainty_percentage,
               ::xml_schema::double_sskel& negative_uncertainty_percentage,
               ::xml_schema::double_sskel& positive_uncertainty_percentage,
               ::xml_schema::double_sskel& median,
               ::xml_schema::double_sskel& standard_deviation,
               ::common::two_doubles_sskel& interquartile_range,
               ::common::two_doubles_sskel& range,
               ::xml_schema::double_sskel& min,
               ::xml_schema::double_sskel& max,
               ::xml_schema::double_sskel& standard_error,
               ::xml_schema::double_sskel& standard_error_of_the_mean,
               ::xml_schema::int_sskel& number_obs,
               ::xml_schema::double_sskel& skewnesss,
               ::xml_schema::double_sskel& kurtosis,
               ::xml_schema::unsigned_int_sskel& cell_cycle_ID,
               ::xml_schema::unsigned_int_sskel& cell_cycle_phase_ID,
               ::xml_schema::unsigned_int_sskel& cell_death_ID)
  {
    this->units_serializer_ = &units;
    this->measurement_type_serializer_ = &measurement_type;
    this->uncertainty_serializer_ = &uncertainty;
    this->negative_uncertainty_serializer_ = &negative_uncertainty;
    this->positive_uncertainty_serializer_ = &positive_uncertainty;
    this->uncertainty_percentage_serializer_ = &uncertainty_percentage;
    this->negative_uncertainty_percentage_serializer_ = &negative_uncertainty_percentage;
    this->positive_uncertainty_percentage_serializer_ = &positive_uncertainty_percentage;
    this->median_serializer_ = &median;
    this->standard_deviation_serializer_ = &standard_deviation;
    this->interquartile_range_serializer_ = &interquartile_range;
    this->range_serializer_ = &range;
    this->min_serializer_ = &min;
    this->max_serializer_ = &max;
    this->standard_error_serializer_ = &standard_error;
    this->standard_error_of_the_mean_serializer_ = &standard_error_of_the_mean;
    this->number_obs_serializer_ = &number_obs;
    this->skewnesss_serializer_ = &skewnesss;
    this->kurtosis_serializer_ = &kurtosis;
    this->cell_cycle_ID_serializer_ = &cell_cycle_ID;
    this->cell_cycle_phase_ID_serializer_ = &cell_cycle_phase_ID;
    this->cell_death_ID_serializer_ = &cell_death_ID;
  }

  inline
  expected_timescale_sskel::
  expected_timescale_sskel (::common::units_decimal_nonnegative_sskel* tiein)
  : ::common::units_decimal_nonnegative_sskel (tiein, 0),
    expected_timescale_impl_ (0),
    cell_cycle_ID_serializer_ (0),
    cell_cycle_phase_ID_serializer_ (0),
    cell_death_ID_serializer_ (0)
  {
  }

  inline
  expected_timescale_sskel::
  expected_timescale_sskel (expected_timescale_sskel* impl, void*)
  : ::common::units_decimal_nonnegative_sskel (impl, 0),
    expected_timescale_impl_ (impl),
    cell_cycle_ID_serializer_ (0),
    cell_cycle_phase_ID_serializer_ (0),
    cell_death_ID_serializer_ (0)
  {
  }

  // cell_parts_sskel
  //

  inline
  void cell_parts_sskel::
  name_serializer (::xml_schema::string_sskel& name)
  {
    this->name_serializer_ = &name;
  }

  inline
  void cell_parts_sskel::
  ID_serializer (::xml_schema::unsigned_int_sskel& ID)
  {
    this->ID_serializer_ = &ID;
  }

  inline
  void cell_parts_sskel::
  phenotype_serializer (::phenotype_base::phenotype_base_sskel& s)
  {
    this->phenotype_serializer_ = &s;
  }

  inline
  void cell_parts_sskel::
  phenotype_serializer (::xml_schema::serializer_map& m)
  {
    this->phenotype_serializer_map_ = &m;
  }

  inline
  void cell_parts_sskel::
  cell_part_serializer (::phenotype_base::cell_parts_sskel& s)
  {
    this->cell_part_serializer_ = &s;
  }

  inline
  void cell_parts_sskel::
  cell_part_serializer (::xml_schema::serializer_map& m)
  {
    this->cell_part_serializer_map_ = &m;
  }

  inline
  void cell_parts_sskel::
  custom_serializer (::common::custom_sskel& s)
  {
    this->custom_serializer_ = &s;
  }

  inline
  void cell_parts_sskel::
  custom_serializer (::xml_schema::serializer_map& m)
  {
    this->custom_serializer_map_ = &m;
  }

  inline
  void cell_parts_sskel::
  serializers (::xml_schema::string_sskel& name,
               ::xml_schema::unsigned_int_sskel& ID,
               ::phenotype_base::phenotype_base_sskel& phenotype,
               ::phenotype_base::cell_parts_sskel& cell_part,
               ::common::custom_sskel& custom)
  {
    this->name_serializer_ = &name;
    this->ID_serializer_ = &ID;
    this->phenotype_serializer_ = &phenotype;
    this->cell_part_serializer_ = &cell_part;
    this->custom_serializer_ = &custom;
  }

  inline
  void cell_parts_sskel::
  serializer_maps (::xml_schema::serializer_map& phenotype,
                   ::xml_schema::serializer_map& cell_part,
                   ::xml_schema::serializer_map& custom)
  {
    this->phenotype_serializer_map_ = &phenotype;
    this->cell_part_serializer_map_ = &cell_part;
    this->custom_serializer_map_ = &custom;
  }

  inline
  cell_parts_sskel::
  cell_parts_sskel ()
  : cell_parts_impl_ (0),
    name_serializer_ (0),
    ID_serializer_ (0),
    phenotype_serializer_ (0),
    phenotype_serializer_map_ (0),
    cell_part_serializer_ (0),
    cell_part_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }

  inline
  cell_parts_sskel::
  cell_parts_sskel (cell_parts_sskel* impl, void*)
  : ::xsde::cxx::serializer::non_validating::complex_content (impl, 0),
    cell_parts_impl_ (impl),
    name_serializer_ (0),
    ID_serializer_ (0),
    phenotype_serializer_ (0),
    phenotype_serializer_map_ (0),
    cell_part_serializer_ (0),
    cell_part_serializer_map_ (0),
    custom_serializer_ (0),
    custom_serializer_map_ (0)
  {
  }
}

// Begin epilogue.
//
//
// End epilogue.

