// Copyright (c) 2005-2016 Code Synthesis Tools CC
//
// This program was generated by CodeSynthesis XSD/e, an XML Schema
// to C++ data binding compiler for embedded systems.
//
// This program is free software; you can redistribute it and/or modify
// it under the terms of the GNU General Public License version 2 as
// published by the Free Software Foundation.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
//
// Furthermore, Code Synthesis Tools CC makes a special exception for
// the Free/Libre and Open Source Software (FLOSS) which is described
// in the accompanying FLOSSE file.
//

#ifndef PKPD_IPP
#define PKPD_IPP

// Begin prologue.
//
//
// End prologue.

#include "common.ipp"

#include "variables.ipp"

namespace pkpd
{
  // pharmacokinetics
  //

  inline
  bool pharmacokinetics::
  inactivation_rate_present () const
  {
    return this->inactivation_rate_ != 0;
  }

  inline
  const ::common::units_decimal& pharmacokinetics::
  inactivation_rate () const
  {
    return *this->inactivation_rate_;
  }

  inline
  ::common::units_decimal& pharmacokinetics::
  inactivation_rate ()
  {
    return *this->inactivation_rate_;
  }

  inline
  void pharmacokinetics::
  inactivation_rate (::common::units_decimal* x)
  {
    delete this->inactivation_rate_;
    this->inactivation_rate_ = x;
  }

  inline
  ::common::units_decimal* pharmacokinetics::
  inactivation_rate_detach ()
  {
    ::common::units_decimal* r = this->inactivation_rate_;
    this->inactivation_rate_ = 0;
    return r;
  }

  inline
  bool pharmacokinetics::
  half_life_present () const
  {
    return this->half_life_ != 0;
  }

  inline
  const ::common::units_decimal& pharmacokinetics::
  half_life () const
  {
    return *this->half_life_;
  }

  inline
  ::common::units_decimal& pharmacokinetics::
  half_life ()
  {
    return *this->half_life_;
  }

  inline
  void pharmacokinetics::
  half_life (::common::units_decimal* x)
  {
    delete this->half_life_;
    this->half_life_ = x;
  }

  inline
  ::common::units_decimal* pharmacokinetics::
  half_life_detach ()
  {
    ::common::units_decimal* r = this->half_life_;
    this->half_life_ = 0;
    return r;
  }

  // drug
  //

  inline
  drug::choice_arm_tag drug::
  choice_arm () const
  {
    return this->choice_arm_;
  }

  inline
  const ::pkpd::dose& drug::
  dose () const
  {
    return *this->choice_.dose_;
  }

  inline
  ::pkpd::dose& drug::
  dose ()
  {
    return *this->choice_.dose_;
  }

  inline
  void drug::
  dose (::pkpd::dose* x)
  {
    if (this->choice_arm_ != dose_tag)
      this->choice_arm (dose_tag);
    else
    {
      delete this->choice_.dose_;
    }

    this->choice_.dose_ = x;
  }

  inline
  ::pkpd::dose* drug::
  dose_detach ()
  {
    ::pkpd::dose* r = this->choice_.dose_;
    this->choice_.dose_ = 0;
    return r;
  }

  inline
  const ::pkpd::pharmacokinetics& drug::
  pharmacokinetics () const
  {
    return *this->choice_.pharmacokinetics_;
  }

  inline
  ::pkpd::pharmacokinetics& drug::
  pharmacokinetics ()
  {
    return *this->choice_.pharmacokinetics_;
  }

  inline
  void drug::
  pharmacokinetics (::pkpd::pharmacokinetics* x)
  {
    if (this->choice_arm_ != pharmacokinetics_tag)
      this->choice_arm (pharmacokinetics_tag);
    else
    {
      delete this->choice_.pharmacokinetics_;
    }

    this->choice_.pharmacokinetics_ = x;
  }

  inline
  ::pkpd::pharmacokinetics* drug::
  pharmacokinetics_detach ()
  {
    ::pkpd::pharmacokinetics* r = this->choice_.pharmacokinetics_;
    this->choice_.pharmacokinetics_ = 0;
    return r;
  }

  // drug_dose
  //

  inline
  bool drug_dose::
  ID_present () const
  {
    return this->ID_present_;
  }

  inline
  void drug_dose::
  ID_present (bool x)
  {
    this->ID_present_ = x;
  }

  inline
  unsigned short drug_dose::
  ID () const
  {
    return this->ID_;
  }

  inline
  unsigned short& drug_dose::
  ID ()
  {
    return this->ID_;
  }

  inline
  void drug_dose::
  ID (unsigned short x)
  {
    this->ID_ = x;
    this->ID_present_ = true;
  }

  inline
  bool drug_dose::
  ChEBI_ID_present () const
  {
    return this->ChEBI_ID_present_;
  }

  inline
  void drug_dose::
  ChEBI_ID_present (bool x)
  {
    this->ChEBI_ID_present_ = x;
  }

  inline
  const ::std::string& drug_dose::
  ChEBI_ID () const
  {
    return this->ChEBI_ID_;
  }

  inline
  ::std::string& drug_dose::
  ChEBI_ID ()
  {
    return this->ChEBI_ID_;
  }

  inline
  void drug_dose::
  ChEBI_ID (const ::std::string& x)
  {
    this->ChEBI_ID_ = x;
    this->ChEBI_ID_present_ = true;
  }

  inline
  bool drug_dose::
  MeSH_ID_present () const
  {
    return this->MeSH_ID_present_;
  }

  inline
  void drug_dose::
  MeSH_ID_present (bool x)
  {
    this->MeSH_ID_present_ = x;
  }

  inline
  const ::std::string& drug_dose::
  MeSH_ID () const
  {
    return this->MeSH_ID_;
  }

  inline
  ::std::string& drug_dose::
  MeSH_ID ()
  {
    return this->MeSH_ID_;
  }

  inline
  void drug_dose::
  MeSH_ID (const ::std::string& x)
  {
    this->MeSH_ID_ = x;
    this->MeSH_ID_present_ = true;
  }

  inline
  bool drug_dose::
  DrugBank_ID_present () const
  {
    return this->DrugBank_ID_present_;
  }

  inline
  void drug_dose::
  DrugBank_ID_present (bool x)
  {
    this->DrugBank_ID_present_ = x;
  }

  inline
  const ::std::string& drug_dose::
  DrugBank_ID () const
  {
    return this->DrugBank_ID_;
  }

  inline
  ::std::string& drug_dose::
  DrugBank_ID ()
  {
    return this->DrugBank_ID_;
  }

  inline
  void drug_dose::
  DrugBank_ID (const ::std::string& x)
  {
    this->DrugBank_ID_ = x;
    this->DrugBank_ID_present_ = true;
  }

  inline
  bool drug_dose::
  GMO_ID_present () const
  {
    return this->GMO_ID_present_;
  }

  inline
  void drug_dose::
  GMO_ID_present (bool x)
  {
    this->GMO_ID_present_ = x;
  }

  inline
  const ::std::string& drug_dose::
  GMO_ID () const
  {
    return this->GMO_ID_;
  }

  inline
  ::std::string& drug_dose::
  GMO_ID ()
  {
    return this->GMO_ID_;
  }

  inline
  void drug_dose::
  GMO_ID (const ::std::string& x)
  {
    this->GMO_ID_ = x;
    this->GMO_ID_present_ = true;
  }

  inline
  bool drug_dose::
  GO_ID_present () const
  {
    return this->GO_ID_present_;
  }

  inline
  void drug_dose::
  GO_ID_present (bool x)
  {
    this->GO_ID_present_ = x;
  }

  inline
  const ::std::string& drug_dose::
  GO_ID () const
  {
    return this->GO_ID_;
  }

  inline
  ::std::string& drug_dose::
  GO_ID ()
  {
    return this->GO_ID_;
  }

  inline
  void drug_dose::
  GO_ID (const ::std::string& x)
  {
    this->GO_ID_ = x;
    this->GO_ID_present_ = true;
  }

  inline
  bool drug_dose::
  UniProt_ID_present () const
  {
    return this->UniProt_ID_present_;
  }

  inline
  void drug_dose::
  UniProt_ID_present (bool x)
  {
    this->UniProt_ID_present_ = x;
  }

  inline
  const ::std::string& drug_dose::
  UniProt_ID () const
  {
    return this->UniProt_ID_;
  }

  inline
  ::std::string& drug_dose::
  UniProt_ID ()
  {
    return this->UniProt_ID_;
  }

  inline
  void drug_dose::
  UniProt_ID (const ::std::string& x)
  {
    this->UniProt_ID_ = x;
    this->UniProt_ID_present_ = true;
  }

  inline
  bool drug_dose::
  PR_ID_present () const
  {
    return this->PR_ID_present_;
  }

  inline
  void drug_dose::
  PR_ID_present (bool x)
  {
    this->PR_ID_present_ = x;
  }

  inline
  const ::std::string& drug_dose::
  PR_ID () const
  {
    return this->PR_ID_;
  }

  inline
  ::std::string& drug_dose::
  PR_ID ()
  {
    return this->PR_ID_;
  }

  inline
  void drug_dose::
  PR_ID (const ::std::string& x)
  {
    this->PR_ID_ = x;
    this->PR_ID_present_ = true;
  }

  inline
  bool drug_dose::
  name_present () const
  {
    return this->name_present_;
  }

  inline
  void drug_dose::
  name_present (bool x)
  {
    this->name_present_ = x;
  }

  inline
  const ::std::string& drug_dose::
  name () const
  {
    return this->name_;
  }

  inline
  ::std::string& drug_dose::
  name ()
  {
    return this->name_;
  }

  inline
  void drug_dose::
  name (const ::std::string& x)
  {
    this->name_ = x;
    this->name_present_ = true;
  }

  inline
  bool drug_dose::
  units_present () const
  {
    return this->units_present_;
  }

  inline
  void drug_dose::
  units_present (bool x)
  {
    this->units_present_ = x;
  }

  inline
  const ::std::string& drug_dose::
  units () const
  {
    return this->units_;
  }

  inline
  ::std::string& drug_dose::
  units ()
  {
    return this->units_;
  }

  inline
  void drug_dose::
  units (const ::std::string& x)
  {
    this->units_ = x;
    this->units_present_ = true;
  }

  inline
  const ::pkpd::dose& drug_dose::
  dose () const
  {
    return *this->dose_;
  }

  inline
  ::pkpd::dose& drug_dose::
  dose ()
  {
    return *this->dose_;
  }

  inline
  void drug_dose::
  dose (::pkpd::dose* x)
  {
    delete this->dose_;
    this->dose_ = x;
  }

  inline
  ::pkpd::dose* drug_dose::
  dose_detach ()
  {
    ::pkpd::dose* r = this->dose_;
    this->dose_ = 0;
    return r;
  }

  // drug_pk
  //

  inline
  bool drug_pk::
  ID_present () const
  {
    return this->ID_present_;
  }

  inline
  void drug_pk::
  ID_present (bool x)
  {
    this->ID_present_ = x;
  }

  inline
  unsigned short drug_pk::
  ID () const
  {
    return this->ID_;
  }

  inline
  unsigned short& drug_pk::
  ID ()
  {
    return this->ID_;
  }

  inline
  void drug_pk::
  ID (unsigned short x)
  {
    this->ID_ = x;
    this->ID_present_ = true;
  }

  inline
  bool drug_pk::
  ChEBI_ID_present () const
  {
    return this->ChEBI_ID_present_;
  }

  inline
  void drug_pk::
  ChEBI_ID_present (bool x)
  {
    this->ChEBI_ID_present_ = x;
  }

  inline
  const ::std::string& drug_pk::
  ChEBI_ID () const
  {
    return this->ChEBI_ID_;
  }

  inline
  ::std::string& drug_pk::
  ChEBI_ID ()
  {
    return this->ChEBI_ID_;
  }

  inline
  void drug_pk::
  ChEBI_ID (const ::std::string& x)
  {
    this->ChEBI_ID_ = x;
    this->ChEBI_ID_present_ = true;
  }

  inline
  bool drug_pk::
  MeSH_ID_present () const
  {
    return this->MeSH_ID_present_;
  }

  inline
  void drug_pk::
  MeSH_ID_present (bool x)
  {
    this->MeSH_ID_present_ = x;
  }

  inline
  const ::std::string& drug_pk::
  MeSH_ID () const
  {
    return this->MeSH_ID_;
  }

  inline
  ::std::string& drug_pk::
  MeSH_ID ()
  {
    return this->MeSH_ID_;
  }

  inline
  void drug_pk::
  MeSH_ID (const ::std::string& x)
  {
    this->MeSH_ID_ = x;
    this->MeSH_ID_present_ = true;
  }

  inline
  bool drug_pk::
  DrugBank_ID_present () const
  {
    return this->DrugBank_ID_present_;
  }

  inline
  void drug_pk::
  DrugBank_ID_present (bool x)
  {
    this->DrugBank_ID_present_ = x;
  }

  inline
  const ::std::string& drug_pk::
  DrugBank_ID () const
  {
    return this->DrugBank_ID_;
  }

  inline
  ::std::string& drug_pk::
  DrugBank_ID ()
  {
    return this->DrugBank_ID_;
  }

  inline
  void drug_pk::
  DrugBank_ID (const ::std::string& x)
  {
    this->DrugBank_ID_ = x;
    this->DrugBank_ID_present_ = true;
  }

  inline
  bool drug_pk::
  GMO_ID_present () const
  {
    return this->GMO_ID_present_;
  }

  inline
  void drug_pk::
  GMO_ID_present (bool x)
  {
    this->GMO_ID_present_ = x;
  }

  inline
  const ::std::string& drug_pk::
  GMO_ID () const
  {
    return this->GMO_ID_;
  }

  inline
  ::std::string& drug_pk::
  GMO_ID ()
  {
    return this->GMO_ID_;
  }

  inline
  void drug_pk::
  GMO_ID (const ::std::string& x)
  {
    this->GMO_ID_ = x;
    this->GMO_ID_present_ = true;
  }

  inline
  bool drug_pk::
  GO_ID_present () const
  {
    return this->GO_ID_present_;
  }

  inline
  void drug_pk::
  GO_ID_present (bool x)
  {
    this->GO_ID_present_ = x;
  }

  inline
  const ::std::string& drug_pk::
  GO_ID () const
  {
    return this->GO_ID_;
  }

  inline
  ::std::string& drug_pk::
  GO_ID ()
  {
    return this->GO_ID_;
  }

  inline
  void drug_pk::
  GO_ID (const ::std::string& x)
  {
    this->GO_ID_ = x;
    this->GO_ID_present_ = true;
  }

  inline
  bool drug_pk::
  UniProt_ID_present () const
  {
    return this->UniProt_ID_present_;
  }

  inline
  void drug_pk::
  UniProt_ID_present (bool x)
  {
    this->UniProt_ID_present_ = x;
  }

  inline
  const ::std::string& drug_pk::
  UniProt_ID () const
  {
    return this->UniProt_ID_;
  }

  inline
  ::std::string& drug_pk::
  UniProt_ID ()
  {
    return this->UniProt_ID_;
  }

  inline
  void drug_pk::
  UniProt_ID (const ::std::string& x)
  {
    this->UniProt_ID_ = x;
    this->UniProt_ID_present_ = true;
  }

  inline
  bool drug_pk::
  PR_ID_present () const
  {
    return this->PR_ID_present_;
  }

  inline
  void drug_pk::
  PR_ID_present (bool x)
  {
    this->PR_ID_present_ = x;
  }

  inline
  const ::std::string& drug_pk::
  PR_ID () const
  {
    return this->PR_ID_;
  }

  inline
  ::std::string& drug_pk::
  PR_ID ()
  {
    return this->PR_ID_;
  }

  inline
  void drug_pk::
  PR_ID (const ::std::string& x)
  {
    this->PR_ID_ = x;
    this->PR_ID_present_ = true;
  }

  inline
  bool drug_pk::
  name_present () const
  {
    return this->name_present_;
  }

  inline
  void drug_pk::
  name_present (bool x)
  {
    this->name_present_ = x;
  }

  inline
  const ::std::string& drug_pk::
  name () const
  {
    return this->name_;
  }

  inline
  ::std::string& drug_pk::
  name ()
  {
    return this->name_;
  }

  inline
  void drug_pk::
  name (const ::std::string& x)
  {
    this->name_ = x;
    this->name_present_ = true;
  }

  inline
  bool drug_pk::
  units_present () const
  {
    return this->units_present_;
  }

  inline
  void drug_pk::
  units_present (bool x)
  {
    this->units_present_ = x;
  }

  inline
  const ::std::string& drug_pk::
  units () const
  {
    return this->units_;
  }

  inline
  ::std::string& drug_pk::
  units ()
  {
    return this->units_;
  }

  inline
  void drug_pk::
  units (const ::std::string& x)
  {
    this->units_ = x;
    this->units_present_ = true;
  }

  inline
  const ::pkpd::pharmacokinetics& drug_pk::
  pharmacokinetics () const
  {
    return *this->pharmacokinetics_;
  }

  inline
  ::pkpd::pharmacokinetics& drug_pk::
  pharmacokinetics ()
  {
    return *this->pharmacokinetics_;
  }

  inline
  void drug_pk::
  pharmacokinetics (::pkpd::pharmacokinetics* x)
  {
    delete this->pharmacokinetics_;
    this->pharmacokinetics_ = x;
  }

  inline
  ::pkpd::pharmacokinetics* drug_pk::
  pharmacokinetics_detach ()
  {
    ::pkpd::pharmacokinetics* r = this->pharmacokinetics_;
    this->pharmacokinetics_ = 0;
    return r;
  }

  // dose
  //

  inline
  bool dose::
  type_present () const
  {
    return this->type_present_;
  }

  inline
  void dose::
  type_present (bool x)
  {
    this->type_present_ = x;
  }

  inline
  const ::std::string& dose::
  type () const
  {
    return this->type_;
  }

  inline
  ::std::string& dose::
  type ()
  {
    return this->type_;
  }

  inline
  void dose::
  type (const ::std::string& x)
  {
    this->type_ = x;
    this->type_present_ = true;
  }

  // therapy
  //

  inline
  const therapy::drug_sequence& therapy::
  drug () const
  {
    return this->drug_;
  }

  inline
  therapy::drug_sequence& therapy::
  drug ()
  {
    return this->drug_;
  }

  // response
  //

  inline
  bool response::
  maximum_birth_inhibition_present () const
  {
    return this->maximum_birth_inhibition_ != 0;
  }

  inline
  const ::common::units_decimal& response::
  maximum_birth_inhibition () const
  {
    return *this->maximum_birth_inhibition_;
  }

  inline
  ::common::units_decimal& response::
  maximum_birth_inhibition ()
  {
    return *this->maximum_birth_inhibition_;
  }

  inline
  void response::
  maximum_birth_inhibition (::common::units_decimal* x)
  {
    delete this->maximum_birth_inhibition_;
    this->maximum_birth_inhibition_ = x;
  }

  inline
  ::common::units_decimal* response::
  maximum_birth_inhibition_detach ()
  {
    ::common::units_decimal* r = this->maximum_birth_inhibition_;
    this->maximum_birth_inhibition_ = 0;
    return r;
  }

  inline
  bool response::
  maximum_birth_inhibition_time_present () const
  {
    return this->maximum_birth_inhibition_time_ != 0;
  }

  inline
  const ::common::units_decimal& response::
  maximum_birth_inhibition_time () const
  {
    return *this->maximum_birth_inhibition_time_;
  }

  inline
  ::common::units_decimal& response::
  maximum_birth_inhibition_time ()
  {
    return *this->maximum_birth_inhibition_time_;
  }

  inline
  void response::
  maximum_birth_inhibition_time (::common::units_decimal* x)
  {
    delete this->maximum_birth_inhibition_time_;
    this->maximum_birth_inhibition_time_ = x;
  }

  inline
  ::common::units_decimal* response::
  maximum_birth_inhibition_time_detach ()
  {
    ::common::units_decimal* r = this->maximum_birth_inhibition_time_;
    this->maximum_birth_inhibition_time_ = 0;
    return r;
  }

  inline
  bool response::
  birth_inhibition_recovery_rate_present () const
  {
    return this->birth_inhibition_recovery_rate_ != 0;
  }

  inline
  const ::common::units_decimal& response::
  birth_inhibition_recovery_rate () const
  {
    return *this->birth_inhibition_recovery_rate_;
  }

  inline
  ::common::units_decimal& response::
  birth_inhibition_recovery_rate ()
  {
    return *this->birth_inhibition_recovery_rate_;
  }

  inline
  void response::
  birth_inhibition_recovery_rate (::common::units_decimal* x)
  {
    delete this->birth_inhibition_recovery_rate_;
    this->birth_inhibition_recovery_rate_ = x;
  }

  inline
  ::common::units_decimal* response::
  birth_inhibition_recovery_rate_detach ()
  {
    ::common::units_decimal* r = this->birth_inhibition_recovery_rate_;
    this->birth_inhibition_recovery_rate_ = 0;
    return r;
  }

  inline
  bool response::
  maximum_death_rate_present () const
  {
    return this->maximum_death_rate_ != 0;
  }

  inline
  const ::common::units_decimal& response::
  maximum_death_rate () const
  {
    return *this->maximum_death_rate_;
  }

  inline
  ::common::units_decimal& response::
  maximum_death_rate ()
  {
    return *this->maximum_death_rate_;
  }

  inline
  void response::
  maximum_death_rate (::common::units_decimal* x)
  {
    delete this->maximum_death_rate_;
    this->maximum_death_rate_ = x;
  }

  inline
  ::common::units_decimal* response::
  maximum_death_rate_detach ()
  {
    ::common::units_decimal* r = this->maximum_death_rate_;
    this->maximum_death_rate_ = 0;
    return r;
  }

  inline
  bool response::
  maximum_death_time_present () const
  {
    return this->maximum_death_time_ != 0;
  }

  inline
  const ::common::units_decimal& response::
  maximum_death_time () const
  {
    return *this->maximum_death_time_;
  }

  inline
  ::common::units_decimal& response::
  maximum_death_time ()
  {
    return *this->maximum_death_time_;
  }

  inline
  void response::
  maximum_death_time (::common::units_decimal* x)
  {
    delete this->maximum_death_time_;
    this->maximum_death_time_ = x;
  }

  inline
  ::common::units_decimal* response::
  maximum_death_time_detach ()
  {
    ::common::units_decimal* r = this->maximum_death_time_;
    this->maximum_death_time_ = 0;
    return r;
  }

  inline
  bool response::
  death_recovery_rate_present () const
  {
    return this->death_recovery_rate_ != 0;
  }

  inline
  const ::common::units_decimal& response::
  death_recovery_rate () const
  {
    return *this->death_recovery_rate_;
  }

  inline
  ::common::units_decimal& response::
  death_recovery_rate ()
  {
    return *this->death_recovery_rate_;
  }

  inline
  void response::
  death_recovery_rate (::common::units_decimal* x)
  {
    delete this->death_recovery_rate_;
    this->death_recovery_rate_ = x;
  }

  inline
  ::common::units_decimal* response::
  death_recovery_rate_detach ()
  {
    ::common::units_decimal* r = this->death_recovery_rate_;
    this->death_recovery_rate_ = 0;
    return r;
  }

  inline
  const response::response_observation_sequence& response::
  response_observation () const
  {
    return this->response_observation_;
  }

  inline
  response::response_observation_sequence& response::
  response_observation ()
  {
    return this->response_observation_;
  }

  inline
  bool response::
  custom_present () const
  {
    return this->custom_ != 0;
  }

  inline
  const ::common::custom& response::
  custom () const
  {
    return *this->custom_;
  }

  inline
  ::common::custom& response::
  custom ()
  {
    return *this->custom_;
  }

  inline
  void response::
  custom (::common::custom* x)
  {
    delete this->custom_;
    this->custom_ = x;
  }

  inline
  ::common::custom* response::
  custom_detach ()
  {
    ::common::custom* r = this->custom_;
    this->custom_ = 0;
    return r;
  }

  // response_observation
  //

  inline
  bool response_observation::
  time_present () const
  {
    return this->time_ != 0;
  }

  inline
  const ::common::units_decimal& response_observation::
  time () const
  {
    return *this->time_;
  }

  inline
  ::common::units_decimal& response_observation::
  time ()
  {
    return *this->time_;
  }

  inline
  void response_observation::
  time (::common::units_decimal* x)
  {
    delete this->time_;
    this->time_ = x;
  }

  inline
  ::common::units_decimal* response_observation::
  time_detach ()
  {
    ::common::units_decimal* r = this->time_;
    this->time_ = 0;
    return r;
  }

  inline
  bool response_observation::
  birth_rate_present () const
  {
    return this->birth_rate_ != 0;
  }

  inline
  const ::common::units_decimal_nonnegative& response_observation::
  birth_rate () const
  {
    return *this->birth_rate_;
  }

  inline
  ::common::units_decimal_nonnegative& response_observation::
  birth_rate ()
  {
    return *this->birth_rate_;
  }

  inline
  void response_observation::
  birth_rate (::common::units_decimal_nonnegative* x)
  {
    delete this->birth_rate_;
    this->birth_rate_ = x;
  }

  inline
  ::common::units_decimal_nonnegative* response_observation::
  birth_rate_detach ()
  {
    ::common::units_decimal_nonnegative* r = this->birth_rate_;
    this->birth_rate_ = 0;
    return r;
  }

  inline
  bool response_observation::
  death_rate_present () const
  {
    return this->death_rate_ != 0;
  }

  inline
  const ::common::units_decimal_nonnegative& response_observation::
  death_rate () const
  {
    return *this->death_rate_;
  }

  inline
  ::common::units_decimal_nonnegative& response_observation::
  death_rate ()
  {
    return *this->death_rate_;
  }

  inline
  void response_observation::
  death_rate (::common::units_decimal_nonnegative* x)
  {
    delete this->death_rate_;
    this->death_rate_ = x;
  }

  inline
  ::common::units_decimal_nonnegative* response_observation::
  death_rate_detach ()
  {
    ::common::units_decimal_nonnegative* r = this->death_rate_;
    this->death_rate_ = 0;
    return r;
  }

  inline
  bool response_observation::
  net_birth_rate_present () const
  {
    return this->net_birth_rate_ != 0;
  }

  inline
  const ::common::units_decimal& response_observation::
  net_birth_rate () const
  {
    return *this->net_birth_rate_;
  }

  inline
  ::common::units_decimal& response_observation::
  net_birth_rate ()
  {
    return *this->net_birth_rate_;
  }

  inline
  void response_observation::
  net_birth_rate (::common::units_decimal* x)
  {
    delete this->net_birth_rate_;
    this->net_birth_rate_ = x;
  }

  inline
  ::common::units_decimal* response_observation::
  net_birth_rate_detach ()
  {
    ::common::units_decimal* r = this->net_birth_rate_;
    this->net_birth_rate_ = 0;
    return r;
  }

  inline
  bool response_observation::
  net_death_rate_present () const
  {
    return this->net_death_rate_ != 0;
  }

  inline
  const ::common::units_decimal& response_observation::
  net_death_rate () const
  {
    return *this->net_death_rate_;
  }

  inline
  ::common::units_decimal& response_observation::
  net_death_rate ()
  {
    return *this->net_death_rate_;
  }

  inline
  void response_observation::
  net_death_rate (::common::units_decimal* x)
  {
    delete this->net_death_rate_;
    this->net_death_rate_ = x;
  }

  inline
  ::common::units_decimal* response_observation::
  net_death_rate_detach ()
  {
    ::common::units_decimal* r = this->net_death_rate_;
    this->net_death_rate_ = 0;
    return r;
  }

  inline
  bool response_observation::
  apoptotic_duration_present () const
  {
    return this->apoptotic_duration_ != 0;
  }

  inline
  const ::common::units_decimal& response_observation::
  apoptotic_duration () const
  {
    return *this->apoptotic_duration_;
  }

  inline
  ::common::units_decimal& response_observation::
  apoptotic_duration ()
  {
    return *this->apoptotic_duration_;
  }

  inline
  void response_observation::
  apoptotic_duration (::common::units_decimal* x)
  {
    delete this->apoptotic_duration_;
    this->apoptotic_duration_ = x;
  }

  inline
  ::common::units_decimal* response_observation::
  apoptotic_duration_detach ()
  {
    ::common::units_decimal* r = this->apoptotic_duration_;
    this->apoptotic_duration_ = 0;
    return r;
  }

  inline
  bool response_observation::
  percent_cell_viability_present () const
  {
    return this->percent_cell_viability_ != 0;
  }

  inline
  const ::common::units_decimal& response_observation::
  percent_cell_viability () const
  {
    return *this->percent_cell_viability_;
  }

  inline
  ::common::units_decimal& response_observation::
  percent_cell_viability ()
  {
    return *this->percent_cell_viability_;
  }

  inline
  void response_observation::
  percent_cell_viability (::common::units_decimal* x)
  {
    delete this->percent_cell_viability_;
    this->percent_cell_viability_ = x;
  }

  inline
  ::common::units_decimal* response_observation::
  percent_cell_viability_detach ()
  {
    ::common::units_decimal* r = this->percent_cell_viability_;
    this->percent_cell_viability_ = 0;
    return r;
  }

  inline
  bool response_observation::
  custom_present () const
  {
    return this->custom_ != 0;
  }

  inline
  const ::common::custom& response_observation::
  custom () const
  {
    return *this->custom_;
  }

  inline
  ::common::custom& response_observation::
  custom ()
  {
    return *this->custom_;
  }

  inline
  void response_observation::
  custom (::common::custom* x)
  {
    delete this->custom_;
    this->custom_ = x;
  }

  inline
  ::common::custom* response_observation::
  custom_detach ()
  {
    ::common::custom* r = this->custom_;
    this->custom_ = 0;
    return r;
  }

  // pharmacodynamics
  //

  inline
  const pharmacodynamics::therapy_measurement_set_sequence& pharmacodynamics::
  therapy_measurement_set () const
  {
    return this->therapy_measurement_set_;
  }

  inline
  pharmacodynamics::therapy_measurement_set_sequence& pharmacodynamics::
  therapy_measurement_set ()
  {
    return this->therapy_measurement_set_;
  }

  // therapy_measurement_set
  //

  inline
  bool therapy_measurement_set::
  ID_present () const
  {
    return this->ID_present_;
  }

  inline
  void therapy_measurement_set::
  ID_present (bool x)
  {
    this->ID_present_ = x;
  }

  inline
  unsigned short therapy_measurement_set::
  ID () const
  {
    return this->ID_;
  }

  inline
  unsigned short& therapy_measurement_set::
  ID ()
  {
    return this->ID_;
  }

  inline
  void therapy_measurement_set::
  ID (unsigned short x)
  {
    this->ID_ = x;
    this->ID_present_ = true;
  }

  inline
  const ::pkpd::therapy& therapy_measurement_set::
  therapy () const
  {
    return *this->therapy_;
  }

  inline
  ::pkpd::therapy& therapy_measurement_set::
  therapy ()
  {
    return *this->therapy_;
  }

  inline
  void therapy_measurement_set::
  therapy (::pkpd::therapy* x)
  {
    delete this->therapy_;
    this->therapy_ = x;
  }

  inline
  ::pkpd::therapy* therapy_measurement_set::
  therapy_detach ()
  {
    ::pkpd::therapy* r = this->therapy_;
    this->therapy_ = 0;
    return r;
  }

  inline
  const ::pkpd::response& therapy_measurement_set::
  response () const
  {
    return *this->response_;
  }

  inline
  ::pkpd::response& therapy_measurement_set::
  response ()
  {
    return *this->response_;
  }

  inline
  void therapy_measurement_set::
  response (::pkpd::response* x)
  {
    delete this->response_;
    this->response_ = x;
  }

  inline
  ::pkpd::response* therapy_measurement_set::
  response_detach ()
  {
    ::pkpd::response* r = this->response_;
    this->response_ = 0;
    return r;
  }

  // PKPD
  //

  inline
  const PKPD::drug_sequence& PKPD::
  drug () const
  {
    return this->drug_;
  }

  inline
  PKPD::drug_sequence& PKPD::
  drug ()
  {
    return this->drug_;
  }

  inline
  bool PKPD::
  pharmacodynamics_present () const
  {
    return this->pharmacodynamics_ != 0;
  }

  inline
  const ::pkpd::pharmacodynamics& PKPD::
  pharmacodynamics () const
  {
    return *this->pharmacodynamics_;
  }

  inline
  ::pkpd::pharmacodynamics& PKPD::
  pharmacodynamics ()
  {
    return *this->pharmacodynamics_;
  }

  inline
  void PKPD::
  pharmacodynamics (::pkpd::pharmacodynamics* x)
  {
    delete this->pharmacodynamics_;
    this->pharmacodynamics_ = x;
  }

  inline
  ::pkpd::pharmacodynamics* PKPD::
  pharmacodynamics_detach ()
  {
    ::pkpd::pharmacodynamics* r = this->pharmacodynamics_;
    this->pharmacodynamics_ = 0;
    return r;
  }
}

// Begin epilogue.
//
//
// End epilogue.

#endif // PKPD_IPP
